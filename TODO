TODO items
------------------------------------------
make sure ./cronjob runs ok, only need to run on production
on switch to production, kill delayed job, then restart and check
allow BOG to People#select_commitee, People#committee, Committees#download_spreadsheet

tasks
------------------------------------------
clean up database (resigned members, boats with no owners, etc., users that are no longer members)


non-transparent updates
-------------------------------------------------------------------
5) test flows with roles
   save rights for later reload
6) regenerate migrations
   reload old database & check
7) write script to run after migrations to fix everything up
   update_membership_mooring.rb
   update_membership_drysail.rb
   update_person_committee.rb
   add_treasurer_role.rb
   Right.synchronize_with_controllers then reload rights
   cleanup boats/assign mooring & drysail
   check Member role for every user
7.5) Check mail template   
8) check with Doug on viewing old mail
8.5) Deploy
10) Add log info update email

later
-----------
1) remove unused database fields (mooring_num, drysail_num)
2) add a fees table to be used in generating bills (active dues, senior dues, mooring fee, etc.)
3) add updated_by field
4) automatically check descendant roles/view all descendant roles?
   create hierarchy of roles (Member->BOG-> [Membership, Harbormaster, Communications])
    add parent to each role
    showing - display ancestor rights in a different color
    editing - display ancestor rights by making checkbox read only
    authorizing - traverse hierarchy
    see: http://www.leighhalliday.com/tree-structures-in-your-rails-models
    https://www.slideshare.net/billkarwin/models-for-hierarchical-data
    cache rights? into session?


Done
----------------------------------------------------------------------
2) fix membership filter/sort (persist filter options)
3) sortable mooring/depth on mooring index
4) add treasurer role
   assign a shared mooring - associate another member with the boat

deploy
-----------
git branches for staging: master
                 production: production  - modify .htaccess (PassengerAppEnv production)
                 need to merge before production deploy

review person model (compare to production version)
add application data/active data to memebership form
add new/edit to waiting list
capistrano bundler flags - do not do deployment
production secret key - env variable?
staging - use diffferent database
          use different directory
shorten header(Lake Champlain Yacht Club-> LCYC) on mobile devices
membership validation
find_dos
remove =>
clean up log messages
update rights database, remove obsolete entries
check session expired message
add partner xref to spreadsheet generation, for Log
add testing to complete coverage
add testing on permission/authorization stuff - current user, current membership
fix width of first name in person form
do not add committee when adding child
add confirmation unsubscribe request
allow admin user email to be non-member
test unsubscribe function
check message for duplicate user email when creating new account
remove rights that aren't needed (anything that skips authorization)
adding boat, check for duplicate?
