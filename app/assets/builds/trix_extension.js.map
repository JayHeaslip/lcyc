{
  "version": 3,
  "sources": ["../../../node_modules/trix/src/trix/config/attachments.js", "../../../node_modules/trix/src/trix/config/block_attributes.js", "../../../node_modules/trix/src/trix/config/browser.js", "../../../node_modules/trix/src/trix/config/dompurify.js", "../../../node_modules/trix/src/trix/config/lang.js", "../../../node_modules/trix/src/trix/config/file_size_formatting.js", "../../../node_modules/trix/src/trix/constants.js", "../../../node_modules/trix/src/trix/core/helpers/extend.js", "../../../node_modules/trix/src/trix/core/helpers/dom.js", "../../../node_modules/trix/src/trix/config/input.js", "../../../node_modules/trix/src/trix/config/key_names.js", "../../../node_modules/trix/src/trix/config/parser.js", "../../../node_modules/trix/src/trix/config/text_attributes.js", "../../../node_modules/trix/src/trix/config/toolbar.js", "../../../node_modules/trix/src/trix/config/undo.js", "../../../node_modules/trix/src/trix/config/css.js", "../../../node_modules/trix/src/trix/core/basic_object.js", "../../../node_modules/trix/src/trix/core/utilities/utf16_string.js", "../../../node_modules/trix/src/trix/core/object.js", "../../../node_modules/trix/src/trix/core/helpers/arrays.js", "../../../node_modules/trix/src/trix/core/helpers/bidi.js", "../../../node_modules/trix/src/trix/core/helpers/config.js", "../../../node_modules/trix/src/trix/core/helpers/custom_elements.js", "../../../node_modules/trix/src/trix/core/helpers/events.js", "../../../node_modules/trix/src/trix/core/helpers/functions.js", "../../../node_modules/trix/src/trix/core/helpers/objects.js", "../../../node_modules/trix/src/trix/core/helpers/ranges.js", "../../../node_modules/trix/src/trix/observers/selection_change_observer.js", "../../../node_modules/trix/src/trix/core/helpers/strings.js", "../../../node_modules/trix/src/trix/core/collections/hash.js", "../../../node_modules/trix/src/trix/core/collections/object_group.js", "../../../node_modules/trix/src/trix/core/collections/object_map.js", "../../../node_modules/trix/src/trix/core/collections/element_store.js", "../../../node_modules/trix/src/trix/core/utilities/operation.js", "../../../node_modules/trix/src/trix/views/object_view.js", "../../../node_modules/trix/node_modules/dompurify/dist/purify.es.mjs", "../../../node_modules/trix/src/trix/models/html_sanitizer.js", "../../../node_modules/trix/src/trix/views/attachment_view.js", "../../../node_modules/trix/src/trix/views/previewable_attachment_view.js", "../../../node_modules/trix/src/trix/views/piece_view.js", "../../../node_modules/trix/src/trix/views/text_view.js", "../../../node_modules/trix/src/trix/views/block_view.js", "../../../node_modules/trix/src/trix/views/document_view.js", "../../../node_modules/trix/src/trix/models/piece.js", "../../../node_modules/trix/src/trix/operations/image_preload_operation.js", "../../../node_modules/trix/src/trix/models/attachment.js", "../../../node_modules/trix/src/trix/models/attachment_piece.js", "../../../node_modules/trix/src/trix/models/string_piece.js", "../../../node_modules/trix/src/trix/models/splittable_list.js", "../../../node_modules/trix/src/trix/models/text.js", "../../../node_modules/trix/src/trix/models/block.js", "../../../node_modules/trix/src/trix/models/document.js", "../../../node_modules/trix/src/trix/models/html_parser.js", "../../../node_modules/trix/src/trix/core/serialization.js", "../../../node_modules/trix/src/trix/models/managed_attachment.js", "../../../node_modules/trix/src/trix/models/attachment_manager.js", "../../../node_modules/trix/src/trix/models/line_break_insertion.js", "../../../node_modules/trix/src/trix/models/composition.js", "../../../node_modules/trix/src/trix/models/undo_manager.js", "../../../node_modules/trix/src/trix/filters/filter.js", "../../../node_modules/trix/src/trix/filters/attachment_gallery_filter.js", "../../../node_modules/trix/src/trix/models/editor.js", "../../../node_modules/trix/src/trix/models/location_mapper.js", "../../../node_modules/trix/src/trix/models/point_mapper.js", "../../../node_modules/trix/src/trix/models/selection_manager.js", "../../../node_modules/trix/src/trix/controllers/attachment_editor_controller.js", "../../../node_modules/trix/src/trix/controllers/composition_controller.js", "../../../node_modules/trix/src/trix/controllers/controller.js", "../../../node_modules/trix/src/trix/observers/mutation_observer.js", "../../../node_modules/trix/src/trix/operations/file_verification_operation.js", "../../../node_modules/trix/src/trix/models/flaky_android_keyboard_detector.js", "../../../node_modules/trix/src/trix/controllers/input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_0_input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_2_input_controller.js", "../../../node_modules/trix/src/trix/controllers/toolbar_controller.js", "../../../node_modules/trix/src/trix/controllers/editor_controller.js", "../../../node_modules/trix/src/trix/elements/trix_toolbar_element.js", "../../../node_modules/trix/src/trix/elements/trix_editor_element.js", "../../../node_modules/trix/src/trix/trix.js", "../../javascript/trix_extension.js"],
  "sourcesContent": ["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n", "const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n", "const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n", "export default {\n  ADD_ATTR: [ \"language\" ],\n  SAFE_FOR_XML: false,\n  RETURN_DOM: true\n}\n", "export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n", "/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n", "export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n", "export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n", "import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n", "import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n", "export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n", "export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n", "import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n", "import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" data-trix-validate-href required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n", "const undo = { interval: 5000 }\nexport default undo\n", "export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n", "export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n", "import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n", "import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n", "/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    const { nonce, content } = element\n    return nonce == \"\" ? content : nonce\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n", "const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n\nexport function shouldRenderInmmediatelyToDealWithIOSDictation(inputEvent) {\n  if (/iPhone|iPad/.test(navigator.userAgent)) {\n    // Handle garbled content and duplicated newlines when using dictation on iOS 18+. Upon dictation completion, iOS sends\n    // the list of insertText / insertParagraph events in a quick sequence. If we don't render\n    // the editor synchronously, the internal range fails to update and results in garbled content or duplicated newlines.\n    //\n    // This workaround is necessary because iOS doesn't send composing events as expected while dictating:\n    // https://bugs.webkit.org/show_bug.cgi?id=261764\n    return !inputEvent.inputType || inputEvent.inputType === \"insertParagraph\"\n  } else {\n    return false\n  }\n}\n", "export const defer = (fn) => setTimeout(fn, 1)\n", "/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n", "/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n", "export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n", "export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n", "import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n", "/*! @license DOMPurify 3.2.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.5/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.5';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\nimport DOMPurify from \"dompurify\"\nimport * as config from \"trix/config\"\n\nDOMPurify.addHook(\"uponSanitizeAttribute\", function (node, data) {\n  const allowedAttributePattern = /^data-trix-/\n  if (allowedAttributePattern.test(data.attrName)) {\n    data.forceKeepAttr = true\n  }\n})\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static setHTML(element, html, options) {\n    const sanitizedElement = new this(html, options).sanitize()\n    const sanitizedHtml = sanitizedElement.getHTML ? sanitizedElement.getHTML() : sanitizedElement.outerHTML\n    element.innerHTML = sanitizedHtml\n  }\n\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements, purifyOptions } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.purifyOptions = purifyOptions || {}\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    this.normalizeListElementNesting()\n    const purifyConfig = Object.assign({}, config.dompurify, this.purifyOptions)\n    DOMPurify.setConfig(purifyConfig)\n    this.body = DOMPurify.sanitize(this.body)\n\n    return this.body\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n", "import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      HTMLSanitizer.setHTML(innerElement, this.attachment.getContent())\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  HTMLSanitizer.setHTML(div, html || \"\")\n  return div.querySelector(tagName)\n}\n", "import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n", "/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n", "/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n", "import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n", "import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n", "import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n", "import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n", "import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n", "/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n", "/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement, purifyOptions } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.purifyOptions = purifyOptions\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      HTMLSanitizer.setHTML(this.containerElement, this.html, { purifyOptions: this.purifyOptions })\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n", "/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n", "import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n", "import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n", "export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n", "import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html, { purifyOptions: { SAFE_FOR_XML: true } }).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n", "const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n", "import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n", "import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n", "/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n", "/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n", "/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n", "import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n", "import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n", "/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n", "import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n", "import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n", "import { getAllAttributeNames, shouldRenderInmmediatelyToDealWithIOSDictation, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      const immmediateRender = shouldRenderInmmediatelyToDealWithIOSDictation(event)\n\n      if (handler) {\n        this.withEvent(event, handler)\n\n        if (!immmediateRender) {\n          this.scheduleRender()\n        }\n      }\n\n      if (immmediateRender) {\n        this.render()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nimport DOMPurify from \"dompurify\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n\n    if (input.willValidate) {\n      input.setCustomValidity(\"\")\n      if (!input.checkValidity() || !this.isSafeAttribute(input)) {\n        input.setCustomValidity(\"Invalid value\")\n        input.setAttribute(\"data-trix-validate\", \"\")\n        input.classList.add(\"trix-validate\")\n        return input.focus()\n      }\n    }\n    this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n    return this.hideDialog()\n  }\n\n  isSafeAttribute(input) {\n    if (input.hasAttribute(\"data-trix-validate-href\")) {\n      return DOMPurify.isValidAttribute(\"a\", \"href\", input.value)\n    } else {\n      return true\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setFormValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n", "import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n", "import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nclass ElementInternalsDelegate {\n  #internals\n\n  constructor(element) {\n    this.element = element\n    this.#internals = element.attachInternals()\n  }\n\n  connectedCallback() {\n    this.#validate()\n  }\n\n  disconnectedCallback() {\n  }\n\n  get labels() {\n    return this.#internals.labels\n  }\n\n  get disabled() {\n    return this.element.inputElement?.disabled\n  }\n\n  set disabled(value) {\n    this.element.toggleAttribute(\"disabled\", value)\n  }\n\n  get required() {\n    return this.element.hasAttribute(\"required\")\n  }\n\n  set required(value) {\n    this.element.toggleAttribute(\"required\", value)\n    this.#validate()\n  }\n\n  get validity() {\n    return this.#internals.validity\n  }\n\n  get validationMessage() {\n    return this.#internals.validationMessage\n  }\n\n  get willValidate() {\n    return this.#internals.willValidate\n  }\n\n  setFormValue(value) {\n    this.#validate()\n  }\n\n  checkValidity() {\n    return this.#internals.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#internals.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#validate(validationMessage)\n  }\n\n  #validate(customValidationMessage = \"\") {\n    const { required, value } = this.element\n    const valueMissing = required && !value\n    const customError = !!customValidationMessage\n    const input = makeElement(\"input\", { required })\n    const validationMessage = customValidationMessage || input.validationMessage\n\n    this.#internals.setValidity({ valueMissing, customError }, validationMessage)\n  }\n}\n\nclass LegacyDelegate {\n  #focusHandler\n\n  constructor(element) {\n    this.element = element\n  }\n\n  connectedCallback() {\n    this.#focusHandler = ensureAriaLabel(this.element)\n    window.addEventListener(\"reset\", this.#resetBubbled, false)\n    window.addEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  disconnectedCallback() {\n    this.#focusHandler?.destroy()\n    window.removeEventListener(\"reset\", this.#resetBubbled, false)\n    window.removeEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  get labels() {\n    const labels = []\n    if (this.element.id && this.element.ownerDocument) {\n      labels.push(...Array.from(this.element.ownerDocument.querySelectorAll(`label[for='${this.element.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this.element, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this.element, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get disabled() {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set disabled(value) {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n  }\n\n  get required() {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set required(value) {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n  }\n\n  get validity() {\n    console.warn(\"This browser does not support the validity property for trix-editor elements.\")\n    return null\n  }\n\n  get validationMessage() {\n    console.warn(\"This browser does not support the validationMessage property for trix-editor elements.\")\n\n    return \"\"\n  }\n\n  get willValidate() {\n    console.warn(\"This browser does not support the willValidate property for trix-editor elements.\")\n\n    return false\n  }\n\n  setFormValue(value) {\n  }\n\n  checkValidity() {\n    console.warn(\"This browser does not support checkValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  reportValidity() {\n    console.warn(\"This browser does not support reportValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  setCustomValidity(validationMessage) {\n    console.warn(\"This browser does not support setCustomValidity(validationMessage) for trix-editor elements.\")\n  }\n\n  #resetBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (event.target !== this.element.form) return\n    this.element.reset()\n  }\n\n  #clickBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (this.element.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    this.element.focus()\n  }\n}\n\nexport default class TrixEditorElement extends HTMLElement {\n  static formAssociated = \"ElementInternals\" in window\n\n  static observedAttributes = [ \"connected\" ]\n\n  #delegate\n\n  constructor() {\n    super()\n    this.#delegate = this.constructor.formAssociated ?\n      new ElementInternalsDelegate(this) :\n      new LegacyDelegate(this)\n  }\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    return this.#delegate.labels\n  }\n\n  get disabled() {\n    return this.#delegate.disabled\n  }\n\n  set disabled(value) {\n    this.#delegate.disabled = value\n  }\n\n  get required() {\n    return this.#delegate.required\n  }\n\n  set required(value) {\n    this.#delegate.required = value\n  }\n\n  get validity() {\n    return this.#delegate.validity\n  }\n\n  get validationMessage() {\n    return this.#delegate.validationMessage\n  }\n\n  get willValidate() {\n    return this.#delegate.willValidate\n  }\n\n  get type() {\n    return this.localName\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      this.internalToolbar = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(this.internalToolbar, this)\n      return this.internalToolbar\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Element callbacks\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"connected\" && this.isConnected && oldValue != null && oldValue !== newValue) {\n      requestAnimationFrame(() => this.reconnect())\n    }\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setFormValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n      this.#delegate.setFormValue(value)\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.#delegate.connectedCallback()\n\n      this.toggleAttribute(\"connected\", true)\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.#delegate.disconnectedCallback()\n    this.toggleAttribute(\"connected\", false)\n  }\n\n  reconnect() {\n    this.removeInternalToolbar()\n    this.disconnectedCallback()\n    this.connectedCallback()\n  }\n\n  removeInternalToolbar() {\n    this.internalToolbar?.remove()\n    this.internalToolbar = null\n  }\n\n  // Form support\n\n  checkValidity() {\n    return this.#delegate.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#delegate.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#delegate.setCustomValidity(validationMessage)\n  }\n\n  formDisabledCallback(disabled) {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled\n    }\n    this.toggleAttribute(\"contenteditable\", !disabled)\n  }\n\n  formResetCallback() {\n    this.reset()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n", "import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n", "import Trix from 'trix';\n\nwindow.Trix = Trix; // Don't need to bind to the window, but useful for debugging.\nTrix.config.toolbar.getDefaultHTML = toolbarDefaultHTML;\n\nvar lang$1 = {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption\u2026\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL\u2026\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\"\n};\n\nfunction toolbarDefaultHTML() {\n    const {lang} = Trix.config;\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n}\n"],
  "mappings": "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",
  "names": ["attachmentSelector", "attachments", "preview", "presentation", "caption", "name", "size", "file", "attributes", "default", "tagName", "parse", "quote", "nestable", "heading1", "terminal", "breakOnReturn", "group", "code", "htmlAttributes", "text", "plaintext", "bulletList", "bullet", "listAttribute", "test", "element", "parentNode", "this", "numberList", "number", "attachmentGallery", "exclusive", "_element$tagName", "toLowerCase", "androidVersionMatch", "navigator", "userAgent", "match", "androidVersion", "parseInt", "browser$1", "composesExistingText", "recentAndroid", "samsungAndroid", "forcesObjectResizing", "supportsInputEvents", "InputEvent", "every", "prop", "prototype", "dompurify", "ADD_ATTR", "SAFE_FOR_XML", "RETURN_DOM", "lang$1", "attachFiles", "bold", "bullets", "byte", "bytes", "captionPlaceholder", "indent", "italic", "link", "numbers", "outdent", "redo", "remove", "strike", "undo", "unlink", "url", "urlPlaceholder", "GB", "KB", "MB", "PB", "TB", "sizes", "lang", "file_size_formatting", "prefix", "precision", "formatter", "concat", "base", "exp", "Math", "floor", "log", "withoutInsignificantZeros", "pow", "toFixed", "replace", "ZERO_WIDTH_SPACE", "NON_BREAKING_SPACE", "extend", "properties", "key", "value", "html", "document", "documentElement", "matches", "handleEvent", "eventName", "onElement", "matchingSelector", "withCallback", "inPhase", "preventDefault", "times", "arguments", "length", "undefined", "selector", "useCapture", "handler", "event", "destroy", "target", "findClosestElementFromNode", "call", "removeEventListener", "addEventListener", "triggerEvent", "bubbles", "cancelable", "createEvent", "initEvent", "dispatchEvent", "elementMatchesSelector", "nodeType", "node", "untilNode", "Node", "ELEMENT_NODE", "closest", "innerElementIsActive", "activeElement", "elementContainsNode", "findChildIndexOfNode", "_node", "childIndex", "previousSibling", "removeNode", "_node$parentNode", "removeChild", "walkTree", "tree", "onlyNodesOfType", "usingFilter", "expandEntityReferences", "whatToShow", "NodeFilter", "SHOW_ELEMENT", "SHOW_TEXT", "SHOW_COMMENT", "SHOW_ALL", "createTreeWalker", "makeElement", "tag", "options", "createElement", "editable", "contenteditable", "setAttribute", "style", "data", "dataset", "className", "split", "forEach", "classList", "add", "textContent", "childNodes", "childNode", "appendChild", "blockTagNames", "getBlockTagNames", "blockAttributes", "push", "nodeIsBlockContainer", "nodeIsBlockStartComment", "firstChild", "nodeIsBlockStart", "strict", "includes", "nodeIsCommentNode", "COMMENT_NODE", "nodeIsCursorTarget", "nodeIsTextNode", "trixCursorTarget", "nodeIsAttachmentElement", "nodeIsEmptyTextNode", "TEXT_NODE", "input", "level2Enabled", "getLevel", "browser", "pickFiles", "callback", "type", "multiple", "hidden", "id", "fileInputId", "files", "getElementById", "body", "click", "parser", "removeBlankTableCells", "tableCellSeparator", "tableRowSeparator", "text_attributes", "inheritable", "window", "getComputedStyle", "fontWeight", "fontStyle", "href", "groupTagName", "getAttribute", "frozen", "backgroundColor", "toolbar", "getDefaultHTML", "interval", "attachment", "attachmentCaption", "attachmentCaptionEditor", "attachmentMetadata", "attachmentMetadataContainer", "attachmentName", "attachmentProgress", "attachmentSize", "attachmentToolbar", "BasicObject", "expression", "toMethod", "toProperty", "optional", "parseProxyMethodExpression", "subject", "object", "_this$toMethod", "_object", "apply", "proxyMethodExpressionPattern", "Error", "args", "Function", "RegExp", "UTF16String", "box", "fromUCS2String", "toString", "ucs2String", "ucs2decode", "codepoints", "ucs2encode", "constructor", "super", "ucs2Length", "offsetToUCS2Offset", "offset", "slice", "max", "offsetFromUCS2Offset", "ucs2Offset", "fromCodepoints", "charAt", "isEqualTo", "toJSON", "getCacheKey", "hasArrayFrom", "_Array$from", "Array", "from", "hasStringCodePointAt", "_$codePointAt", "codePointAt", "hasStringFromCodePoint", "_String$fromCodePoint", "String", "fromCodePoint", "string", "map", "char", "output", "counter", "charCodeAt", "extra", "array", "result", "fromCharCode", "join", "TrixObject", "jsonString", "fromJSON", "JSON", "hasSameConstructorAs", "inspect", "parts", "contents", "contentsForInspection", "toJSONString", "stringify", "toUTF16String", "arraysAreEqual", "a", "b", "index", "spliceArray", "_len", "_key", "splice", "RTL_PATTERN", "getDirection", "dir", "dirName", "textArea", "form", "supportsDirName", "FormData", "has", "error", "supportsDirSelector", "get", "trim", "allAttributeNames", "blockAttributeNames", "textAttributeNames", "listAttributeNames", "getAllAttributeNames", "getTextAttributeNames", "getBlockAttributeNames", "getBlockConfig", "attributeName", "config", "Object", "keys", "getTextConfig", "installDefaultCSSForTagName", "defaultCSS", "insertStyleElementForTagName", "nonce", "getCSPNonce", "head", "insertBefore", "getMetaElement", "content", "querySelector", "testTransferData", "dataTransferIsPlainText", "dataTransfer", "getData", "DOMParser", "parseFromString", "keyEventIsKeyboardCommand", "platform", "metaKey", "ctrlKey", "defer", "fn", "setTimeout", "copyObject", "objectsAreEqual", "normalizeRange", "range", "isArray", "copyValue", "rangeIsCollapsed", "start", "end", "rangeValuesAreEqual", "rangesAreEqual", "leftRange", "rightRange", "leftStart", "leftEnd", "rightStart", "rightEnd", "left", "right", "SelectionChangeObserver", "update", "bind", "selectionManagers", "started", "stop", "registerSelectionManager", "selectionManager", "unregisterSelectionManager", "filter", "sm", "notifySelectionManagersOfSelectionChange", "selectionDidChange", "reset", "selectionChangeObserver", "getDOMSelection", "selection", "getSelection", "rangeCount", "getDOMRange", "_getDOMSelection", "domRange", "getRangeAt", "domRangeIsPrivate", "setDOMRange", "removeAllRanges", "addRange", "nodeIsPrivate", "startContainer", "endContainer", "getPrototypeOf", "normalizeSpaces", "breakableWhitespacePattern", "squishBreakableWhitespace", "source", "utf16StringDifferences", "diffA", "utf16StringDifference", "utf16String", "diffB", "leftIndex", "rightIndexA", "rightIndexB", "Hash", "fromCommonAttributesOfObjects", "objects", "hash", "getKeys", "getKeysCommonToHash", "values", "copy", "merge", "unbox", "toArray", "isEmpty", "toObject", "keyToRemove", "sort", "ObjectGroup", "groupObjects", "ungroupedObjects", "depth", "asTree", "_object$canBeGrouped2", "_object$canBeGrouped", "_group$canBeGroupedWi", "_group", "canBeGrouped", "canBeGroupedWith", "getObjects", "getDepth", "ObjectMap", "find", "ElementStore", "elements", "getKey", "trixStoreKey", "Operation", "isPerforming", "performing", "hasPerformed", "performed", "hasSucceeded", "succeeded", "hasFailed", "getPromise", "promise", "Promise", "resolve", "reject", "perform", "release", "_this$promise", "_this$promise$cancel", "cancel", "proxyMethod", "ObjectView", "childViews", "rootView", "getNodes", "nodes", "createNodes", "cloneNode", "invalidate", "_this$parentView", "parentView", "invalidateViewForObject", "_this$findViewForObje", "findViewForObject", "findOrCreateCachedChildView", "viewClass", "view", "getCachedViewForObject", "recordChildView", "createChildView", "cacheViewForObject", "ObjectGroupView", "getAllChildViews", "views", "childView", "findElement", "findElementForObject", "getViewCache", "isViewCachingEnabled", "viewCache", "shouldCacheViews", "enableViewCaching", "disableViewCaching", "_this$getViewCache", "cache", "garbageCollectCachedViews", "objectKeys", "objectGroup", "getChildViews", "createContainerElement", "entries", "setPrototypeOf", "isFrozen", "getOwnPropertyDescriptor", "freeze", "seal", "create", "construct", "Reflect", "x", "fun", "thisValue", "Func", "arrayForEach", "unapply", "arrayLastIndexOf", "lastIndexOf", "arrayPop", "pop", "arrayPush", "arraySplice", "stringToLowerCase", "stringToString", "stringMatch", "stringReplace", "stringIndexOf", "indexOf", "stringTrim", "objectHasOwnProperty", "hasOwnProperty", "regExpTest", "typeErrorCreate", "func", "TypeError", "_len2", "_key2", "thisArg", "lastIndex", "addToSet", "set", "transformCaseFunc", "l", "lcElement", "cleanArray", "clone", "newObject", "property", "lookupGetter", "desc", "t", "e", "i", "n", "r", "o", "s", "c", "u", "h", "d", "g", "m", "p", "f", "v", "A", "y", "C", "E", "S", "R", "k", "T", "w", "L", "D", "N", "I", "O", "F", "P", "M", "B", "_", "j", "W", "U", "V", "z", "q", "H", "J", "K", "G", "Y", "X", "$", "Z", "Q", "tt", "et", "it", "nt", "rt", "ot", "st", "at", "lt", "ct", "ut", "ht", "dt", "gt", "mt", "pt", "ft", "bt", "vt", "At", "yt", "xt", "Ct", "Et", "St", "Rt", "kt", "Tt", "wt", "Lt", "Dt", "Nt", "It", "Ot", "Ft", "Pt", "Mt", "Bt", "_t", "jt", "Wt", "Vt", "Ut", "zt", "qt", "DOMPurify", "addHook", "attrName", "forceKeepAttr", "DEFAULT_ALLOWED_ATTRIBUTES", "DEFAULT_FORBIDDEN_PROTOCOLS", "DEFAULT_FORBIDDEN_ELEMENTS", "HTMLSanitizer", "sanitizedElement", "sanitize", "sanitizedHtml", "getHTML", "outerHTML", "innerHTML", "sanitizer", "allowedAttributes", "forbiddenProtocols", "forbiddenElements", "purifyOptions", "createBodyElementForHTML", "sanitizeElements", "normalizeListElementNesting", "purifyConfig", "assign", "setConfig", "getBody", "walker", "nodesToRemove", "nextNode", "currentNode", "elementIsRemovable", "sanitizeElement", "hasAttribute", "protocol", "removeAttribute", "_ref", "querySelectorAll", "listElement", "previousElement", "previousElementSibling", "elementIsForbidden", "elementIsntSerializable", "doc", "implementation", "createHTMLDocument", "css", "AttachmentView", "uploadProgressDelegate", "attachmentPiece", "piece", "createContentNodes", "innerElement", "figure", "getClassName", "getHref", "tabindex", "hasContent", "setHTML", "getContent", "createCaptionElement", "isPending", "progressElement", "class", "getUploadProgress", "trixMutable", "createCursorTarget", "figcaption", "getCaption", "captionConfig", "getCaptionConfig", "getFilename", "getFormattedFilesize", "nameElement", "createTextNode", "sizeElement", "names", "getType", "extension", "getExtension", "trixAttachment", "trixContentType", "getContentType", "trixId", "trixAttributes", "trixSerialize", "htmlContainsTagName", "_config$attachments$t", "findProgressElement", "_this$findElement", "attachmentDidChangeUploadProgress", "div", "PreviewableAttachmentView", "previewDelegate", "image", "src", "refresh", "updateAttributesForImage", "getURL", "previewURL", "getPreviewURL", "serializedAttributes", "width", "getWidth", "height", "getHeight", "storeKey", "attachmentDidChangeAttributes", "PieceView", "getAttributes", "textConfig", "context", "createAttachmentNodes", "createStringNodes", "_element", "firstElementChild", "isPreviewable", "_this$textConfig", "iterable", "substring", "preserveSpaces", "styles", "pendingElement", "styleProperty", "isLast", "isFirst", "followsWhitespace", "TextView", "pieces", "getPieces", "endsWithWhitespace", "previousPiece", "BlockView", "block", "createComment", "_getBlockConfig", "getLastAttribute", "textView", "shouldAddExtraNewlineElement", "isRTL", "getBlockBreakPosition", "DocumentView", "render", "sync", "elementStore", "setDocument", "shadowElement", "getBlocks", "isSynced", "elementsHaveEqualHTML", "fragment", "createDocumentFragmentForSync", "lastChild", "didSync", "findStoredElements", "createDocumentFragment", "storedElement", "replaceChild", "otherElement", "ignoreSpaces", "Piece", "types", "pieceJSON", "copyWithAttributes", "getValue", "copyWithAdditionalAttributes", "copyWithoutAttribute", "attribute", "getAttributesHash", "hasSameStringValueAsPiece", "hasSameAttributesAsPiece", "isBlockBreak", "isSerializable", "getLength", "canBeConsolidatedWith", "_defineProperty", "ImagePreloadOperation", "Image", "onload", "naturalWidth", "naturalHeight", "onerror", "Attachment", "attributesForFile", "setFile", "filename", "filesize", "contentType", "attachmentJSON", "releaseFile", "didChangeAttributes", "setAttributes", "newAttributes", "_this$previewDelegate", "_this$previewDelegate2", "_this$delegate", "_this$delegate$attach", "delegate", "preloadURL", "previewablePattern", "getFilesize", "_this$getFilename$mat", "getFile", "preloadFile", "releasePreloadedFile", "uploadProgress", "setUploadProgress", "_this$uploadProgressD", "_this$uploadProgressD2", "preloadingURL", "setPreviewURL", "_this$previewDelegate3", "_this$previewDelegate4", "_this$delegate2", "_this$delegate2$attac", "attachmentDidChangePreviewURL", "preload", "fileObjectURL", "URL", "createObjectURL", "revokeObjectURL", "then", "catch", "AttachmentPiece", "ensureAttachmentExclusivelyHasAttribute", "removeProhibitedAttributes", "permittedAttributes", "_piece$attachment", "json", "toConsole", "registerType", "StringPiece", "consolidateWith", "splitAtOffset", "SplittableList", "eachObject", "insertObjectAtIndex", "insertSplittableListAtIndex", "splittableList", "insertSplittableListAtPosition", "position", "splitObjectAtPosition", "editObjectAtIndex", "replaceObjectAtIndex", "removeObjectAtIndex", "getObjectAtIndex", "getSplittableListInRange", "rightIndex", "splitObjectsAtRange", "selectSplittableList", "removeObjectsInRange", "transformObjectsInRange", "transform", "transformedObjects", "rightOuterIndex", "leftInnerIndex", "startOfRange", "endOfRange", "getObjectAtPosition", "findIndexAndOffsetAtPosition", "splitIndex", "splitOffset", "leftObject", "rightObject", "consolidate", "pendingObject", "_pendingObject$canBeC", "_pendingObject", "consolidateFromIndexToIndex", "startIndex", "endIndex", "objectsInRange", "consolidatedInRange", "currentPosition", "nextPosition", "findPositionAtIndexAndOffset", "currentIndex", "getEndPosition", "endPosition", "objectArraysAreEqual", "Text", "textJSON", "notEmpty", "pieceList", "copyWithPieceList", "copyUsingObjectMap", "objectMap", "appendText", "insertTextAtPosition", "removeTextAtRange", "replaceTextAtRange", "moveTextFromRangeToPosition", "getTextAtRange", "addAttributeAtRange", "addAttributesAtRange", "removeAttributeAtRange", "setAttributesAtRange", "getAttributesAtPosition", "_this$pieceList$getOb", "getCommonAttributes", "getCommonAttributesAtRange", "getExpandedRangeForAttributeAtOffset", "getStringAtRange", "getStringAtPosition", "startsWithString", "endsWithString", "getAttachmentPieces", "getAttachments", "getAttachmentAndPositionById", "attachmentId", "getAttachmentById", "getRangeOfAttachment", "attachmentAndPosition", "updateAttributesForAttachment", "_text$pieceList", "eachPiece", "getPieceAtPosition", "toSerializableText", "Block", "blockJSON", "applyBlockBreakToText", "copyWithText", "copyWithoutText", "copyWithoutAttributes", "mappedText", "addAttribute", "expandAttribute", "addHTMLAttribute", "removeLastValue", "removeLastAttribute", "getLastElement", "getAttributeLevel", "getAttributeAtLevel", "level", "hasAttributes", "getLastNestableAttribute", "getNestableAttributes", "getNestingLevel", "decreaseNestingLevel", "increaseNestingLevel", "getListItemAttributes", "isListItem", "isTerminalBlock", "_getBlockConfig2", "breaksOnReturn", "_getBlockConfig3", "findLineBreakInDirectionFromPosition", "direction", "newlineText", "textForStringWithAttributes", "getTextWithoutBlockBreak", "textEndsInBlockBreak", "otherBlock", "otherAttributes", "otherAttribute", "getListAttributeNames", "unmarkExistingInnerBlockBreaksInText", "addBlockBreakToText", "modified", "innerPieces", "lastPiece", "unmarkBlockBreakPiece", "blockBreakText", "blockBreak", "Document", "documentJSON", "textAttributes", "blocks", "blockList", "getBlockAtIndex", "consolidateBlocks", "copyUsingObjectsFromDocument", "sourceDocument", "copyWithBaseBlockAttributes", "replaceBlock", "oldBlock", "newBlock", "insertDocumentAtRange", "locationFromPosition", "getBlockAtPosition", "mergeDocumentAtRange", "formattedDocument", "startPosition", "startLocation", "baseBlockAttributes", "getBaseBlockAttributes", "trailingBlockAttributes", "leadingBlockAttributes", "blockCount", "getBlockCount", "firstBlock", "firstText", "insertTextAtRange", "leftPosition", "rightPosition", "leftLocation", "rightLocation", "locationRangeFromRange", "leftOffset", "leftBlock", "rightOffset", "rightBlock", "leftText", "rightText", "affectedBlockCount", "getDocumentAtRange", "movingRightward", "eachBlockAtRange", "textRange", "eachBlock", "getTextAtIndex", "removeAttributeForAttachment", "setHTMLAttributeAtPosition", "updatedBlock", "insertBlockBreakAtRange", "applyBlockAttributeAtRange", "expanded", "expandRangeToLineBreaksAndSplitBlocks", "blockConfig", "removeLastListAttributeAtRange", "exceptAttributeName", "converted", "convertLineBreaksToBlockBreaksInRange", "removeBlockAttributesAtRange", "removeLastTerminalAttributeAtRange", "consolidateBlocksAtRange", "lastAttributeName", "endLocation", "startBlock", "positionFromLocation", "endBlock", "_this$getBlockAtIndex", "getTextAtPosition", "getCharacterAtPosition", "getEditCount", "editCount", "getCommonAttributesAtPosition", "attributesForBlock", "commonAttributes", "attributesLeft", "inheritableAttributes", "getRangeOfCommonAttributeAtPosition", "startOffset", "endOffset", "blockIndex", "lastAttributeIndex", "min", "attachmentPieces", "getLocationRangeOfAttachment", "getAttachmentPieceForAttachment", "findRangesForBlockAttribute", "ranges", "findRangesForTextAttribute", "withValue", "location", "locationRangeFromPosition", "rangeFromLocationRange", "locationRange", "getTexts", "toSerializableDocument", "pieceForString", "parseTrixDataAttribute", "HTMLParser", "referenceElement", "blockElements", "processedElements", "getDocument", "createHiddenContainer", "containerElement", "nodeFilter", "processNode", "translateBlockElementMarginsToNewlines", "removeHiddenContainer", "display", "nextSibling", "isInsignificantTextNode", "appendBlockForTextNode", "processTextNode", "appendBlockForElement", "processElement", "currentBlockElement", "isBlockElement", "appendStringWithAttributes", "_this$currentBlock", "getBlockAttributes", "getBlockHTMLAttributes", "currentBlock", "appendBlockForAttributesWithElement", "elementIsBlockElement", "currentBlockContainsElement", "parentBlockElement", "findParentBlockElement", "appendEmptyBlock", "parentElement", "_node$previousSibling", "elementCanDisplayPreformattedText", "stringEndsWithWhitespace", "leftTrimBreakableWhitespace", "getTextAttributes", "appendAttachmentWithAttributes", "isExtraBR", "dimensions", "needsTableSeparator", "appendPiece", "appendStringToTextAtIndex", "prependStringToTextAtIndex", "unshift", "configAttr", "attributeInheritedFromBlock", "blockElement", "findBlockElementAncestors", "attrConfig", "_attrConfig$test", "reverse", "settings", "ancestors", "stringIsAllBreakableWhitespace", "nodeEndsWithNonWhitespace", "_element$previousSibl", "defaultMargin", "getMarginOfDefaultBlockElement", "margin", "getMarginOfBlockElementAtIndex", "top", "bottom", "getBlockElementMargin", "whiteSpace", "marginTop", "marginBottom", "FILTER_REJECT", "FILTER_ACCEPT", "unserializableAttributeNames", "serializedAttributesAttribute", "serializedAttributesSelector", "blockCommentPattern", "serializers", "serializable", "HTMLElement", "el", "ManagedAttachment", "attachmentManager", "requestRemovalOfAttachment", "AttachmentManager", "managedAttachments", "manageAttachment", "attachmentIsManaged", "attachmentManagerDidRequestRemovalOfAttachment", "unmanageAttachment", "managedAttachment", "LineBreakInsertion", "composition", "selectedRange", "getSelectedRange", "previousCharacter", "nextCharacter", "shouldInsertBlockBreak", "shouldBreakFormattedBlock", "shouldDecreaseListLevel", "shouldPrependListItem", "shouldRemoveLastBlockAttribute", "Composition", "currentAttributes", "revision", "_this$delegate$compos", "refreshAttachments", "compositionDidChangeDocument", "getSnapshot", "loadSnapshot", "_this$delegate2$compo", "_this$delegate3", "_this$delegate3$compo", "compositionWillLoadSnapshot", "setSelection", "compositionDidLoadSnapshot", "insertText", "updatePosition", "notifyDelegateOfInsertionAtRange", "insertBlock", "insertDocument", "insertString", "getCurrentTextAttributes", "insertBlockBreak", "insertLineBreak", "insertion", "decreaseListLevel", "removeLastBlockAttribute", "breakFormattedBlock", "insertHTML", "replaceHTML", "getLocationRange", "insertFile", "insertFiles", "_this$delegate4", "compositionShouldAcceptFile", "attachmentForFile", "insertAttachments", "insertAttachment", "attachmentText", "textForAttachmentWithAttributes", "shouldManageDeletingInDirection", "shouldManageMovingCursorInDirection", "deleteInDirection", "deletingIntoPreviousBlock", "selectionSpansBlocks", "selectionIsCollapsed", "canDecreaseBlockAttributeLevel", "getBlock", "decreaseBlockAttributeLevel", "getExpandedRangeInDirection", "getAttachmentAtRange", "editAttachment", "moveTextFromRange", "removeAttachment", "stopEditingAttachment", "removeCurrentAttribute", "insertPlaceholder", "placeholderPosition", "getPosition", "selectPlaceholder", "setSelectedRange", "PLACEHOLDER", "forgetPlaceholder", "hasCurrentAttribute", "toggleCurrentAttribute", "setCurrentAttribute", "canSetCurrentAttribute", "canSetCurrentBlockAttribute", "canSetCurrentTextAttribute", "getSelectedDocument", "setBlockAttribute", "setTextAttribute", "notifyDelegateOfCurrentAttributesChange", "setHTMLAtributeAtPosition", "allowedHTMLAttributes", "newDocument", "removeBlockAttribute", "updateCurrentAttributes", "removeTextAttribute", "canDecreaseNestingLevel", "_this$getBlock", "canIncreaseNestingLevel", "previousBlock", "getPreviousBlock", "_this$getBlock2", "_this$getBlock3", "attributeLevel", "ignoreLock", "getCurrentAttributes", "freezeSelection", "thawSelection", "hasFrozenSelection", "_this$delegate5", "compositionDidRequestChangingSelectionToLocationRange", "getSelectionManager", "setLocationRange", "targetLocationRange", "withTargetLocationRange", "withTargetRange", "withTargetDOMRange", "createLocationRangeFromDOMRange", "translateUTF16PositionFromOffset", "editingAttachment", "moveCursorInDirection", "canEditAttachment", "expandSelectionInDirection", "expandSelectionForEditing", "expandSelectionAroundCommonAttribute", "selectionContainsAttachments", "_this$getSelectedAtta", "getSelectedAttachments", "selectionIsInCursorTarget", "positionIsCursorTarget", "locationIsCursorTarget", "positionIsBlockBreak", "_this$document$getPie", "_this$getSelectedDocu", "added", "removed", "oldArray", "newArray", "existingValues", "Set", "currentValues", "_this$delegate6", "_this$delegate6$compo", "compositionDidRemoveAttachment", "_this$delegate7", "_this$delegate7$compo", "compositionDidAddAttachment", "_this$delegate8", "_this$delegate8$compo", "compositionDidEditAttachment", "_this$delegate9", "_this$delegate9$compo", "compositionDidChangeAttachmentPreviewURL", "_this$delegate10", "_this$delegate10$comp", "compositionDidStartEditingAttachment", "_this$delegate11", "_this$delegate11$comp", "compositionDidStopEditingAttachment", "_this$delegate12", "_this$delegate12$comp", "compositionDidChangeCurrentAttributes", "_this$delegate13", "_this$delegate13$comp", "compositionDidPerformInsertionAtRange", "utf16string", "utf16position", "UndoManager", "undoEntries", "redoEntries", "recordUndoEntry", "description", "consolidatable", "previousEntry", "entryHasDescriptionAndContext", "undoEntry", "createEntry", "redoEntry", "snapshot", "canUndo", "canRedo", "entry", "BLOCK_ATTRIBUTE_NAME", "Filter", "applyBlockAttribute", "findRangesOfBlocks", "findRangesOfPieces", "moveSelectedRangeForward", "attachmentGalleryFilter", "DEFAULT_FILTERS", "Editor", "undoManager", "filters", "loadDocument", "loadHTML", "loadJSON", "getClientRectAtPosition", "getClientRectAtLocationRange", "activateAttribute", "attributeIsActive", "canActivateAttribute", "deactivateAttribute", "LocationMapper", "findLocationFromContainerAndOffset", "container", "foundBlock", "attachmentElement", "findAttachmentElementParentForNode", "rejectAttachmentContents", "nodeLength", "findContainerAndOffsetFromLocation", "nodeOffset", "findNodeAndOffsetFromLocation", "getSignificantNodesForIndex", "acceptSignificantNodes", "recordingNodes", "rejectEmptyTextNodes", "PointMapper", "createDOMRangeFromPoint", "caretPositionFromPoint", "offsetNode", "createRange", "setStart", "caretRangeFromPoint", "createTextRange", "originalDOMRange", "moveToPoint", "select", "getClientRectsForDOMRange", "getClientRects", "SelectionManager", "didMouseDown", "locationMapper", "pointMapper", "lockCount", "currentLocationRange", "lockedLocationRange", "createDOMRangeFromLocationRange", "updateCurrentLocationRange", "setLocationRangeFromPointRange", "pointRange", "getLocationAtPoint", "lock", "unlock", "clearSelection", "_getDOMRange", "collapsed", "selectionIsExpanded", "domRangeWithinElement", "pauseTemporarily", "resumeHandlers", "paused", "resume", "clearTimeout", "resumeTimeout", "_this$delegate$locati", "locationRangeDidChange", "rangeStart", "rangeEnd", "setEnd", "point", "_this$createLocationR", "keyNames", "undoable", "commands", "do", "undos", "AttachmentEditorController", "title", "trixAction", "didClickToolbar", "didClickActionButton", "textarea", "placeholder", "textareaClone", "tabIndex", "autoresize", "scrollHeight", "didInputCaption", "didKeyDownCaption", "didChangeCaption", "didBlurCaption", "editingFigcaption", "editCaption", "focus", "install", "makeElementMutable", "addToolbar", "installCaptionEditor", "uninstall", "savePendingCaption", "didUninstallAttachmentEditor", "pendingCaption", "_this$delegate3$attac", "attachmentEditorDidRequestUpdatingAttributesForAttachment", "attachmentEditorDidRequestRemovingAttributeForAttachment", "stopPropagation", "attachmentEditorDidRequestRemovalOfAttachment", "_this$delegate5$attac", "keyCode", "attachmentEditorDidRequestDeselectingAttachment", "CompositionController", "didFocus", "didBlur", "didClickAttachment", "documentView", "_this$blurPromise", "focused", "compositionControllerDidFocus", "blurPromise", "compositionControllerDidBlur", "findAttachmentForElement", "compositionControllerDidSelectAttachment", "getSerializableElement", "isEditingAttachment", "_this$delegate4$compo", "_this$delegate5$compo", "canSyncDocumentView", "compositionControllerWillSyncDocumentView", "compositionControllerDidSyncDocumentView", "compositionControllerDidRender", "rerenderViewForObject", "refreshViewCache", "attachmentEditor", "installAttachmentEditorForAttachment", "_this$attachmentEdito", "uninstallAttachmentEditor", "_this$attachmentEdito2", "compositionControllerWillUpdateAttachment", "compositionControllerDidRequestRemovalOfAttachment", "compositionControllerDidRequestDeselectingAttachment", "Controller", "mutableAttributeName", "mutableSelector", "childList", "characterData", "characterDataOldValue", "subtree", "MutationObserver", "didMutate", "observer", "observe", "disconnect", "mutations", "_this$delegate$elemen", "findSignificantMutations", "elementDidMutate", "getMutationSummary", "mutation", "mutationIsSignificant", "nodeIsMutable", "nodesModifiedByMutation", "nodeIsSignificant", "addedNodes", "removedNodes", "getTextMutationSummary", "additions", "deletions", "getTextChangesFromCharacterData", "textChanges", "getTextChangesFromChildList", "addition", "summary", "textAdded", "deleted", "textDeleted", "getMutationsByType", "textRemoved", "getTextForNodes", "characterMutations", "startMutation", "endMutation", "summarized", "oldString", "newString", "oldValue", "FileVerificationOperation", "reader", "FileReader", "abort", "readAsArrayBuffer", "FlakyAndroidKeyboardDetector", "shouldIgnore", "previousEvent", "checkSamsungKeyboardBuggyModeStart", "checkSamsungKeyboardBuggyModeEnd", "buggyMode", "insertingLongTextAfterUnidentifiedChar", "differsInWhitespace", "innerText", "inputType", "_this$event$data", "isBeforeInputInsertText", "previousEventWasUnidentifiedKeydown", "_this$previousEvent", "_this$previousEvent2", "text1", "text2", "normalize", "whiteSpaceNormalizerRegexp", "InputController", "mutationObserver", "flakyKeyboardDetector", "events", "handlerFor", "mutationSummary", "editorWillSyncDocumentView", "editorDidSyncDocumentView", "requestRender", "_this$delegate$inputC", "inputControllerDidRequestRender", "requestReparse", "_this$delegate2$input", "inputControllerDidRequestReparse", "operations", "all", "handleInput", "_this$responder", "inputControllerWillAttachFiles", "responder", "defaultPrevented", "inputControllerWillHandleInput", "inputControllerDidHandleInput", "createLinkHTML", "pastedFileCount", "Level0InputController", "resetInputSummary", "setInputSummary", "inputSummary", "isComposing", "inputControllerDidAllowUnhandledInput", "mutationIsExpected", "preferDocument", "mutationAdditionMatchesSummary", "mutationDeletionMatchesSummary", "didDelete", "unexpectedNewlineAddition", "unexpectedNewlineDeletion", "_this$compositionInpu", "textChanged", "composedEmptyString", "compositionInput", "getEndData", "getCompositionInput", "CompositionInput", "isEnded", "_this$responder2", "serializeSelectionToDataTransfer", "_this$responder3", "setData", "canAcceptDataTransfer", "Files", "getPastedHTMLUsingHiddenElement", "pageXOffset", "pageYOffset", "opacity", "requestAnimationFrame", "keydown", "didInput", "keyName", "_context2", "modifier", "_context", "character", "inputControllerDidReceiveKeyboardCommand", "keypress", "altKey", "stringFromKeyEvent", "_this$responder9", "inputControllerWillPerformTyping", "textInput", "toUpperCase", "_this$responder10", "dragenter", "dragstart", "_this$delegate5$input", "draggedRange", "inputControllerDidStartDrag", "dragover", "draggingPoint", "clientX", "clientY", "_this$delegate6$input", "inputControllerDidReceiveDragOverPoint", "dragend", "_this$delegate7$input", "inputControllerDidCancelDrag", "drop", "_event$dataTransfer", "_this$responder11", "_this$responder12", "inputControllerWillMoveText", "_this$responder13", "fromJSONString", "cut", "_this$responder14", "clipboardData", "inputControllerWillCutText", "_this$responder15", "paste", "clipboard", "testClipboardData", "pasteEventIsCrippledSafariHTMLPaste", "_this$responder16", "inputControllerWillPaste", "inputControllerDidPaste", "_this$responder17", "_this$delegate14", "_this$responder18", "_this$delegate15", "_this$delegate16", "_this$responder19", "_this$delegate17", "_clipboard$items", "_clipboard$items$getA", "items", "getAsFile", "_this$delegate18", "_this$responder20", "_this$delegate19", "extensionForFile", "compositionstart", "compositionupdate", "compositionend", "beforeinput", "backspace", "_this$delegate20", "delete", "_this$delegate21", "return", "_this$delegate22", "_this$responder21", "tab", "_this$responder22", "_this$responder23", "_this$responder24", "_this$responder25", "control", "_this$delegate23", "_this$delegate24", "_this$delegate25", "_this$responder26", "shift", "_this$delegate26", "_this$responder27", "_this$responder28", "_this$responder29", "alt", "_this$delegate27", "meta", "_this$delegate28", "_file$type", "which", "charCode", "hasPasteboardFlavor", "hasReadableDynamicData", "isExternalHTMLPaste", "isExternalRichTextPaste", "inputController", "isSignificant", "_this$responder5", "_this$responder4", "canApplyToDocument", "_this$responder6", "_this$responder7", "_this$responder8", "_this$data$start", "_this$data$end", "Level2InputController", "scheduledRender", "composing", "reparse", "scheduleRender", "_this$afterRender", "cancelAnimationFrame", "afterRender", "toggleAttributeIfSupported", "inputControllerWillPerformFormatting", "activateAttributeIfSupported", "getTargetDOMRange", "minLength", "_this$event$getTarget", "_this$event", "targetRanges", "getTargetRanges", "staticRangeToRange", "withEvent", "command", "keyboardCommandFromKeyEvent", "shiftKey", "_event$clipboardData", "pasteEventHasFilesOnly", "pasteEventHasPlainTextOnly", "inputTypes", "immmediateRender", "inputEvent", "dragging", "pointFromEvent", "dragEventHasFiles", "ArrowLeft", "ArrowRight", "Backspace", "Tab", "deleteByComposition", "deleteByCut", "deleteByDrag", "deleteByDragRange", "deleteCompositionText", "deleteContent", "deleteContentBackward", "deleteContentForward", "deleteEntireSoftLine", "deleteHardLineBackward", "deleteHardLineForward", "deleteSoftLineBackward", "deleteSoftLineForward", "deleteWordBackward", "deleteWordForward", "formatBackColor", "formatBold", "formatFontColor", "formatFontName", "formatIndent", "formatItalic", "formatJustifyCenter", "formatJustifyFull", "formatJustifyLeft", "formatJustifyRight", "formatOutdent", "formatRemove", "_this$responder30", "formatSetBlockTextDirection", "formatSetInlineTextDirection", "formatStrikeThrough", "formatSubscript", "formatSuperscript", "formatUnderline", "historyRedo", "inputControllerWillPerformRedo", "historyUndo", "inputControllerWillPerformUndo", "insertCompositionText", "insertFromComposition", "insertFromDrop", "_this$responder31", "insertFromPaste", "_this$responder32", "_this$responder33", "processableFilePaste", "_this$responder34", "_this$responder35", "insertFromYank", "insertLink", "insertOrderedList", "insertParagraph", "_this$responder36", "insertReplacementText", "replacement", "_this$event$dataTrans", "insertTranspose", "insertUnorderedList", "staticRange", "_event$dataTransfer$f", "attributeButtonSelector", "actionButtonSelector", "toolbarButtonSelector", "dialogSelector", "activeDialogSelector", "dialogButtonSelector", "dialogInputSelector", "getInputForDialog", "getAttributeName", "getActionName", "ToolbarController", "didClickAttributeButton", "didClickDialogButton", "didKeyDownDialogInput", "actions", "resetDialogInputs", "toolbarDidClickButton", "actionName", "getDialog", "toggleDialog", "toolbarDidInvokeAction", "toolbarDidToggleAttribute", "refreshAttributeButtons", "dialogElement", "dialog", "hideDialog", "updateActions", "refreshActionButtons", "eachActionButton", "disabled", "updateAttributes", "eachAttributeButton", "dialogIsVisible", "applyKeyboardCommand", "keyString", "button", "buttonKeys", "dialogName", "showDialog", "toolbarWillShowDialog", "disabledInput", "toolbarDidShowDialog", "willValidate", "setCustomValidity", "checkValidity", "isSafeAttribute", "toolbarDidUpdateAttribute", "isValidAttribute", "toolbarDidRemoveAttribute", "toolbarDidHideDialog", "EditorController", "editorElement", "compositionController", "toolbarController", "toolbarElement", "editor", "notifyEditorElement", "handlingInput", "updateCurrentActions", "pasting", "pastedRange", "attachmentLocationRange", "loadingSnapshot", "isFocused", "requestedLocationRange", "compositionRevisionWhenLocationRangeRequested", "renderedCompositionRevision", "runEditorFilters", "isFocusedInvisibly", "requestedRender", "recordTypingUndoEntry", "recordFormattingUndoEntry", "locationRangeBeforeDrag", "invokingElement", "invokeAction", "selectionFrozen", "canInvokeAction", "actionIsExternal", "_this$actions$actionN", "_this$actions$actionN2", "getCurrentActions", "currentActions", "snapshotsAreEqual", "updateInputElement", "serializer", "setFormValue", "message", "documentChangedSinceLastRender", "notify", "getUndoContext", "getLocationContext", "getTimeContext", "Date", "getTime", "_this$editorElement$o", "ownerDocument", "TrixToolbarElement", "connectedCallback", "makeEditable", "configureContentEditable", "disableObjectResizing", "setDefaultParagraphSeparator", "_document$queryComman", "_document", "queryCommandSupported", "execCommand", "_document$queryComman2", "_document2", "cursorTargetStyles", "_internals", "WeakMap", "_validate", "WeakSet", "ElementInternalsDelegate", "_classPrivateFieldInitSpec", "writable", "_classPrivateFieldSet", "attachInternals", "_classPrivateMethodGet", "_validate2", "disconnectedCallback", "labels", "_classPrivateFieldGet", "_this$element$inputEl", "inputElement", "toggleAttribute", "required", "validity", "validationMessage", "reportValidity", "customValidationMessage", "valueMissing", "customError", "setValidity", "_focusHandler", "_resetBubbled", "_clickBubbled", "LegacyDelegate", "contains", "label", "texts", "_classPrivateFieldGet2", "console", "warn", "_delegate", "TrixEditorElement", "formAssociated", "localName", "_this$ownerDocument", "toolbarId", "internalToolbar", "_this$inputElement", "_this$ownerDocument2", "inputId", "nextElementSibling", "_this$editorControlle", "editorController", "_this$inputElement2", "_this$inputElement3", "defaultValue", "_this$editor", "attributeChangedCallback", "newValue", "isConnected", "reconnect", "_this$editorControlle2", "removeInternalToolbar", "_this$internalToolbar", "formDisabledCallback", "formResetCallback", "Trix", "VERSION", "version", "core", "models", "controllers", "observers", "customElements", "define"]
}
