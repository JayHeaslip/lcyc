{
  "version": 3,
  "sources": ["../../../node_modules/trix/src/trix/config/attachments.js", "../../../node_modules/trix/src/trix/config/block_attributes.js", "../../../node_modules/trix/src/trix/config/browser.js", "../../../node_modules/trix/src/trix/config/dompurify.js", "../../../node_modules/trix/src/trix/config/lang.js", "../../../node_modules/trix/src/trix/config/file_size_formatting.js", "../../../node_modules/trix/src/trix/constants.js", "../../../node_modules/trix/src/trix/core/helpers/extend.js", "../../../node_modules/trix/src/trix/core/helpers/dom.js", "../../../node_modules/trix/src/trix/config/input.js", "../../../node_modules/trix/src/trix/config/key_names.js", "../../../node_modules/trix/src/trix/config/parser.js", "../../../node_modules/trix/src/trix/config/text_attributes.js", "../../../node_modules/trix/src/trix/config/toolbar.js", "../../../node_modules/trix/src/trix/config/undo.js", "../../../node_modules/trix/src/trix/config/css.js", "../../../node_modules/trix/src/trix/core/basic_object.js", "../../../node_modules/trix/src/trix/core/utilities/utf16_string.js", "../../../node_modules/trix/src/trix/core/object.js", "../../../node_modules/trix/src/trix/core/helpers/arrays.js", "../../../node_modules/trix/src/trix/core/helpers/bidi.js", "../../../node_modules/trix/src/trix/core/helpers/config.js", "../../../node_modules/trix/src/trix/core/helpers/custom_elements.js", "../../../node_modules/trix/src/trix/core/helpers/events.js", "../../../node_modules/trix/src/trix/core/helpers/functions.js", "../../../node_modules/trix/src/trix/core/helpers/objects.js", "../../../node_modules/trix/src/trix/core/helpers/ranges.js", "../../../node_modules/trix/src/trix/observers/selection_change_observer.js", "../../../node_modules/trix/src/trix/core/helpers/strings.js", "../../../node_modules/trix/src/trix/core/collections/hash.js", "../../../node_modules/trix/src/trix/core/collections/object_group.js", "../../../node_modules/trix/src/trix/core/collections/object_map.js", "../../../node_modules/trix/src/trix/core/collections/element_store.js", "../../../node_modules/trix/src/trix/core/utilities/operation.js", "../../../node_modules/trix/src/trix/views/object_view.js", "../../../node_modules/trix/src/trix/models/html_sanitizer.js", "../../../node_modules/trix/src/trix/views/attachment_view.js", "../../../node_modules/trix/src/trix/views/previewable_attachment_view.js", "../../../node_modules/trix/src/trix/views/piece_view.js", "../../../node_modules/trix/src/trix/views/text_view.js", "../../../node_modules/trix/src/trix/views/block_view.js", "../../../node_modules/trix/src/trix/views/document_view.js", "../../../node_modules/trix/src/trix/models/piece.js", "../../../node_modules/trix/src/trix/operations/image_preload_operation.js", "../../../node_modules/trix/src/trix/models/attachment.js", "../../../node_modules/trix/src/trix/models/attachment_piece.js", "../../../node_modules/trix/src/trix/models/string_piece.js", "../../../node_modules/trix/src/trix/models/splittable_list.js", "../../../node_modules/trix/src/trix/models/text.js", "../../../node_modules/trix/src/trix/models/block.js", "../../../node_modules/trix/src/trix/models/document.js", "../../../node_modules/trix/src/trix/models/html_parser.js", "../../../node_modules/trix/src/trix/core/serialization.js", "../../../node_modules/trix/src/trix/models/managed_attachment.js", "../../../node_modules/trix/src/trix/models/attachment_manager.js", "../../../node_modules/trix/src/trix/models/line_break_insertion.js", "../../../node_modules/trix/src/trix/models/composition.js", "../../../node_modules/trix/src/trix/models/undo_manager.js", "../../../node_modules/trix/src/trix/filters/filter.js", "../../../node_modules/trix/src/trix/filters/attachment_gallery_filter.js", "../../../node_modules/trix/src/trix/models/editor.js", "../../../node_modules/trix/src/trix/models/location_mapper.js", "../../../node_modules/trix/src/trix/models/point_mapper.js", "../../../node_modules/trix/src/trix/models/selection_manager.js", "../../../node_modules/trix/src/trix/controllers/attachment_editor_controller.js", "../../../node_modules/trix/src/trix/controllers/composition_controller.js", "../../../node_modules/trix/src/trix/controllers/controller.js", "../../../node_modules/trix/src/trix/observers/mutation_observer.js", "../../../node_modules/trix/src/trix/operations/file_verification_operation.js", "../../../node_modules/trix/src/trix/models/flaky_android_keyboard_detector.js", "../../../node_modules/trix/src/trix/controllers/input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_0_input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_2_input_controller.js", "../../../node_modules/trix/src/trix/controllers/toolbar_controller.js", "../../../node_modules/trix/src/trix/controllers/editor_controller.js", "../../../node_modules/trix/src/trix/elements/trix_toolbar_element.js", "../../../node_modules/trix/src/trix/elements/trix_editor_element.js", "../../../node_modules/trix/src/trix/trix.js", "../../javascript/trix_extension.js"],
  "sourcesContent": ["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n", "const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n", "const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n", "export default {\n  ADD_ATTR: [ \"language\" ],\n  SAFE_FOR_XML: false,\n  RETURN_DOM: true\n}\n", "export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n", "/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n", "export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n", "export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n", "import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n", "import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n", "export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n", "export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n", "import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n", "import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" data-trix-validate-href required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n", "const undo = { interval: 5000 }\nexport default undo\n", "export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n", "export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n", "import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n", "import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n", "/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    const { nonce, content } = element\n    return nonce == \"\" ? content : nonce\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n", "const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n\nexport function shouldRenderInmmediatelyToDealWithIOSDictation(inputEvent) {\n  if (/iPhone|iPad/.test(navigator.userAgent)) {\n    // Handle garbled content and duplicated newlines when using dictation on iOS 18+. Upon dictation completion, iOS sends\n    // the list of insertText / insertParagraph events in a quick sequence. If we don't render\n    // the editor synchronously, the internal range fails to update and results in garbled content or duplicated newlines.\n    //\n    // This workaround is necessary because iOS doesn't send composing events as expected while dictating:\n    // https://bugs.webkit.org/show_bug.cgi?id=261764\n    return !inputEvent.inputType || inputEvent.inputType === \"insertParagraph\"\n  } else {\n    return false\n  }\n}\n", "export const defer = (fn) => setTimeout(fn, 1)\n", "/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n", "/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n", "export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n", "export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n", "import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\nimport DOMPurify from \"dompurify\"\nimport * as config from \"trix/config\"\n\nDOMPurify.addHook(\"uponSanitizeAttribute\", function (node, data) {\n  const allowedAttributePattern = /^data-trix-/\n  if (allowedAttributePattern.test(data.attrName)) {\n    data.forceKeepAttr = true\n  }\n})\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static setHTML(element, html) {\n    const sanitizedElement = new this(html).sanitize()\n    const sanitizedHtml = sanitizedElement.getHTML ? sanitizedElement.getHTML() : sanitizedElement.outerHTML\n    element.innerHTML = sanitizedHtml\n  }\n\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    this.normalizeListElementNesting()\n    DOMPurify.setConfig(config.dompurify)\n    this.body = DOMPurify.sanitize(this.body)\n\n    return this.body\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n", "import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      HTMLSanitizer.setHTML(innerElement, this.attachment.getContent())\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  HTMLSanitizer.setHTML(div, html || \"\")\n  return div.querySelector(tagName)\n}\n", "import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n", "/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n", "/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n", "import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n", "import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n", "import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n", "import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n", "import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n", "/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n", "/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      HTMLSanitizer.setHTML(this.containerElement, this.html)\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n", "/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n", "import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n", "import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n", "export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n", "import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n", "const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n", "import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n", "import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n", "/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n", "/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n", "/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n", "import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n", "import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n", "/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n", "import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n", "import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n", "import { getAllAttributeNames, shouldRenderInmmediatelyToDealWithIOSDictation, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      const immmediateRender = shouldRenderInmmediatelyToDealWithIOSDictation(event)\n\n      if (handler) {\n        this.withEvent(event, handler)\n\n        if (!immmediateRender) {\n          this.scheduleRender()\n        }\n      }\n\n      if (immmediateRender) {\n        this.render()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nimport DOMPurify from \"dompurify\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n\n    if (input.willValidate) {\n      input.setCustomValidity(\"\")\n      if (!input.checkValidity() || !this.isSafeAttribute(input)) {\n        input.setCustomValidity(\"Invalid value\")\n        input.setAttribute(\"data-trix-validate\", \"\")\n        input.classList.add(\"trix-validate\")\n        return input.focus()\n      }\n    }\n    this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n    return this.hideDialog()\n  }\n\n  isSafeAttribute(input) {\n    if (input.hasAttribute(\"data-trix-validate-href\")) {\n      return DOMPurify.isValidAttribute(\"a\", \"href\", input.value)\n    } else {\n      return true\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setFormValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n", "import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n", "import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nclass ElementInternalsDelegate {\n  #internals\n\n  constructor(element) {\n    this.element = element\n    this.#internals = element.attachInternals()\n  }\n\n  connectedCallback() {\n    this.#validate()\n  }\n\n  disconnectedCallback() {\n  }\n\n  get labels() {\n    return this.#internals.labels\n  }\n\n  get disabled() {\n    return this.element.inputElement?.disabled\n  }\n\n  set disabled(value) {\n    this.element.toggleAttribute(\"disabled\", value)\n  }\n\n  get required() {\n    return this.element.hasAttribute(\"required\")\n  }\n\n  set required(value) {\n    this.element.toggleAttribute(\"required\", value)\n    this.#validate()\n  }\n\n  get validity() {\n    return this.#internals.validity\n  }\n\n  get validationMessage() {\n    return this.#internals.validationMessage\n  }\n\n  get willValidate() {\n    return this.#internals.willValidate\n  }\n\n  setFormValue(value) {\n    this.#validate()\n  }\n\n  checkValidity() {\n    return this.#internals.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#internals.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#validate(validationMessage)\n  }\n\n  #validate(customValidationMessage = \"\") {\n    const { required, value } = this.element\n    const valueMissing = required && !value\n    const customError = !!customValidationMessage\n    const input = makeElement(\"input\", { required })\n    const validationMessage = customValidationMessage || input.validationMessage\n\n    this.#internals.setValidity({ valueMissing, customError }, validationMessage)\n  }\n}\n\nclass LegacyDelegate {\n  #focusHandler\n\n  constructor(element) {\n    this.element = element\n  }\n\n  connectedCallback() {\n    this.#focusHandler = ensureAriaLabel(this.element)\n    window.addEventListener(\"reset\", this.#resetBubbled, false)\n    window.addEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  disconnectedCallback() {\n    this.#focusHandler?.destroy()\n    window.removeEventListener(\"reset\", this.#resetBubbled, false)\n    window.removeEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  get labels() {\n    const labels = []\n    if (this.element.id && this.element.ownerDocument) {\n      labels.push(...Array.from(this.element.ownerDocument.querySelectorAll(`label[for='${this.element.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this.element, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this.element, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get disabled() {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set disabled(value) {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n  }\n\n  get required() {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set required(value) {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n  }\n\n  get validity() {\n    console.warn(\"This browser does not support the validity property for trix-editor elements.\")\n    return null\n  }\n\n  get validationMessage() {\n    console.warn(\"This browser does not support the validationMessage property for trix-editor elements.\")\n\n    return \"\"\n  }\n\n  get willValidate() {\n    console.warn(\"This browser does not support the willValidate property for trix-editor elements.\")\n\n    return false\n  }\n\n  setFormValue(value) {\n  }\n\n  checkValidity() {\n    console.warn(\"This browser does not support checkValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  reportValidity() {\n    console.warn(\"This browser does not support reportValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  setCustomValidity(validationMessage) {\n    console.warn(\"This browser does not support setCustomValidity(validationMessage) for trix-editor elements.\")\n  }\n\n  #resetBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (event.target !== this.element.form) return\n    this.element.reset()\n  }\n\n  #clickBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (this.element.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    this.element.focus()\n  }\n}\n\nexport default class TrixEditorElement extends HTMLElement {\n  static formAssociated = \"ElementInternals\" in window\n\n  #delegate\n\n  constructor() {\n    super()\n    this.#delegate = this.constructor.formAssociated ?\n      new ElementInternalsDelegate(this) :\n      new LegacyDelegate(this)\n  }\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    return this.#delegate.labels\n  }\n\n  get disabled() {\n    return this.#delegate.disabled\n  }\n\n  set disabled(value) {\n    this.#delegate.disabled = value\n  }\n\n  get required() {\n    return this.#delegate.required\n  }\n\n  set required(value) {\n    this.#delegate.required = value\n  }\n\n  get validity() {\n    return this.#delegate.validity\n  }\n\n  get validationMessage() {\n    return this.#delegate.validationMessage\n  }\n\n  get willValidate() {\n    return this.#delegate.willValidate\n  }\n\n  get type() {\n    return this.localName\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setFormValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n      this.#delegate.setFormValue(value)\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.#delegate.connectedCallback()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.#delegate.disconnectedCallback()\n  }\n\n  // Form support\n\n  checkValidity() {\n    return this.#delegate.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#delegate.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#delegate.setCustomValidity(validationMessage)\n  }\n\n  formDisabledCallback(disabled) {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled\n    }\n    this.toggleAttribute(\"contenteditable\", !disabled)\n  }\n\n  formResetCallback() {\n    this.reset()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n", "import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n", "import Trix from 'trix';\n\nwindow.Trix = Trix; // Don't need to bind to the window, but useful for debugging.\nTrix.config.toolbar.getDefaultHTML = toolbarDefaultHTML;\n\nvar lang$1 = {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption\u2026\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL\u2026\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\"\n};\n\nfunction toolbarDefaultHTML() {\n    const {lang} = Trix.config;\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n}\n"],
  "mappings": ";;;AAAO,MAAMA,IAAqB;AAA3B,MAEDC,IAAc,EAClBC,SAAS,EACPC,cAAc,WACdC,SAAS,EACPC,MAAAA,MACAC,MAAAA,KAAM,EAAA,GAGVC,MAAM,EACJH,SAAS,EACPE,MAAAA,KAAM,EAAA,EAAA;AAZL,MCADE,IAAa,EACjBC,SAAS,EACPC,SAAS,OACTC,OAAAA,MAAO,GAETC,OAAO,EACLF,SAAS,cACTG,UAAAA,KAAU,GAEZC,UAAU,EACRJ,SAAS,MACTK,UAAAA,MACAC,eAAAA,MACAC,OAAAA,MAAO,GAETC,MAAM,EACJR,SAAS,OACTK,UAAAA,MACAI,gBAAgB,CAAE,UAAA,GAClBC,MAAM,EACJC,WAAAA,KAAW,EAAA,GAGfC,YAAY,EACVZ,SAAS,MACTC,OAAAA,MAAO,GAETY,QAAQ,EACNb,SAAS,MACTc,eAAe,cACfP,OAAAA,OACAJ,UAAAA,MACAY,KAAKC,IAAAA;AACH,WAAOhB,EAAQgB,GAAQC,UAAAA,MAAgBnB,EAAWoB,KAAKJ,eAAed;EACxE,EAAA,GAEFmB,YAAY,EACVnB,SAAS,MACTC,OAAAA,MAAO,GAETmB,QAAQ,EACNpB,SAAS,MACTc,eAAe,cACfP,OAAAA,OACAJ,UAAAA,MACAY,KAAKC,IAAAA;AACH,WAAOhB,EAAQgB,GAAQC,UAAAA,MAAgBnB,EAAWoB,KAAKJ,eAAed;EACxE,EAAA,GAEFqB,mBAAmB,EACjBrB,SAAS,OACTsB,WAAAA,MACAjB,UAAAA,MACAJ,OAAAA,OACAM,OAAAA,MAAO,EAAA;ADtDJ,MC0DDP,IAAWgB,CAAAA,OAAAA;AAAO,QAAAO;AAAA,WAAKP,QAAAA,MAAgB,UAATO,KAAPP,GAAShB,YAAAA,WAAOuB,KAAAA,SAAhBA,GAAkBC,YAAAA;EAAa;AD1DrD,MEADC,IAAsBC,UAAUC,UAAUC,MAAM,4BAAA;AFA/C,MECDC,IAAiBJ,KAAuBK,SAASL,EAAoB,EAAA;AAE3E,MAAeM,IAAA,EAGbC,sBAAsB,kBAAkBjB,KAAKW,UAAUC,SAAAA,GAKvDM,eAAeJ,KAAkBA,IAAiB,IAClDK,gBAAgBL,KAAkBH,UAAUC,UAAUC,MAAM,cAAA,GAG5DO,sBAAsB,iBAAiBpB,KAAKW,UAAUC,SAAAA,GAEtDS,qBAA2C,eAAA,OAAfC,cAC1B,CAAE,QAAQ,mBAAmB,WAAA,EAAcC,MAAMC,CAAAA,OAAQA,MAAQF,WAAWG,SAAAA,EAAAA;AAfhF,MCHeC,IAAA,EACbC,UAAU,CAAE,UAAA,GACZC,cAAAA,OACAC,YAAAA,KAAY;ADAd,MEHeC,IAAA,EACbC,aAAa,gBACbC,MAAM,QACNC,SAAS,WACTC,MAAM,QACNC,OAAO,SACPC,oBAAoB,uBACpB3C,MAAM,QACNJ,UAAU,WACVgD,QAAQ,kBACRC,QAAQ,UACRC,MAAM,QACNC,SAAS,WACTC,SAAS,kBACTtD,OAAO,SACPuD,MAAM,QACNC,QAAQ,UACRC,QAAQ,iBACRC,MAAM,QACNC,QAAQ,UACRC,KAAK,OACLC,gBAAgB,qBAChBC,IAAI,MACJC,IAAI,MACJC,IAAI,MACJC,IAAI,MACJC,IAAI,KAAA;ACrBN,MAAMC,IAAQ,CAAEC,EAAKpB,OAAOoB,EAAKL,IAAIK,EAAKJ,IAAII,EAAKN,IAAIM,EAAKF,IAAIE,EAAKH,EAAAA;AAErE,MAAeI,IAAA,EACbC,QAAQ,OACRC,WAAW,GAEXC,UAAUtD,IAAAA;AACR,YAAQA,IAAAA;MACN,KAAK;AACH,eAAA,KAAAuD,OAAYL,EAAKpB,KAAAA;MACnB,KAAK;AACH,eAAA,KAAAyB,OAAYL,EAAKrB,IAAAA;MACnB;AACE,YAAI2B;AAEgB,iBAAhB1D,KAAKsD,SACPI,KAAO,MACkB,UAAhB1D,KAAKsD,WACdI,KAAO;AAGT,cAAMC,KAAMC,KAAKC,MAAMD,KAAKE,IAAI5D,EAAAA,IAAU0D,KAAKE,IAAIJ,EAAAA,CAAAA,GAG7CK,MAFY7D,KAAS0D,KAAKI,IAAIN,IAAMC,EAAAA,GACjBM,QAAQjE,KAAKuD,SAAAA,EACGW,QAAQ,OAAO,EAAA,EAAIA,QAAQ,OAAO,EAAA;AAC3E,eAAAT,GAAAA,OAAUM,IAAyB,GAAA,EAAAN,OAAIN,EAAMQ,GAAAA;IAAAA;EAEnD,EAAA;AChCK,MAAMQ,IAAmB;AAAzB,MACMC,IAAqB;AAD3B,MCAMC,IAAS,SAASC,IAAAA;AAC7B,eAAWC,MAAOD,IAAY;AAC5B,YAAME,KAAQF,GAAWC;AACzBvE,WAAKuE,MAAOC;IACd;AACA,WAAOxE;EACT;ADNO,MEKDyE,IAAOC,SAASC;AFLf,MEMDjE,IAAQ+D,EAAKG;AFNZ,MEQMC,IAAc,SAASC,IAAAA;AAA+F,QAAA,EAApFC,WAAEA,IAASC,kBAAEA,IAAgBC,cAAEA,IAAYC,SAAEA,IAAOC,gBAAEA,IAAcC,OAAEA,GAAAA,IAAOC,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAC7H,UAAMvF,KAAUiF,MAAwBN,GAClCe,KAAWR,IACXS,KAAyB,gBAAZP,IAEbQ,KAAU,SAASC,IAAAA;AACV,cAATP,MAA6B,KAAA,EAAVA,MACrBM,GAAQE,QAAAA;AAEV,YAAMC,KAASC,EAA2BH,GAAME,QAAQ,EAAEb,kBAAkBQ,GAAAA,CAAAA;AAC9D,cAAVK,OACFZ,QAAAA,MAAAA,GAAcc,KAAKF,IAAQF,IAAOE,EAAAA,GAC9BV,MACFQ,GAAMR,eAAAA;IAAAA;AAQZ,WAHAO,GAAQE,UAAU,MAAM9F,GAAQkG,oBAAoBlB,IAAWY,IAASD,EAAAA,GAExE3F,GAAQmG,iBAAiBnB,IAAWY,IAASD,EAAAA,GACtCC;EACT;AF9BO,MEqCMQ,IAAe,SAASpB,IAAAA;AAAgE,QAAA,EAArDC,WAAEA,IAASoB,SAAEA,IAAOC,YAAEA,IAAUxH,YAAEA,GAAAA,IAAYyG,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAC/F,UAAMvF,KAAuB,QAAbiF,KAAoBA,KAAYN;AAChD0B,IAAAA,KAAAA,UAAUA,IACVC,KAAAA,UAAaA;AAEb,UAAMT,KAAQjB,SAAS2B,YAAY,QAAA;AAKnC,WAJAV,GAAMW,UAAUxB,IAAWqB,IAASC,EAAAA,GAClB,QAAdxH,MACFyF,EAAO0B,KAAKJ,IAAO/G,EAAAA,GAEdkB,GAAQyG,cAAcZ,EAAAA;EAC/B;AFhDO,MEkDMa,IAAyB,SAAS1G,IAAS0F,IAAAA;AACtD,QAA0B,OAAtB1F,QAAAA,KAAAA,SAAAA,GAAS2G;AACX,aAAO/F,EAAMqF,KAAKjG,IAAS0F,EAAAA;EAE/B;AFtDO,MEwDMM,IAA6B,SAASY,IAAAA;AAA4C,QAAA,EAAtC1B,kBAAEA,IAAgB2B,WAAEA,GAAAA,IAAWtB,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AACzF,WAAOqB,MAAQA,GAAKD,aAAaG,KAAKC;AACpCH,MAAAA,KAAOA,GAAK3G;AAEd,QAAY,QAAR2G,IAAJ;AAIA,UAAwB,QAApB1B;AAYF,eAAO0B;AAXP,UAAIA,GAAKI,WAAwB,QAAbH;AAClB,eAAOD,GAAKI,QAAQ9B,EAAAA;AAEpB,aAAO0B,MAAQA,OAASC,MAAW;AACjC,YAAIH,EAAuBE,IAAM1B,EAAAA;AAC/B,iBAAO0B;AAETA,QAAAA,KAAOA,GAAK3G;MACd;IAXJ;EAgBF;AF9EO,MEuFMgH,IAAwBjH,CAAAA,OACnC4E,SAASsC,kBAAkBlH,MAAWmH,EAAoBnH,IAAS4E,SAASsC,aAAAA;AFxFvE,ME0FMC,IAAsB,SAASnH,IAAS4G,IAAAA;AACnD,QAAK5G,MAAY4G;AAGjB,aAAOA,MAAM;AACX,YAAIA,OAAS5G;AACX,iBAAA;AAEF4G,QAAAA,KAAOA,GAAK3G;MACd;EACF;AFpGO,MEwHMmH,IAAuB,SAASR,IAAAA;AAAM,QAAAS;AACjD,QAAS,UAALA,KAACT,OAAAA,WAAIS,MAAAA,CAAJA,GAAMpH;AACT;AAEF,QAAIqH,KAAa;AAEjB,SADAV,KAAOA,GAAKW,iBACLX;AACLU,MAAAA,MACAV,KAAOA,GAAKW;AAEd,WAAOD;EACT;AFnIO,MEqIME,IAAcZ,CAAAA,OAAAA;AAAI,QAAAa;AAAA,WAAKb,QAAAA,MAAgB,UAAZa,KAAJb,GAAM3G,eAAAA,WAAUwH,KAAAA,SAAhBA,GAAkBC,YAAYd,EAAAA;EAAK;AFrIhE,MEuIMe,IAAW,SAASC,IAAAA;AAAqE,QAAA,EAA/DC,iBAAEA,IAAeC,aAAEA,IAAWC,wBAAEA,GAAAA,IAAwBxC,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAChG,UAAMyC,MAAa,MAAA;AACjB,cAAQH,IAAAA;QACN,KAAK;AACH,iBAAOI,WAAWC;QACpB,KAAK;AACH,iBAAOD,WAAWE;QACpB,KAAK;AACH,iBAAOF,WAAWG;QACpB;AACE,iBAAOH,WAAWI;MAAAA;IAEvB,GAXkB;AAanB,WAAOzD,SAAS0D,iBACdV,IACAI,IACe,QAAfF,KAAsBA,KAAc,MAAA,SACpCC,EAAAA;EAEJ;AF3JO,ME6JM/I,IAAWgB,CAAAA,OAAAA;AAAO,QAAAO;AAAA,WAAKP,QAAAA,MAAgB,UAATO,KAAPP,GAAShB,YAAAA,WAAOuB,KAAAA,SAAhBA,GAAkBC,YAAAA;EAAa;AF7J5D,ME+JM+H,IAAc,SAASC,IAAAA;AAAmB,QACjD/D,IAAKC,IAD8B+D,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAE9B,gBAAA,OAARiD,MACTC,KAAUD,IACVA,KAAMC,GAAQzJ,WAEdyJ,KAAU,EAAE3J,YAAY2J,GAAAA;AAG1B,UAAMzI,KAAU4E,SAAS8D,cAAcF,EAAAA;AASvC,QAPwB,QAApBC,GAAQE,aACgB,QAAtBF,GAAQ3J,eACV2J,GAAQ3J,aAAa,CAAA,IAEvB2J,GAAQ3J,WAAW8J,kBAAkBH,GAAQE,WAG3CF,GAAQ3J;AACV,WAAK2F,MAAOgE,GAAQ3J;AAClB4F,QAAAA,KAAQ+D,GAAQ3J,WAAW2F,KAC3BzE,GAAQ6I,aAAapE,IAAKC,EAAAA;AAI9B,QAAI+D,GAAQK;AACV,WAAKrE,MAAOgE,GAAQK;AAClBpE,QAAAA,KAAQ+D,GAAQK,MAAMrE,KACtBzE,GAAQ8I,MAAMrE,MAAOC;AAIzB,QAAI+D,GAAQM;AACV,WAAKtE,MAAOgE,GAAQM;AAClBrE,QAAAA,KAAQ+D,GAAQM,KAAKtE,KACrBzE,GAAQgJ,QAAQvE,MAAOC;AAoB3B,WAhBI+D,GAAQQ,aACVR,GAAQQ,UAAUC,MAAM,GAAA,EAAKC,QAASF,CAAAA,OAAAA;AACpCjJ,MAAAA,GAAQoJ,UAAUC,IAAIJ,EAAAA;IAAU,CAAA,GAIhCR,GAAQa,gBACVtJ,GAAQsJ,cAAcb,GAAQa,cAG5Bb,GAAQc,cACV,CAAA,EAAG5F,OAAO8E,GAAQc,UAAAA,EAAYJ,QAASK,CAAAA,OAAAA;AACrCxJ,MAAAA,GAAQyJ,YAAYD,EAAAA;IAAU,CAAA,GAI3BxJ;EACT;AAEA,MAAI0J;AAEG,MAAMC,IAAmB,WAAA;AAC9B,QAAqB,QAAjBD;AACF,aAAOA;AAGTA,QAAgB,CAAA;AAChB,eAAWjF,MAAOmF,GAAiB;AACjC,YAAM9K,KAAa8K,EAAgBnF;AAC/B3F,MAAAA,GAAWE,WACb0K,EAAcG,KAAK/K,GAAWE,OAAAA;IAElC;AAEA,WAAO0K;EACT;AAdO,MAgBMI,IAAwBlD,CAAAA,OAASmD,EAAwBnD,QAAAA,KAAAA,SAAAA,GAAMoD,UAAAA;AAhBrE,MAsBMC,IAAmB,SAASrD,IAAAA;AAAqC,QAAA,EAA/BsD,QAAEA,GAAAA,IAAQ3E,UAAAC,SAAA,KAAA,WAAAD,UAAAE,KAAAF,UAAG,KAAA,EAAE2E,QAAAA,KAAQ;AACpE,WAAIA,KACKH,EAAwBnD,EAAAA,IAG7BmD,EAAwBnD,EAAAA,KAAAA,CAAUmD,EAAwBnD,GAAKoD,UAAAA,KATzB,SAASpD,IAAAA;AACnD,aAAO+C,EAAAA,EAAmBQ,SAASnL,EAAQ4H,EAAAA,CAAAA,KAAAA,CAAW+C,EAAAA,EAAmBQ,SAASnL,EAAQ4H,GAAKoD,UAAAA,CAAAA;IACjG,EAOiHpD,EAAAA;EAGjH;AA9BO,MAgCMmD,IAA2BnD,CAAAA,OAASwD,EAAkBxD,EAAAA,KAAwB,aAAfA,QAAAA,KAAAA,SAAAA,GAAMmC;AAhC3E,MAkCMqB,IAAqBxD,CAAAA,QAASA,QAAAA,KAAAA,SAAAA,GAAMD,cAAaG,KAAKuD;AAlC5D,MAoCMC,IAAqB,SAAS1D,IAAAA;AAAqB,QAAA,EAAfjI,MAAEA,GAAAA,IAAM4G,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAC1D,QAAKqB;AAGL,aAAI2D,EAAe3D,EAAAA,IACbA,GAAKmC,SAAS1E,IAAAA,CACZ1F,MACKiI,GAAK3G,WAAW+I,QAAQwB,qBAAqB7L,KAAAA,SAMjD2L,EAAmB1D,GAAKoD,UAAAA;EAEnC;AAnDO,MAqDMS,IAA2B7D,CAAAA,OAASF,EAAuBE,IAAMtI,CAAAA;AArDvE,MAuDMoM,IAAuB9D,CAAAA,OAAS2D,EAAe3D,EAAAA,KAAwB,QAAfA,QAAAA,KAAAA,SAAAA,GAAMmC;AAvDpE,MAyDMwB,IAAkB3D,CAAAA,QAASA,QAAAA,KAAAA,SAAAA,GAAMD,cAAaG,KAAK6D;AAzDzD,MCxNDC,IAAQ,EACZC,eAAAA,MAEAC,WAAAA;AACE,WAAI5K,KAAK2K,iBAAiBE,EAAQ3J,sBACzB,IAEA;EAEV,GACD4J,UAAUC,IAAAA;AACR,UAAML,KAAQrC,EAAY,SAAS,EAAE2C,MAAM,QAAQC,UAAAA,MAAgBC,QAAAA,MAAcC,IAAInL,KAAKoL,YAAAA,CAAAA;AAE1FV,IAAAA,GAAMzE,iBAAiB,UAAU,MAAA;AAC/B8E,MAAAA,GAASL,GAAMW,KAAAA,GACf/D,EAAWoD,EAAAA;IAAM,CAAA,GAGnBpD,EAAW5C,SAAS4G,eAAetL,KAAKoL,WAAAA,CAAAA,GACxC1G,SAAS6G,KAAKhC,YAAYmB,EAAAA,GAC1BA,GAAMc,MAAAA;EACR,EAAA;ACxBF,MCAeC,IAAA,EACbC,uBAAAA,OACAC,oBAAoB,OACpBC,mBAAmB,KAAA;ADHrB,MEEeC,IAAA,EACbhK,MAAM,EACJ/C,SAAS,UACTgN,aAAAA,MACAL,OAAO3L,IAAAA;AACL,UAAM8I,KAAQmD,OAAOC,iBAAiBlM,EAAAA;AACtC,WAA4B,WAArB8I,GAAMqD,cAAyBrD,GAAMqD,cAAc;EAC5D,EAAA,GAEF9J,QAAQ,EACNrD,SAAS,MACTgN,aAAAA,MACAL,QAAO3L,CAAAA,OAEsB,aADbiM,OAAOC,iBAAiBlM,EAAAA,EACzBoM,UAAAA,GAGjBC,MAAM,EACJC,cAAc,KACdX,OAAO3L,IAAAA;AACL,UAAMkF,KAAgB,SAAAvB,OAAYrF,GAAqB,GAAA,GACjDgE,KAAOtC,GAAQgH,QAAQ9B,EAAAA;AAC7B,QAAI5C;AACF,aAAOA,GAAKiK,aAAa,MAAA;EAE7B,EAAA,GAEF5J,QAAQ,EACN3D,SAAS,OACTgN,aAAAA,KAAa,GAEfQ,QAAQ,EACN1D,OAAO,EAAE2D,iBAAiB,YAAA,EAAA,EAAA;AFlC9B,MGEeC,IAAA,EACbC,gBAAcA,MACZhJ,2RAAAA,OAE6IL,EAAKvB,MAAI4B,kBAAAA,EAAAA,OAAmBL,EAAKvB,MAAI4B,gKAAAA,EAAAA,OACjCL,EAAKjB,QAAMsB,kBAAAA,EAAAA,OAAmBL,EAAKjB,QAAMsB,8IAAAA,EAAAA,OAC3DL,EAAKX,QAAMgB,kBAAAA,EAAAA,OAAmBL,EAAKX,QAAMgB,oLAAAA,EAAAA,OACHL,EAAKhB,MAAIqB,kBAAAA,EAAAA,OAAmBL,EAAKhB,MAAIqB,gRAAAA,EAAAA,OAItEL,EAAKlE,UAAQuE,kBAAAA,EAAAA,OAAmBL,EAAKlE,UAAQuE,4IAAAA,EAAAA,OACpDL,EAAKpE,OAAKyE,kBAAAA,EAAAA,OAAmBL,EAAKpE,OAAKyE,0IAAAA,EAAAA,OACzCL,EAAK9D,MAAImE,kBAAAA,EAAAA,OAAmBL,EAAK9D,MAAImE,mJAAAA,EAAAA,OAC5BL,EAAKtB,SAAO2B,kBAAAA,EAAAA,OAAmBL,EAAKtB,SAAAA,mJAAAA,EAAO2B,OAC3CL,EAAKf,SAAAA,kBAAAA,EAAOoB,OAAmBL,EAAKf,SAAAA,yKAAAA,EAAOoB,OACrBL,EAAKd,SAAAA,kBAAAA,EAAOmB,OAAmBL,EAAKd,SAAAA,yKAAAA,EAAOmB,OAC3CL,EAAKlB,QAAAA,kBAAAA,EAAMuB,OAAmBL,EAAKlB,QAAAA,2QAAAA,EAAMuB,OAIlEL,EAAKxB,aAAAA,kBAAAA,EAAW6B,OAAmBL,EAAKxB,aAAAA,kVAAAA,EAAW6B,OAM1CL,EAAKV,MAAAA,kBAAAA,EAAIe,OAAmBL,EAAKV,MAAAA,+JAAAA,EAAIe,OAC/BL,EAAKb,MAAAA,kBAAAA,EAAIkB,OAAmBL,EAAKb,MAAAA,oVAAAA,EAAIkB,OAO5FL,EAAKP,gBAAAA,gBAAAA,EAAcY,OAAiBL,EAAKR,KAAAA,kLAAAA,EAAGa,OAEvDL,EAAKhB,MAAAA,sHAAAA,EAAIqB,OACTL,EAAKT,QAAM,mGAAA,EAAA;ACxC7F,MAAMD,IAAO,EAAEgK,UAAU,IAAA;AAAA,MAAA,IAAA,OAAA,OAAA,EAAA,WAAA,MAAA,aAAA,GAAA,iBAAA,GAAA,SAAA,GAAA,KCAV,EACbC,YAAY,cACZC,mBAAmB,uBACnBC,yBAAyB,8BACzBC,oBAAoB,wBACpBC,6BAA6B,kCAC7BC,gBAAgB,oBAChBC,oBAAoB,wBACpBC,gBAAgB,oBAChBC,mBAAmB,uBACnBhN,mBAAmB,qBAAA,GAAA,WAAA,GAAA,UAAA,GAAA,OAAA,GAAA,ULVN,EACb,GAAG,aACH,GAAG,OACH,IAAI,UACJ,IAAI,UACJ,IAAI,QACJ,IAAI,SACJ,IAAI,UACJ,IAAI,KACJ,IAAI,KACJ,IAAI,IAAA,GAAA,MAAA,GAAA,QAAA,GAAA,gBAAA,GAAA,SAAA,GAAA,MAAA,EAAA,CAAA;AMVS,MAAMiN,IAAN,MAAMA;IACnB,OAAA,YAAmBC,IAAAA;AACjB,YAAA,EAAM5O,MAAEA,IAAI6O,UAAEA,IAAQC,YAAEA,IAAUC,UAAEA,GAAAA,IAAaC,EAA2BJ,EAAAA;AAE5ErN,WAAKsB,UAAU7C,MAAQ,WAAA;AACrB,YAAIiP,IACAC;AAGY,YAAAC,IASFC;AAVVP,QAAAA,KAEAK,KADEH,KACqBI,UAAjBA,KAAG5N,KAAKsN,QAAAA,WAASM,KAAAA,SAAdA,GAAA7H,KAAAA,IAAAA,IAEA/F,KAAKsN,IAAAA,IAEPC,OACTI,KAAS3N,KAAKuN;AAGhB,eAAIC,MACFE,KAAgB,UAATG,KAAGF,OAAAA,WAAME,KAAAA,SAANA,GAASpP,KACfiP,KACKI,EAAM/H,KAAK2H,IAASC,IAAQtI,SAAAA,IAAAA,WAGrCqI,KAAUC,GAAOlP,KACVqP,EAAM/H,KAAK2H,IAASC,IAAQtI,SAAAA;MAAAA;IAGzC;EAAA;AAGF,MAAMoI,IAA6B,SAASJ,IAAAA;AAC1C,UAAM3M,KAAQ2M,GAAW3M,MAAMqN,CAAAA;AAC/B,QAAA,CAAKrN;AACH,YAAM,IAAIsN,MAAK,wCAAAvK,OAAyC4J,EAAAA,CAAAA;AAG1D,UAAMY,KAAO,EAAExP,MAAMiC,GAAM,GAAA;AAY3B,WAVgB,QAAZA,GAAM,KACRuN,GAAKX,WAAW5M,GAAM,KAEtBuN,GAAKV,aAAa7M,GAAM,IAGV,QAAZA,GAAM,OACRuN,GAAKT,WAAAA,OAGAS;EACT;AAnBA,MAmBA,EAEQH,OAAAA,EAAAA,IAAUI,SAAS5M;AArB3B,MAuBMyM,IAA+B,IAAII,OAAO,gCAAA;AAAA,MAAA;AAAA,MAAA;AAAA,MAAA;ACpDjC,MAAMC,IAAN,cAA0BhB,EAAAA;IACvC,OAAA,MAAOiB;AAAgB,UAAZ7J,KAAKa,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG;AACjB,aAAIb,cAAiBxE,OACZwE,KAEAxE,KAAKsO,eAAe9J,QAAAA,KAAAA,SAAAA,GAAO+J,SAAAA,CAAAA;IAEtC;IAEA,OAAA,eAAsBC,IAAAA;AACpB,aAAO,IAAIxO,KAAKwO,IAAYC,GAAWD,EAAAA,CAAAA;IACzC;IAEA,OAAA,eAAsBE,IAAAA;AACpB,aAAO,IAAI1O,KAAK2O,GAAWD,EAAAA,GAAaA,EAAAA;IAC1C;IAEAE,YAAYJ,IAAYE,IAAAA;AACtBG,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKwO,aAAaA,IAClBxO,KAAK0O,aAAaA,IAClB1O,KAAKsF,SAAStF,KAAK0O,WAAWpJ,QAC9BtF,KAAK8O,aAAa9O,KAAKwO,WAAWlJ;IACpC;IAEAyJ,mBAAmBC,IAAAA;AACjB,aAAOL,GAAW3O,KAAK0O,WAAWO,MAAM,GAAGrL,KAAKsL,IAAI,GAAGF,EAAAA,CAAAA,CAAAA,EAAU1J;IACnE;IAEA6J,qBAAqBC,IAAAA;AACnB,aAAOX,GAAWzO,KAAKwO,WAAWS,MAAM,GAAGrL,KAAKsL,IAAI,GAAGE,EAAAA,CAAAA,CAAAA,EAAc9J;IACvE;IAEA2J,QAAAA;AACE,aAAOjP,KAAK4O,YAAYS,eAAerP,KAAK0O,WAAWO,MAAAA,GAAS5J,SAAAA,CAAAA;IAClE;IAEAiK,OAAON,IAAAA;AACL,aAAOhP,KAAKiP,MAAMD,IAAQA,KAAS,CAAA;IACrC;IAEAO,UAAU/K,IAAAA;AACR,aAAOxE,KAAK4O,YAAYP,IAAI7J,EAAAA,EAAOgK,eAAexO,KAAKwO;IACzD;IAEAgB,SAAAA;AACE,aAAOxP,KAAKwO;IACd;IAEAiB,cAAAA;AACE,aAAOzP,KAAKwO;IACd;IAEAD,WAAAA;AACE,aAAOvO,KAAKwO;IACd;EAAA;AAGF,MAAMkB,IAAuD,OAA9B,UAAVC,IAAAC,MAAMC,SAAAA,WAAIF,IAAAA,SAAVA,EAAA5J,KAAA6J,OAAa,WAAA,EAAgBtK;AAAlD,MACMwK,IAA+C,SAAT,UAAfC,IAAA,IAAIC,gBAAAA,WAAWD,IAAAA,SAAfA,EAAAhK,KAAA,KAAkB,CAAA;AAD/C,MAEMkK,KAAgE,kBAAnB,UAApBC,IAAAC,OAAOC,kBAAAA,WAAaF,IAAAA,SAApBA,EAAAnK,KAAAoK,QAAuB,IAAI,MAAA;AAK1D,MAAI1B;AAAJ,MAAgBE;AAQdF,OADEiB,KAAgBI,IACJO,CAAAA,OAAWT,MAAMC,KAAKQ,EAAAA,EAAQC,IAAKC,CAAAA,OAASA,GAAKP,YAAY,CAAA,CAAA,IAE9D,SAASK,IAAAA;AACpB,UAAMG,KAAS,CAAA;AACf,QAAIC,KAAU;AACd,UAAA,EAAMnL,QAAEA,GAAAA,IAAW+K;AAEnB,WAAOI,KAAUnL,MAAQ;AACvB,UAAId,KAAQ6L,GAAOK,WAAWD,IAAAA;AAC9B,UAAI,SAAUjM,MAASA,MAAS,SAAUiM,KAAUnL,IAAQ;AAE1D,cAAMqL,KAAQN,GAAOK,WAAWD,IAAAA;AACP,kBAAZ,QAARE,MAEHnM,OAAkB,OAARA,OAAkB,OAAe,OAARmM,MAAiB,QAIpDF;MAEJ;AACAD,MAAAA,GAAO7G,KAAKnF,EAAAA;IACd;AAEA,WAAOgM;EAAAA,GAMT7B,KADEsB,KACYW,CAAAA,OAAUT,OAAOC,cAAAA,GAAiBR,MAAMC,KAAKe,MAAS,CAAA,CAAA,CAAA,IAEvD,SAASA,IAAAA;AAiBpB,YAhBmB,MAAA;AACjB,YAAMC,KAAS,CAAA;AAYf,aAVAjB,MAAMC,KAAKe,EAAAA,EAAO3H,QAASzE,CAAAA,OAAAA;AACzB,YAAIgM,KAAS;AACThM,QAAAA,KAAQ,UACVA,MAAS,OACTgM,MAAUL,OAAOW,aAAatM,OAAU,KAAK,OAAQ,KAAA,GACrDA,KAAQ,QAAiB,OAARA,KAEnBqM,GAAOlH,KAAK6G,KAASL,OAAOW,aAAatM,EAAAA,CAAAA;MAAO,CAAA,GAG3CqM;IACR,GAdkB,EAgBDE,KAAK,EAAA;EAAA;ACzH3B,MAAI5F,KAAK;AAEM,MAAM6F,KAAN,cAAyB5D,EAAAA;IACtC,OAAA,eAAsB6D,IAAAA;AACpB,aAAOjR,KAAKkR,SAASC,KAAKpS,MAAMkS,EAAAA,CAAAA;IAClC;IAEArC,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKmL,KAAAA,EAAOA;IACd;IAEAiG,qBAAqBzD,IAAAA;AACnB,aAAO3N,KAAK4O,iBAAgBjB,QAAAA,KAAAA,SAAAA,GAAQiB;IACtC;IAEAW,UAAU5B,IAAAA;AACR,aAAO3N,SAAS2N;IAClB;IAEA0D,UAAAA;AACE,YAAMC,KAAQ,CAAA,GACRC,KAAWvR,KAAKwR,sBAAAA,KAA2B,CAAA;AAEjD,iBAAWjN,MAAOgN,IAAU;AAC1B,cAAM/M,KAAQ+M,GAAShN;AACvB+M,QAAAA,GAAM3H,KAAI,GAAAlG,OAAIc,IAAG,GAAA,EAAAd,OAAIe,EAAAA,CAAAA;MACvB;AAEA,aAAA,KAAAf,OAAYzD,KAAK4O,YAAYnQ,MAAI,GAAA,EAAAgF,OAAIzD,KAAKmL,EAAAA,EAAE1H,OAAG6N,GAAMhM,SAAM,IAAA7B,OAAO6N,GAAMP,KAAK,IAAA,CAAA,IAAU,IAAE,GAAA;IAC3F;IAEAS,wBAAAA;IAAyB;IAEzBC,eAAAA;AACE,aAAON,KAAKO,UAAU1R,IAAAA;IACxB;IAEA2R,gBAAAA;AACE,aAAOvD,EAAYC,IAAIrO,IAAAA;IACzB;IAEAyP,cAAAA;AACE,aAAOzP,KAAKmL,GAAGoD,SAAAA;IACjB;EAAA;AC5CK,MAAMqD,KAAiB,WAAA;AAAyB,QAAhBC,KAACxM,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAIyM,KAACzM,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACjD,QAAIwM,GAAEvM,WAAWwM,GAAExM;AACjB,aAAA;AAEF,aAASyM,KAAQ,GAAGA,KAAQF,GAAEvM,QAAQyM,MAAS;AAE7C,UADcF,GAAEE,QACFD,GAAEC;AACd,eAAA;IAEJ;AACA,WAAA;EACF;AAXO,MAeMC,KAAc,SAASpB,IAAAA;AAClC,UAAMC,KAASD,GAAM3B,MAAM,CAAA;AAAE,aAAAgD,KAAA5M,UAAAC,QADe2I,KAAAA,IAAI2B,MAAAqC,KAAAA,IAAAA,KAAAA,IAAAA,CAAAA,GAAAC,KAAA,GAAAA,KAAAD,IAAAC;AAAJjE,MAAAA,GAAIiE,KAAA7M,KAAAA,UAAA6M;AAGhD,WADArB,GAAOsB,OAAAA,GAAUlE,EAAAA,GACV4C;EACT;AAnBO,MCADuB,KACJ;ADDK,MCGMC,KAAgB,WAAA;AAC3B,UAAM3H,KAAQrC,EAAY,SAAS,EAAEiK,KAAK,QAAQ7T,MAAM,KAAK8T,SAAS,QAAA,CAAA,GAChEC,KAAWnK,EAAY,YAAY,EAAEiK,KAAK,QAAQ7T,MAAM,KAAK8T,SAAS,QAAA,CAAA,GACtEE,KAAOpK,EAAY,MAAA;AACzBoK,IAAAA,GAAKlJ,YAAYmB,EAAAA,GACjB+H,GAAKlJ,YAAYiJ,EAAAA;AAEjB,UAAME,KAAmB,WAAA;AACvB,UAAA;AACE,eAAO,IAAIC,SAASF,EAAAA,EAAMG,IAAIJ,GAASD,OAAAA;MACxC,SAAQM,IAAP;AACA,eAAA;MACF;IACF,EANyB,GAQnBC,KAAuB,WAAA;AAC3B,UAAA;AACE,eAAOpI,GAAM9F,QAAQ,qBAAA;MACtB,SAAQiO,IAAP;AACA,eAAA;MACF;IACF,EAN6B;AAQ7B,WAAIH,KACK,SAASrC,IAAAA;AAEd,aADAmC,GAAShO,QAAQ6L,IACV,IAAIsC,SAASF,EAAAA,EAAMM,IAAIP,GAASD,OAAAA;IAAAA,IAEhCO,KACF,SAASzC,IAAAA;AAEd,aADA3F,GAAMlG,QAAQ6L,IACV3F,GAAM9F,QAAQ,WAAA,IACT,QAEA;IAAA,IAIJ,SAASyL,IAAAA;AACd,YAAME,KAAOF,GAAO2C,KAAAA,EAAO1D,OAAO,CAAA;AAClC,aAAI8C,GAAYvS,KAAK0Q,EAAAA,IACZ,QAEA;IAAA;EAIf,EA/C6B;ACJ7B,MAAI0C,KAAoB;AAAxB,MACIC,KAAsB;AAD1B,MAEIC,KAAqB;AAFzB,MAGIC,KAAqB;AAElB,MAAMC,KAAuBA,OAC7BJ,OACHA,KAAoBK,GAAAA,EAAwB7P,OAAO8P,GAAAA,CAAAA,IAE9CN;AAJF,MAOMO,KAAkBC,CAAAA,OAAkBC,EAAuBD;AAPjE,MASMF,KAAyBA,OAC/BL,OACHA,KAAsBS,OAAOC,KAAKF,CAAAA,IAE7BR;AAbF,MAgBMW,KAAiBJ,CAAAA,OAAkBC,EAAsBD;AAhB/D,MAkBMH,KAAwBA,OAC9BH,OACHA,KAAqBQ,OAAOC,KAAKF,CAAAA,IAE5BP;AAtBF,MCLMW,KAA8B,SAAShV,IAASiV,IAAAA;AACtCC,OAA6BlV,EAAAA,EACrCsK,cAAc2K,GAAW7P,QAAQ,OAAOpF,EAAAA;EACvD;ADEO,MCADkV,KAA+B,SAASlV,IAAAA;AAC5C,UAAMgB,KAAU4E,SAAS8D,cAAc,OAAA;AACvC1I,IAAAA,GAAQ6I,aAAa,QAAQ,UAAA,GAC7B7I,GAAQ6I,aAAa,iBAAiB7J,GAAQwB,YAAAA,CAAAA;AAC9C,UAAM2T,KAAQC,GAAAA;AAKd,WAJID,MACFnU,GAAQ6I,aAAa,SAASsL,EAAAA,GAEhCvP,SAASyP,KAAKC,aAAatU,IAAS4E,SAASyP,KAAKrK,UAAAA,GAC3ChK;EACT;ADVO,MCYDoU,KAAc,WAAA;AAClB,UAAMpU,KAAUuU,GAAe,gBAAA,KAAqBA,GAAe,WAAA;AACnE,QAAIvU,IAAS;AACX,YAAA,EAAMmU,OAAEA,IAAKK,SAAEA,GAAAA,IAAYxU;AAC3B,aAAgB,MAATmU,KAAcK,KAAUL;IACjC;EACF;ADlBO,MCoBDI,KAAkB5V,CAAAA,OAASiG,SAASyP,KAAKI,cAAa9Q,aAAAA,OAAchF,IAAAA,GAAAA,CAAAA;ADpBnE,MEPD+V,KAAmB,EAAE,wCAAwC,OAAA;AFO5D,MELMC,KAA0B,SAASC,IAAAA;AAC9C,UAAMlV,KAAOkV,GAAaC,QAAQ,YAAA,GAC5BlQ,KAAOiQ,GAAaC,QAAQ,WAAA;AAElC,QAAA,CAAInV,MAAAA,CAAQiF;AAMV,aAAOjF,QAAAA,KAAAA,SAAAA,GAAM8F;AANG;AAChB,YAAA,EAAMiG,MAAEA,GAAAA,IAAS,IAAIqJ,YAAYC,gBAAgBpQ,IAAM,WAAA;AACvD,UAAI8G,GAAKnC,gBAAgB5J;AACvB,eAAA,CAAQ+L,GAAKgJ,cAAc,GAAA;IAE/B;EAGF;AFPO,ME+BMO,KACP,UAAUjV,KAAKW,UAAUuU,QAAAA,IACnBpP,CAAAA,OAAUA,GAAMqP,UAEhBrP,CAAAA,OAAUA,GAAMsP;AC1CrB,MAAMC,KAASC,CAAAA,OAAOC,WAAWD,IAAI,CAAA;AAArC,MCGME,KAAa,WAAA;AAAsB,QAAb1H,KAAMtI,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAC1C,UAAMwL,KAAS,CAAA;AACf,eAAWtM,MAAOoJ,IAAQ;AACxB,YAAMnJ,KAAQmJ,GAAOpJ;AACrBsM,MAAAA,GAAOtM,MAAOC;IAChB;AACA,WAAOqM;EACT;ADVO,MCYMyE,KAAkB,WAAA;AAAyB,QAAhBzD,KAACxM,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAIyM,KAACzM,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAClD,QAAIsO,OAAOC,KAAK/B,EAAAA,EAAGvM,WAAWqO,OAAOC,KAAK9B,EAAAA,EAAGxM;AAC3C,aAAA;AAEF,eAAWf,MAAOsN,IAAG;AAEnB,UADcA,GAAEtN,QACFuN,GAAEvN;AACd,eAAA;IAEJ;AACA,WAAA;EACF;ADvBO,MEEMgR,KAAiB,SAASC,IAAAA;AACrC,QAAa,QAATA;AAKJ,aAHK5F,MAAM6F,QAAQD,EAAAA,MACjBA,KAAQ,CAAEA,IAAOA,EAAAA,IAEZ,CAAEE,GAAUF,GAAM,EAAA,GAAKE,GAAsB,QAAZF,GAAM,KAAaA,GAAM,KAAKA,GAAM,EAAA,CAAA;EAC9E;AFTO,MEWMG,KAAmB,SAASH,IAAAA;AACvC,QAAa,QAATA;AAAe;AAEnB,UAAA,CAAQI,IAAOC,EAAAA,IAAQN,GAAeC,EAAAA;AACtC,WAAOM,GAAoBF,IAAOC,EAAAA;EACpC;AFhBO,MEkBME,KAAiB,SAASC,IAAWC,IAAAA;AAChD,QAAiB,QAAbD,MAAmC,QAAdC;AAAoB;AAE7C,UAAA,CAAQC,IAAWC,EAAAA,IAAYZ,GAAeS,EAAAA,GAAAA,CACtCI,IAAYC,EAAAA,IAAad,GAAeU,EAAAA;AAChD,WAAOH,GAAoBI,IAAWE,EAAAA,KAAeN,GAAoBK,IAASE,EAAAA;EACpF;AFxBO,ME0BDX,KAAY,SAASlR,IAAAA;AACzB,WAAqB,YAAA,OAAVA,KACFA,KAEA6Q,GAAW7Q,EAAAA;EAEtB;AFhCO,MEkCDsR,KAAsB,SAASQ,IAAMC,IAAAA;AACzC,WAAoB,YAAA,OAATD,KACFA,OAASC,KAETjB,GAAgBgB,IAAMC,EAAAA;EAEjC;ACtCe,MAAMC,KAAN,cAAsCpJ,EAAAA;IACnDwB,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKyW,SAASzW,KAAKyW,OAAOC,KAAK1W,IAAAA,GAC/BA,KAAK2W,oBAAoB,CAAA;IAC3B;IAEAf,QAAAA;AACO5V,WAAK4W,YACR5W,KAAK4W,UAAAA,MACLlS,SAASuB,iBAAiB,mBAAmBjG,KAAKyW,QAAAA,IAAQ;IAE9D;IAEAI,OAAAA;AACE,UAAI7W,KAAK4W;AAEP,eADA5W,KAAK4W,UAAAA,OACElS,SAASsB,oBAAoB,mBAAmBhG,KAAKyW,QAAAA,IAAQ;IAExE;IAEAK,yBAAyBC,IAAAA;AACvB,UAAA,CAAK/W,KAAK2W,kBAAkB1M,SAAS8M,EAAAA;AAEnC,eADA/W,KAAK2W,kBAAkBhN,KAAKoN,EAAAA,GACrB/W,KAAK4V,MAAAA;IAEhB;IAEAoB,2BAA2BD,IAAAA;AAEzB,UADA/W,KAAK2W,oBAAoB3W,KAAK2W,kBAAkBM,OAAQC,CAAAA,OAAOA,OAAOH,EAAAA,GAChC,MAAlC/W,KAAK2W,kBAAkBrR;AACzB,eAAOtF,KAAK6W,KAAAA;IAEhB;IAEAM,2CAAAA;AACE,aAAOnX,KAAK2W,kBAAkBrG,IAAKyG,CAAAA,OAAqBA,GAAiBK,mBAAAA,CAAAA;IAC3E;IAEAX,SAAAA;AACEzW,WAAKmX,yCAAAA;IACP;IAEAE,QAAAA;AACErX,WAAKyW,OAAAA;IACP;EAAA;AAGK,MAAMa,KAA0B,IAAId;AAApC,MAEMe,KAAkB,WAAA;AAC7B,UAAMC,KAAYzL,OAAO0L,aAAAA;AACzB,QAAID,GAAUE,aAAa;AACzB,aAAOF;EAEX;AAPO,MASMG,KAAc,WAAA;AAAW,QAAAC;AACpC,UAAMC,KAA4BD,UAApBA,KAAGL,GAAAA,MAAAA,WAAiBK,KAAAA,SAAjBA,GAAmBE,WAAW,CAAA;AAC/C,QAAID,MAAAA,CACGE,GAAkBF,EAAAA;AACrB,aAAOA;EAGb;AAhBO,MAkBMG,KAAc,SAASH,IAAAA;AAClC,UAAML,KAAYzL,OAAO0L,aAAAA;AAGzB,WAFAD,GAAUS,gBAAAA,GACVT,GAAUU,SAASL,EAAAA,GACZP,GAAwBb,OAAAA;EACjC;AAvBO,MA6BDsB,KAAqBF,CAAAA,OAAaM,GAAcN,GAASO,cAAAA,KAAmBD,GAAcN,GAASQ,YAAAA;AA7BlG,MA+BDF,KAAiBzR,CAAAA,OAAAA,CAAUiN,OAAO2E,eAAe5R,EAAAA;AA/BhD,MC3CM6R,KAAmBlI,CAAAA,OAC9BA,GAAOnM,QAAQ,IAAIiK,OAAM,GAAA1K,OAAIU,CAAAA,GAAoB,GAAA,GAAM,EAAA,EAAID,QAAQ,IAAIiK,OAAM,GAAA1K,OAAIW,CAAAA,GAAsB,GAAA,GAAM,GAAA;AD0CxG,MCtCMoU,KAA6B,IAAIrK,OAAAA,QAAM1K,OAASW,GAAkB,GAAA,CAAA;ADsCxE,MCpCMqU,KAA6BpI,CAAAA,OACxCA,GAEGnM,QAAQ,IAAIiK,OAAAA,GAAM1K,OAAI+U,GAA2BE,MAAAA,GAAU,GAAA,GAAM,GAAA,EAEjExU,QAAQ,WAAW,GAAA;AD+BjB,MCfDyU,KAAyB,SAAS9G,IAAGC,IAAAA;AACzC,QAAID,GAAEtC,UAAUuC,EAAAA;AACd,aAAO,CAAE,IAAI,EAAA;AAGf,UAAM8G,KAAQC,GAAsBhH,IAAGC,EAAAA,GAAAA,EACjCxM,QAAEA,GAAAA,IAAWsT,GAAME;AAEzB,QAAIC;AAEJ,QAAIzT,IAAQ;AACV,YAAA,EAAM0J,QAAEA,GAAAA,IAAW4J,IACblK,KAAamD,GAAEnD,WAAWO,MAAM,GAAGD,EAAAA,EAAQvL,OAAOoO,GAAEnD,WAAWO,MAAMD,KAAS1J,EAAAA,CAAAA;AACpFyT,MAAAA,KAAQF,GAAsB/G,IAAG1D,EAAYiB,eAAeX,EAAAA,CAAAA;IAC9D;AACEqK,MAAAA,KAAQF,GAAsB/G,IAAGD,EAAAA;AAGnC,WAAO,CAAE+G,GAAME,YAAYvK,SAAAA,GAAYwK,GAAMD,YAAYvK,SAAAA,CAAAA;EAC3D;ADJO,MCMDsK,KAAwB,SAAShH,IAAGC,IAAAA;AACxC,QAAIkH,KAAY,GACZC,KAAcpH,GAAEvM,QAChB4T,KAAcpH,GAAExM;AAEpB,WAAO0T,KAAYC,MAAepH,GAAEvC,OAAO0J,EAAAA,EAAWzJ,UAAUuC,GAAExC,OAAO0J,EAAAA,CAAAA;AACvEA,MAAAA;AAGF,WAAOC,KAAcD,KAAY,KAAKnH,GAAEvC,OAAO2J,KAAc,CAAA,EAAG1J,UAAUuC,GAAExC,OAAO4J,KAAc,CAAA,CAAA;AAC/FD,MAAAA,MACAC;AAGF,WAAO,EACLJ,aAAajH,GAAE5C,MAAM+J,IAAWC,EAAAA,GAChCjK,QAAQgK,GAAAA;EAEZ;ACvEe,MAAMG,KAAN,cAAmBnI,GAAAA;IAChC,OAAA,gCAAOoI;AAA4C,UAAdC,KAAOhU,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAC7C,UAAA,CAAKgU,GAAQ/T;AACX,eAAO,IAAItF;AAEb,UAAIsZ,KAAOjL,GAAIgL,GAAQ,EAAA,GACnBzF,KAAO0F,GAAKC,QAAAA;AAOhB,aALAF,GAAQpK,MAAM,CAAA,EAAGhG,QAAS0E,CAAAA,OAAAA;AACxBiG,QAAAA,KAAO0F,GAAKE,oBAAoBnL,GAAIV,EAAAA,CAAAA,GACpC2L,KAAOA,GAAKrK,MAAM2E,EAAAA;MAAK,CAAA,GAGlB0F;IACT;IAEA,OAAA,IAAWG,IAAAA;AACT,aAAOpL,GAAIoL,EAAAA;IACb;IAEA7K,cAAAA;AAAyB,UAAb6K,KAAMpU,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACnBwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKyZ,SAASC,GAAKD,EAAAA;IACrB;IAEAtQ,IAAI5E,IAAKC,IAAAA;AACP,aAAOxE,KAAK2Z,MAAMhM,GAAOpJ,IAAKC,EAAAA,CAAAA;IAChC;IAEAhC,OAAO+B,IAAAA;AACL,aAAO,IAAI4U,GAAKO,GAAK1Z,KAAKyZ,QAAQlV,EAAAA,CAAAA;IACpC;IAEAwO,IAAIxO,IAAAA;AACF,aAAOvE,KAAKyZ,OAAOlV;IACrB;IAEAqO,IAAIrO,IAAAA;AACF,aAAOA,MAAOvE,KAAKyZ;IACrB;IAEAE,MAAMF,IAAAA;AACJ,aAAO,IAAIN,GAAKQ,GAAM3Z,KAAKyZ,QAAQG,GAAMH,EAAAA,CAAAA,CAAAA;IAC3C;IAEAxK,MAAM2E,IAAAA;AACJ,YAAM6F,KAAS,CAAA;AAQf,aANA7J,MAAMC,KAAK+D,EAAAA,EAAM3K,QAAS1E,CAAAA,OAAAA;AACpBvE,aAAK4S,IAAIrO,EAAAA,MACXkV,GAAOlV,MAAOvE,KAAKyZ,OAAOlV;MAC5B,CAAA,GAGK,IAAI4U,GAAKM,EAAAA;IAClB;IAEAF,UAAAA;AACE,aAAO5F,OAAOC,KAAK5T,KAAKyZ,MAAAA;IAC1B;IAEAD,oBAAoBF,IAAAA;AAElB,aADAA,KAAOjL,GAAIiL,EAAAA,GACJtZ,KAAKuZ,QAAAA,EAAUtC,OAAQ1S,CAAAA,OAAQvE,KAAKyZ,OAAOlV,QAAS+U,GAAKG,OAAOlV,GAAAA;IACzE;IAEAgL,UAAUkK,IAAAA;AACR,aAAO7H,GAAe5R,KAAK6Z,QAAAA,GAAWxL,GAAIoL,EAAAA,EAAQI,QAAAA,CAAAA;IACpD;IAEAC,UAAAA;AACE,aAAiC,MAA1B9Z,KAAKuZ,QAAAA,EAAUjU;IACxB;IAEAuU,UAAAA;AACE,UAAA,CAAK7Z,KAAK4Q,OAAO;AACf,cAAMC,KAAS,CAAA;AACf,mBAAWtM,MAAOvE,KAAKyZ,QAAQ;AAC7B,gBAAMjV,KAAQxE,KAAKyZ,OAAOlV;AAC1BsM,UAAAA,GAAOlH,KAAKkH,GAAOlH,KAAKpF,IAAKC,EAAAA,CAAAA;QAC/B;AACAxE,aAAK4Q,QAAQC,GAAO5B,MAAM,CAAA;MAC5B;AAEA,aAAOjP,KAAK4Q;IACd;IAEAmJ,WAAAA;AACE,aAAOL,GAAK1Z,KAAKyZ,MAAAA;IACnB;IAEAjK,SAAAA;AACE,aAAOxP,KAAK+Z,SAAAA;IACd;IAEAvI,wBAAAA;AACE,aAAO,EAAEiI,QAAQtI,KAAKO,UAAU1R,KAAKyZ,MAAAA,EAAAA;IACvC;EAAA;AAGF,MAAM9L,KAAS,SAASpJ,IAAKC,IAAAA;AAC3B,UAAMqM,KAAS,CAAA;AAEf,WADAA,GAAOtM,MAAOC,IACPqM;EACT;AAJA,MAMM8I,KAAQ,SAAShM,IAAQ8L,IAAAA;AAC7B,UAAM5I,KAAS6I,GAAK/L,EAAAA;AACpB,eAAWpJ,MAAOkV,IAAQ;AACxB,YAAMjV,KAAQiV,GAAOlV;AACrBsM,MAAAA,GAAOtM,MAAOC;IAChB;AACA,WAAOqM;EACT;AAbA,MAeM6I,KAAO,SAAS/L,IAAQqM,IAAAA;AAC5B,UAAMnJ,KAAS,CAAA;AASf,WARmB8C,OAAOC,KAAKjG,EAAAA,EAAQsM,KAAAA,EAE5BhR,QAAS1E,CAAAA,OAAAA;AACdA,MAAAA,OAAQyV,OACVnJ,GAAOtM,MAAOoJ,GAAOpJ;IACvB,CAAA,GAGKsM;EACT;AA1BA,MA4BMxC,KAAM,SAASV,IAAAA;AACnB,WAAIA,cAAkBwL,KACbxL,KAEA,IAAIwL,GAAKxL,EAAAA;EAEpB;AAlCA,MAoCMiM,KAAQ,SAASjM,IAAAA;AACrB,WAAIA,cAAkBwL,KACbxL,GAAO8L,SAEP9L;EAEX;ACjJe,MAAMuM,KAAN,MAAMA;IACnB,OAAA,eAAOC;AAA4D,UAC7D9a,IADc+a,KAAgB/U,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAA,EAAIgV,OAAEA,IAAKC,QAAEA,GAAAA,IAAQjV,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAEzDiV,MAAAA,MACW,QAATD,OACFA,KAAQ;AAGZ,YAAMhB,KAAU,CAAA;AAuBhB,aArBAzJ,MAAMC,KAAKuK,EAAAA,EAAkBnR,QAAS0E,CAAAA,OAAAA;AAAW,YAAA4M;AAC/C,YAAIlb,IAAO;AAAA,cAAAmb,IAAAC,IAAAC;AACT,cAAuB,UAAnBF,KAAA7M,GAAOgN,iBAAAA,WAAYH,MAAnBA,GAAAzU,KAAA4H,IAAsB0M,EAAAA,KAAkDI,UAA5CA,MAAIC,KAAArb,GAAMA,GAAMiG,SAAS,IAAGsV,qBAAAA,WAAgBH,MAAxCA,GAAA1U,KAAA2U,IAA2C/M,IAAQ0M,EAAAA;AAErF,mBAAA,KADAhb,GAAMsK,KAAKgE,EAAAA;AAGX0L,UAAAA,GAAQ1P,KAAK,IAAI3J,KAAKX,IAAO,EAAEgb,OAAAA,IAAOC,QAAAA,GAAAA,CAAAA,CAAAA,GACtCjb,KAAQ;QAEZ;AAAA,kBAEAkb,KAAI5M,GAAOgN,iBAAAA,WAAYJ,MAAnBA,GAAAxU,KAAA4H,IAAsB0M,EAAAA,IACxBhb,KAAQ,CAAEsO,EAAAA,IAEV0L,GAAQ1P,KAAKgE,EAAAA;MACf,CAAA,GAGEtO,MACFga,GAAQ1P,KAAK,IAAI3J,KAAKX,IAAO,EAAEgb,OAAAA,IAAOC,QAAAA,GAAAA,CAAAA,CAAAA,GAEjCjB;IACT;IAEAzK,cAAAA;AAA6C,UAAjCyK,KAAOhU,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAA,EAAIgV,OAAEA,IAAKC,QAAEA,GAAAA,IAAQjV,UAAAC,SAAAD,IAAAA,UAAAA,KAAAA;AACzCrF,WAAKqZ,UAAUA,IACXiB,OACFta,KAAKqa,QAAQA,IACbra,KAAKqZ,UAAUrZ,KAAK4O,YAAYuL,aAAana,KAAKqZ,SAAS,EAAEiB,QAAAA,IAAQD,OAAOra,KAAKqa,QAAQ,EAAA,CAAA;IAE7F;IAEAQ,aAAAA;AACE,aAAO7a,KAAKqZ;IACd;IAEAyB,WAAAA;AACE,aAAO9a,KAAKqa;IACd;IAEA5K,cAAAA;AACE,YAAMmE,KAAO,CAAE,aAAA;AAIf,aAHAhE,MAAMC,KAAK7P,KAAK6a,WAAAA,CAAAA,EAAc5R,QAAS0E,CAAAA,OAAAA;AACrCiG,QAAAA,GAAKjK,KAAKgE,GAAO8B,YAAAA,CAAAA;MAAc,CAAA,GAE1BmE,GAAK7C,KAAK,GAAA;IACnB;EAAA;ACtDa,MAAMgK,KAAN,cAAwB3N,EAAAA;IACrCwB,cAAAA;AAA0B,UAAdyK,KAAOhU,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACpBwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKqZ,UAAU,CAAA,GAEfzJ,MAAMC,KAAKwJ,EAAAA,EAASpQ,QAAS0E,CAAAA,OAAAA;AAC3B,cAAM2L,KAAOnI,KAAKO,UAAU/D,EAAAA;AACF,gBAAtB3N,KAAKqZ,QAAQC,QACftZ,KAAKqZ,QAAQC,MAAQ3L;MACvB,CAAA;IAEJ;IAEAqN,KAAKrN,IAAAA;AACH,YAAM2L,KAAOnI,KAAKO,UAAU/D,EAAAA;AAC5B,aAAO3N,KAAKqZ,QAAQC;IACtB;EAAA;AClBa,MAAM2B,KAAN,MAAMA;IACnBrM,YAAYsM,IAAAA;AACVlb,WAAKqX,MAAM6D,EAAAA;IACb;IAEA/R,IAAIrJ,IAAAA;AACF,YAAMyE,KAAM4W,GAAOrb,EAAAA;AACnBE,WAAKkb,SAAS3W,MAAOzE;IACvB;IAEA0C,OAAO1C,IAAAA;AACL,YAAMyE,KAAM4W,GAAOrb,EAAAA,GACb0E,KAAQxE,KAAKkb,SAAS3W;AAC5B,UAAIC;AAEF,eAAA,OADOxE,KAAKkb,SAAS3W,KACdC;IAEX;IAEA6S,QAAAA;AAAqB,UAAf6D,KAAQ7V,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAKf,aAJArF,KAAKkb,WAAW,CAAA,GAChBtL,MAAMC,KAAKqL,EAAAA,EAAUjS,QAASnJ,CAAAA,OAAAA;AAC5BE,aAAKmJ,IAAIrJ,EAAAA;MAAQ,CAAA,GAEZob;IACT;EAAA;AAGF,MAAMC,KAAUrb,CAAAA,OAAYA,GAAQgJ,QAAQsS;AC1B7B,MAAMC,KAAN,cAAwBjO,EAAAA;IACrCkO,eAAAA;AACE,aAAA,SAAOtb,KAAKub;IACd;IAEAC,eAAAA;AACE,aAAA,SAAOxb,KAAKyb;IACd;IAEAC,eAAAA;AACE,aAAO1b,KAAKyb,aAAazb,KAAK2b;IAChC;IAEAC,YAAAA;AACE,aAAO5b,KAAKyb,aAAAA,CAAczb,KAAK2b;IACjC;IAEAE,aAAAA;AAkBE,aAjBK7b,KAAK8b,YACR9b,KAAK8b,UAAU,IAAIC,QAAQ,CAACC,IAASC,QACnCjc,KAAKub,aAAAA,MACEvb,KAAKkc,QAAQ,CAACP,IAAW9K,OAAAA;AAC9B7Q,aAAK2b,YAAYA,IACjB3b,KAAKub,aAAAA,OACLvb,KAAKyb,YAAAA,MAEDzb,KAAK2b,YACPK,GAAQnL,EAAAA,IAERoL,GAAOpL,EAAAA;MACT,CAAA,EAAA,IAKC7Q,KAAK8b;IACd;IAEAI,QAAQnR,IAAAA;AACN,aAAOA,GAAAA,KAAS;IAClB;IAEAoR,UAAAA;AAAU,UAAAC,IAAAC;AAAAA,gBACRD,KAAAA,KAAKN,YAAAA,WAAOM,MAAQ,UAARC,KAAZD,GAAcE,WAAAA,WAAMD,MAApBA,GAAAtW,KAAAqW,EAAAA,GACApc,KAAK8b,UAAU,MACf9b,KAAKub,aAAa,MAClBvb,KAAKyb,YAAY,MACjBzb,KAAK2b,YAAY;IACnB;EAAA;AAGFN,KAAUkB,YAAY,mBAAA,GACtBlB,GAAUkB,YAAY,oBAAA;ACnDP,MAAMC,KAAN,cAAyBpP,EAAAA;IACtCwB,YAAYjB,IAAAA;AAAsB,UAAdpF,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAC5BwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK2N,SAASA,IACd3N,KAAKuI,UAAUA,IACfvI,KAAKyc,aAAa,CAAA,GAClBzc,KAAK0c,WAAW1c;IAClB;IAEA2c,WAAAA;AAEE,aADK3c,KAAK4c,UAAS5c,KAAK4c,QAAQ5c,KAAK6c,YAAAA,IAC9B7c,KAAK4c,MAAMtM,IAAK5J,CAAAA,OAASA,GAAKoW,UAAAA,IAAU,CAAA;IACjD;IAEAC,aAAAA;AAAa,UAAAC;AAGX,aAFAhd,KAAK4c,QAAQ,MACb5c,KAAKyc,aAAa,CAAA,GACI,UAAtBO,KAAOhd,KAAKid,eAAAA,WAAUD,KAAAA,SAAfA,GAAiBD,WAAAA;IAC1B;IAEAG,wBAAwBvP,IAAAA;AAAQ,UAAAwP;AAC9B,aAAqC,UAArCA,KAAOnd,KAAKod,kBAAkBzP,EAAAA,MAAAA,WAAOwP,KAAAA,SAA9BA,GAAgCJ,WAAAA;IACzC;IAEAM,4BAA4BC,IAAW3P,IAAQpF,IAAAA;AAC7C,UAAIgV,KAAOvd,KAAKwd,uBAAuB7P,EAAAA;AAOvC,aANI4P,KACFvd,KAAKyd,gBAAgBF,EAAAA,KAErBA,KAAOvd,KAAK0d,gBAAAA,GAAmBrY,SAAAA,GAC/BrF,KAAK2d,mBAAmBJ,IAAM5P,EAAAA,IAEzB4P;IACT;IAEAG,gBAAgBJ,IAAW3P,IAAAA;AAAsB,UAAdpF,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACvCsI,MAAAA,cAAkBuM,OACpB3R,GAAQ+U,YAAYA,IACpBA,KAAYM;AAGd,YAAML,KAAO,IAAID,GAAU3P,IAAQpF,EAAAA;AACnC,aAAOvI,KAAKyd,gBAAgBF,EAAAA;IAC9B;IAEAE,gBAAgBF,IAAAA;AAId,aAHAA,GAAKN,aAAajd,MAClBud,GAAKb,WAAW1c,KAAK0c,UACrB1c,KAAKyc,WAAW9S,KAAK4T,EAAAA,GACdA;IACT;IAEAM,mBAAAA;AACE,UAAIC,KAAQ,CAAA;AAOZ,aALA9d,KAAKyc,WAAWxT,QAAS8U,CAAAA,OAAAA;AACvBD,QAAAA,GAAMnU,KAAKoU,EAAAA,GACXD,KAAQA,GAAMra,OAAOsa,GAAUF,iBAAAA,CAAAA;MAAmB,CAAA,GAG7CC;IACT;IAEAE,cAAAA;AACE,aAAOhe,KAAKie,qBAAqBje,KAAK2N,MAAAA;IACxC;IAEAsQ,qBAAqBtQ,IAAAA;AACnB,YAAMxC,KAAKwC,QAAAA,KAAAA,SAAAA,GAAQxC;AACnB,UAAIA;AACF,eAAOnL,KAAK0c,SAAS5c,QAAQyU,cAAa,kBAAA9Q,OAAmB0H,IAAE,IAAA,CAAA;IAEnE;IAEAiS,kBAAkBzP,IAAAA;AAChB,iBAAW4P,MAAQvd,KAAK6d,iBAAAA;AACtB,YAAIN,GAAK5P,WAAWA;AAClB,iBAAO4P;IAGb;IAEAW,eAAAA;AACE,aAAIle,KAAK0c,aAAa1c,OAMbA,KAAK0c,SAASwB,aAAAA,IALjBle,KAAKme,qBAAAA,KACFne,KAAKoe,cAAape,KAAKoe,YAAY,CAAA,IACjCpe,KAAKoe,aAAAA;IAKlB;IAEAD,uBAAAA;AACE,aAAA,UAAOne,KAAKqe;IACd;IAEAC,oBAAAA;AACEte,WAAKqe,mBAAAA;IACP;IAEAE,qBAAAA;AACEve,WAAKqe,mBAAAA;IACP;IAEAb,uBAAuB7P,IAAAA;AAAQ,UAAA6Q;AAC7B,aAA0B,UAA1BA,KAAOxe,KAAKke,aAAAA,MAAAA,WAAcM,KAAAA,SAAnBA,GAAsB7Q,GAAO8B,YAAAA;IACtC;IAEAkO,mBAAmBJ,IAAM5P,IAAAA;AACvB,YAAM8Q,KAAQze,KAAKke,aAAAA;AACfO,MAAAA,OACFA,GAAM9Q,GAAO8B,YAAAA,KAAiB8N;IAElC;IAEAmB,4BAAAA;AACE,YAAMD,KAAQze,KAAKke,aAAAA;AACnB,UAAIO,IAAO;AACT,cACME,KADQ3e,KAAK6d,iBAAAA,EAAmBpa,OAAOzD,IAAAA,EACpBsQ,IAAKiN,CAAAA,OAASA,GAAK5P,OAAO8B,YAAAA,CAAAA;AACnD,mBAAWlL,MAAOka;AACXE,UAAAA,GAAW1U,SAAS1F,EAAAA,KAAAA,OAChBka,GAAMla;MAGnB;IACF;EAAA;AAGK,MAAMqZ,KAAN,cAA8BpB,GAAAA;IACnC5N,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK4e,cAAc5e,KAAK2N,QACxB3N,KAAKsd,YAAYtd,KAAKuI,QAAQ+U,WAAAA,OACvBtd,KAAKuI,QAAQ+U;IACtB;IAEAuB,gBAAAA;AAME,aALK7e,KAAKyc,WAAWnX,UACnBsK,MAAMC,KAAK7P,KAAK4e,YAAY/D,WAAAA,CAAAA,EAAc5R,QAAS0E,CAAAA,OAAAA;AACjD3N,aAAKqd,4BAA4Brd,KAAKsd,WAAW3P,IAAQ3N,KAAKuI,OAAAA;MAAQ,CAAA,GAGnEvI,KAAKyc;IACd;IAEAI,cAAAA;AACE,YAAM/c,KAAUE,KAAK8e,uBAAAA;AAQrB,aANA9e,KAAK6e,cAAAA,EAAgB5V,QAASsU,CAAAA,OAAAA;AAC5B3N,cAAMC,KAAK0N,GAAKZ,SAAAA,CAAAA,EAAY1T,QAASvC,CAAAA,OAAAA;AACnC5G,UAAAA,GAAQyJ,YAAY7C,EAAAA;QAAK,CAAA;MACzB,CAAA,GAGG,CAAE5G,EAAAA;IACX;IAEAgf,yBAAAA;AAA4D,UAArCzE,KAAKhV,UAAAC,SAAA,KAAA,WAAAD,UAAAE,KAAAF,UAAAA,KAAGrF,KAAK4e,YAAY9D,SAAAA;AAC9C,aAAO9a,KAAK6e,cAAAA,EAAgB,GAAGC,uBAAuBzE,EAAAA;IACxD;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9JF0E,KAAUC,QAAQ,yBAAyB,SAAUtY,IAAMmC,IAAAA;AACzB,kBACJhJ,KAAKgJ,GAAKoW,QAAAA,MACpCpW,GAAKqW,gBAAAA;EAET,CAAA;AAEA,MAAMC,KAA6B,6CAA6CnW,MAAM,GAAA;AAAtF,MACMoW,KAA8B,cAAcpW,MAAM,GAAA;AADxD,MAEMqW,KAA6B,8BAA8BrW,MAAM,GAAA;AAExD,MAAMsW,KAAN,cAA4BlS,EAAAA;IACzC,OAAA,QAAetN,IAAS2E,IAAAA;AACtB,YAAM8a,KAAmB,IAAIvf,KAAKyE,EAAAA,EAAM+a,SAAAA,GAClCC,KAAgBF,GAAiBG,UAAUH,GAAiBG,QAAAA,IAAYH,GAAiBI;AAC/F7f,MAAAA,GAAQ8f,YAAYH;IACtB;IAEA,OAAA,SAAgBhb,IAAM8D,IAAAA;AACpB,YAAMsX,KAAY,IAAI7f,KAAKyE,IAAM8D,EAAAA;AAEjC,aADAsX,GAAUL,SAAAA,GACHK;IACT;IAEAjR,YAAYnK,IAAAA;AAAyE,UAAA,EAAnEqb,mBAAEA,IAAiBC,oBAAEA,IAAkBC,mBAAEA,GAAAA,IAAmB3a,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAC/EwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK8f,oBAAoBA,MAAqBX,IAC9Cnf,KAAK+f,qBAAqBA,MAAsBX,IAChDpf,KAAKggB,oBAAoBA,MAAqBX,IAC9Crf,KAAKuL,OAAO0U,GAAyBxb,EAAAA;IACvC;IAEA+a,WAAAA;AAME,aALAxf,KAAKkgB,iBAAAA,GACLlgB,KAAKmgB,4BAAAA,GACLpB,GAAUqB,UAAU1M,CAAAA,GACpB1T,KAAKuL,OAAOwT,GAAUS,SAASxf,KAAKuL,IAAAA,GAE7BvL,KAAKuL;IACd;IAEAmU,UAAAA;AACE,aAAO1f,KAAKuL,KAAKqU;IACnB;IAEAS,UAAAA;AACE,aAAOrgB,KAAKuL;IACd;IAIA2U,mBAAAA;AACE,YAAMI,KAAS7Y,EAASzH,KAAKuL,IAAAA,GACvBgV,KAAgB,CAAA;AAEtB,aAAOD,GAAOE,SAAAA,KAAY;AACxB,cAAM9Z,KAAO4Z,GAAOG;AACpB,gBAAQ/Z,GAAKD,UAAAA;UACX,KAAKG,KAAKC;AACJ7G,iBAAK0gB,mBAAmBha,EAAAA,IAC1B6Z,GAAc5W,KAAKjD,EAAAA,IAEnB1G,KAAK2gB,gBAAgBja,EAAAA;AAEvB;UACF,KAAKE,KAAKuD;AACRoW,YAAAA,GAAc5W,KAAKjD,EAAAA;QAAAA;MAGzB;AAIA,aAFA6Z,GAActX,QAASvC,CAAAA,OAASY,EAAWZ,EAAAA,CAAAA,GAEpC1G,KAAKuL;IACd;IAEAoV,gBAAgB7gB,IAAAA;AAad,aAZIA,GAAQ8gB,aAAa,MAAA,KACnB5gB,KAAK+f,mBAAmB9V,SAASnK,GAAQ+gB,QAAAA,KAC3C/gB,GAAQghB,gBAAgB,MAAA,GAI5BlR,MAAMC,KAAK/P,GAAQlB,UAAAA,EAAYqK,QAAQ8X,CAAAA,OAAAA;AAAc,YAAA,EAAbtiB,MAAEA,GAAAA,IAAMsiB;AACzC/gB,aAAK8f,kBAAkB7V,SAASxL,EAAAA,KAAuC,MAA9BA,GAAKuiB,QAAQ,WAAA,KACzDlhB,GAAQghB,gBAAgBriB,EAAAA;MAC1B,CAAA,GAGKqB;IACT;IAEAqgB,8BAAAA;AAUE,aATAvQ,MAAMC,KAAK7P,KAAKuL,KAAK0V,iBAAiB,OAAA,CAAA,EAAUhY,QAASiY,CAAAA,OAAAA;AACvD,cAAMC,KAAkBD,GAAYE;AAChCD,QAAAA,MAC+B,SAA7BriB,EAAQqiB,EAAAA,KACVA,GAAgB5X,YAAY2X,EAAAA;MAEhC,CAAA,GAGKlhB,KAAKuL;IACd;IAEAmV,mBAAmB5gB,IAAAA;AACjB,WAAIA,QAAAA,KAAAA,SAAAA,GAAS2G,cAAaG,KAAKC;AAC/B,eAAO7G,KAAKqhB,mBAAmBvhB,EAAAA,KAAYE,KAAKshB,wBAAwBxhB,EAAAA;IAC1E;IAEAuhB,mBAAmBvhB,IAAAA;AACjB,aAAOE,KAAKggB,kBAAkB/V,SAASnL,EAAQgB,EAAAA,CAAAA;IACjD;IAEAwhB,wBAAwBxhB,IAAAA;AACtB,aAAuD,YAAhDA,GAAQuM,aAAa,qBAAA,KAAA,CAAuC9B,EAAwBzK,EAAAA;IAC7F;EAAA;AAGF,MAAMmgB,KAA2B,WAAA;AAAoB,QAAXxb,KAAIY,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG;AAE/CZ,IAAAA,KAAOA,GAAKP,QAAQ,uBAAuB,SAAA;AAC3C,UAAMqd,KAAM7c,SAAS8c,eAAeC,mBAAmB,EAAA;AAOvD,WANAF,GAAI5c,gBAAgBib,YAAYnb,IAEhCmL,MAAMC,KAAK0R,GAAIpN,KAAK8M,iBAAiB,OAAA,CAAA,EAAUhY,QAASnJ,CAAAA,OAAAA;AACtDyhB,MAAAA,GAAIhW,KAAKhC,YAAYzJ,EAAAA;IAAQ,CAAA,GAGxByhB,GAAIhW;EACb;AAXA,MAWA,EClIQmW,KAAAA,GAAAA,IAAQhO;AAED,MAAMiO,KAAN,cAA6BnF,GAAAA;IAC1C5N,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK2M,aAAa3M,KAAK2N,QACvB3N,KAAK2M,WAAWiV,yBAAyB5hB,MACzCA,KAAK6hB,kBAAkB7hB,KAAKuI,QAAQuZ;IACtC;IAEAC,qBAAAA;AACE,aAAO,CAAA;IACT;IAEAlF,cAAAA;AACE,UAAImF;AACJ,YAAMC,KAASD,KAAe3Z,EAAY,EACxCvJ,SAAS,UACTiK,WAAW/I,KAAKkiB,aAAAA,GAChBrZ,MAAM7I,KAAK2U,QAAAA,GACXlM,UAAAA,MAAU,CAAA,GAGN0D,KAAOnM,KAAKmiB,QAAAA;AAiClB,aAhCIhW,OACF6V,KAAe3Z,EAAY,EAAEvJ,SAAS,KAAK2J,UAAAA,OAAiB7J,YAAY,EAAEuN,MAAAA,IAAMiW,UAAAA,GAAW,EAAA,CAAA,GAC3FH,GAAO1Y,YAAYyY,EAAAA,IAGjBhiB,KAAK2M,WAAW0V,WAAAA,IAClB/C,GAAcgD,QAAQN,IAAchiB,KAAK2M,WAAW4V,WAAAA,CAAAA,IAEpDviB,KAAK+hB,mBAAAA,EAAqB9Y,QAASvC,CAAAA,OAAAA;AACjCsb,QAAAA,GAAazY,YAAY7C,EAAAA;MAAK,CAAA,GAIlCsb,GAAazY,YAAYvJ,KAAKwiB,qBAAAA,CAAAA,GAE1BxiB,KAAK2M,WAAW8V,UAAAA,MAClBziB,KAAK0iB,kBAAkBra,EAAY,EACjCvJ,SAAS,YACTF,YAAY,EACV+jB,OAAOjB,GAAIzU,oBACXzI,OAAOxE,KAAK2M,WAAWiW,kBAAAA,GACvB1T,KAAK,IAAA,GAEPrG,MAAM,EACJga,aAAAA,MACAzH,cAAc,CAAE,mBAAmBpb,KAAK2M,WAAWxB,EAAAA,EAAK4F,KAAK,GAAA,EAAA,EAAA,CAAA,GAIjEkR,GAAO1Y,YAAYvJ,KAAK0iB,eAAAA,IAGnB,CAAEI,GAAmB,MAAA,GAASb,IAAQa,GAAmB,OAAA,CAAA;IAClE;IAEAN,uBAAAA;AACE,YAAMO,KAAa1a,EAAY,EAAEvJ,SAAS,cAAciK,WAAW2Y,GAAI9U,kBAAAA,CAAAA,GACjEpO,KAAUwB,KAAK6hB,gBAAgBmB,WAAAA;AACrC,UAAIxkB;AACFukB,QAAAA,GAAW7Z,UAAUC,IAAG,GAAA1F,OAAIie,GAAI9U,mBAAiB,UAAA,CAAA,GACjDmW,GAAW3Z,cAAc5K;WACpB;AACL,YAAIC,IAAMC;AACV,cAAMukB,KAAgBjjB,KAAKkjB,iBAAAA;AAQ3B,YAPID,GAAcxkB,SAChBA,KAAOuB,KAAK2M,WAAWwW,YAAAA,IAErBF,GAAcvkB,SAChBA,KAAOsB,KAAK2M,WAAWyW,qBAAAA,IAGrB3kB,IAAM;AACR,gBAAM4kB,KAAchb,EAAY,EAAEvJ,SAAS,QAAQiK,WAAW2Y,GAAI1U,gBAAgB5D,aAAa3K,GAAAA,CAAAA;AAC/FskB,UAAAA,GAAWxZ,YAAY8Z,EAAAA;QACzB;AAEA,YAAI3kB,IAAM;AACJD,UAAAA,MACFskB,GAAWxZ,YAAY7E,SAAS4e,eAAe,GAAA,CAAA;AAEjD,gBAAMC,KAAclb,EAAY,EAAEvJ,SAAS,QAAQiK,WAAW2Y,GAAIxU,gBAAgB9D,aAAa1K,GAAAA,CAAAA;AAC/FqkB,UAAAA,GAAWxZ,YAAYga,EAAAA;QACzB;MACF;AAEA,aAAOR;IACT;IAEAb,eAAAA;AACE,YAAMsB,KAAQ,CAAE9B,GAAI/U,YAAU,GAAAlJ,OAAKie,GAAI/U,YAAUlJ,IAAAA,EAAAA,OAAKzD,KAAK2M,WAAW8W,QAAAA,CAAAA,CAAAA,GAChEC,KAAY1jB,KAAK2M,WAAWgX,aAAAA;AAIlC,aAHID,MACFF,GAAM7Z,KAAIlG,GAAAA,OAAIie,GAAI/U,YAAUlJ,IAAAA,EAAAA,OAAKigB,EAAAA,CAAAA,GAE5BF,GAAMzS,KAAK,GAAA;IACpB;IAEA4D,UAAAA;AACE,YAAM9L,KAAO,EACX+a,gBAAgBzS,KAAKO,UAAU1R,KAAK2M,UAAAA,GACpCkX,iBAAiB7jB,KAAK2M,WAAWmX,eAAAA,GACjCC,QAAQ/jB,KAAK2M,WAAWxB,GAAAA,GAAAA,EAGpBvM,YAAEA,GAAAA,IAAeoB,KAAK6hB;AAS5B,aARKjjB,GAAWkb,QAAAA,MACdjR,GAAKmb,iBAAiB7S,KAAKO,UAAU9S,EAAAA,IAGnCoB,KAAK2M,WAAW8V,UAAAA,MAClB5Z,GAAKob,gBAAAA,QAGApb;IACT;IAEAsZ,UAAAA;AACE,UAAA,CAAK+B,GAAoBlkB,KAAK2M,WAAW4V,WAAAA,GAAc,GAAA;AACrD,eAAOviB,KAAK2M,WAAWwV,QAAAA;IAE3B;IAEAe,mBAAAA;AAAmB,UAAAiB;AACjB,YAAMnZ,KAAOhL,KAAK2M,WAAW8W,QAAAA,GACvBR,KAAgB5N,GAAmC8O,UAAzBA,KAACzQ,EAAmB1I,QAAAA,WAAKmZ,KAAAA,SAAxBA,GAA0B3lB,OAAAA;AAI3D,aAHa,WAATwM,OACFiY,GAAcxkB,OAAAA,OAETwkB;IACT;IAEAmB,sBAAAA;AAAsB,UAAAC;AACpB,aAAyBA,UAAzBA,KAAOrkB,KAAKge,YAAAA,MAAAA,WAAaqG,KAAAA,SAAlBA,GAAoB9P,cAAc,UAAA;IAC3C;IAIA+P,oCAAAA;AACE,YAAM9f,KAAQxE,KAAK2M,WAAWiW,kBAAAA,GACxBF,KAAkB1iB,KAAKokB,oBAAAA;AACzB1B,MAAAA,OACFA,GAAgBle,QAAQA;IAE5B;EAAA;AAGF,MAAMse,KAAsBrkB,CAAAA,OAC1B4J,EAAY,EACVvJ,SAAS,QACTsK,aAAajF,GACb0E,MAAM,EACJyB,kBAAkB7L,IAClBwlB,eAAAA,MAAe,EAAA,CAAA;AANrB,MAUMC,KAAsB,SAASzf,IAAM3F,IAAAA;AACzC,UAAMylB,KAAMlc,EAAY,KAAA;AAExB,WADAiX,GAAcgD,QAAQiC,IAAK9f,MAAQ,EAAA,GAC5B8f,GAAIhQ,cAAczV,EAAAA;EAC3B;ACrKe,MAAM0lB,KAAN,cAAwC7C,GAAAA;IACrD/S,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK2M,WAAW8X,kBAAkBzkB;IACpC;IAEA+hB,qBAAAA;AAYE,aAXA/hB,KAAK0kB,QAAQrc,EAAY,EACvBvJ,SAAS,OACTF,YAAY,EACV+lB,KAAK,GAAA,GAEP9b,MAAM,EACJga,aAAAA,KAAa,EAAA,CAAA,GAIjB7iB,KAAK4kB,QAAQ5kB,KAAK0kB,KAAAA,GACX,CAAE1kB,KAAK0kB,KAAAA;IAChB;IAEAlC,uBAAAA;AACE,YAAMO,KAAalU,MAAM2T,qBAAAA,GAAwBnd,SAAAA;AAIjD,aAHK0d,GAAW3Z,eACd2Z,GAAWpa,aAAa,yBAAyB+K,EAAYzR,kBAAAA,GAExD8gB;IACT;IAEA6B,QAAQF,IAAAA;AACM,UAAAL;AAAPK,MAAAA,OAASA,KAA0BL,UAArBA,KAAGrkB,KAAKge,YAAAA,MAAAA,WAAaqG,KAAAA,SAAlBA,GAAoB9P,cAAc,KAAA;AACxD,UAAImQ;AACF,eAAO1kB,KAAK6kB,yBAAyBH,EAAAA;IAEzC;IAEAG,yBAAyBH,IAAAA;AACvB,YAAM9hB,KAAM5C,KAAK2M,WAAWmY,OAAAA,GACtBC,KAAa/kB,KAAK2M,WAAWqY,cAAAA;AAGnC,UAFAN,GAAMC,MAAMI,MAAcniB,IAEtBmiB,OAAeniB;AACjB8hB,QAAAA,GAAM5D,gBAAgB,iCAAA;WACjB;AACL,cAAMmE,KAAuB9T,KAAKO,UAAU,EAAEiT,KAAK/hB,GAAAA,CAAAA;AACnD8hB,QAAAA,GAAM/b,aAAa,mCAAmCsc,EAAAA;MACxD;AAEA,YAAMC,KAAQllB,KAAK2M,WAAWwY,SAAAA,GACxBC,KAASplB,KAAK2M,WAAW0Y,UAAAA;AAElB,cAATH,OACFR,GAAMQ,QAAQA,KAEF,QAAVE,OACFV,GAAMU,SAASA;AAGjB,YAAME,KAAW,CAAE,gBAAgBtlB,KAAK2M,WAAWxB,IAAIuZ,GAAMC,KAAKD,GAAMQ,OAAOR,GAAMU,MAAAA,EAASrU,KAAK,GAAA;AACnG2T,MAAAA,GAAM5b,QAAQsS,eAAekK;IAC/B;IAIAC,gCAAAA;AAEE,aADAvlB,KAAK4kB,QAAQ5kB,KAAK0kB,KAAAA,GACX1kB,KAAK4kB,QAAAA;IACd;EAAA;AC5Da,MAAMY,KAAN,cAAwBhJ,GAAAA;IACrC5N,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK8hB,QAAQ9hB,KAAK2N,QAClB3N,KAAKpB,aAAaoB,KAAK8hB,MAAM2D,cAAAA,GAC7BzlB,KAAK0lB,aAAa1lB,KAAKuI,QAAQmd,YAC/B1lB,KAAK2lB,UAAU3lB,KAAKuI,QAAQod,SAExB3lB,KAAK8hB,MAAMnV,aACb3M,KAAK2M,aAAa3M,KAAK8hB,MAAMnV,aAE7B3M,KAAKqQ,SAASrQ,KAAK8hB,MAAMvT,SAAAA;IAE7B;IAEAsO,cAAAA;AACE,UAAID,KAAQ5c,KAAK2M,aAAa3M,KAAK4lB,sBAAAA,IAA0B5lB,KAAK6lB,kBAAAA;AAClE,YAAM/lB,KAAUE,KAAKwI,cAAAA;AACrB,UAAI1I,IAAS;AACX,cAAMkiB,K9BiDoB,SAASliB,IAAAA;AACvC,iBAAc,UAAdgmB,KAAOhmB,OAAAA,WAAOgmB,MAAPA,GAASC,qBAAmB;AAAA,gBAAAD;AACjChmB,YAAAA,KAAUA,GAAQimB;UACpB;AACA,iBAAOjmB;QACT,E8BtD4CA,EAAAA;AACtC8P,cAAMC,KAAK+M,EAAAA,EAAO3T,QAASvC,CAAAA,OAAAA;AACzBsb,UAAAA,GAAazY,YAAY7C,EAAAA;QAAK,CAAA,GAEhCkW,KAAQ,CAAE9c,EAAAA;MACZ;AACA,aAAO8c;IACT;IAEAgJ,wBAAAA;AACE,YAAMhX,KAAc5O,KAAK2M,WAAWqZ,cAAAA,IAAkBxB,KAA4B7C;AAGlF,aADa3hB,KAAK0d,gBAAgB9O,IAAa5O,KAAK8hB,MAAMnV,YAAY,EAAEmV,OAAO9hB,KAAK8hB,MAAAA,CAAAA,EACxEnF,SAAAA;IACd;IAEAkJ,oBAAAA;AAAoB,UAAAI;AAClB,UAAmBA,UAAnBA,KAAIjmB,KAAK0lB,eAAAA,WAAUO,MAAfA,GAAiBxmB;AACnB,eAAO,CAAEiF,SAAS4e,eAAetjB,KAAKqQ,MAAAA,CAAAA;AACjC;AACL,cAAMuM,KAAQ,CAAA,GACRsJ,KAAWlmB,KAAKqQ,OAAOrH,MAAM,IAAA;AACnC,iBAAS+I,KAAQ,GAAGA,KAAQmU,GAAS5gB,QAAQyM,MAAS;AACpD,gBAAMoU,KAAYD,GAASnU;AAC3B,cAAIA,KAAQ,GAAG;AACb,kBAAMjS,KAAUuI,EAAY,IAAA;AAC5BuU,YAAAA,GAAMjT,KAAK7J,EAAAA;UACb;AAEA,cAAIqmB,GAAU7gB,QAAQ;AACpB,kBAAMoB,KAAOhC,SAAS4e,eAAetjB,KAAKomB,eAAeD,EAAAA,CAAAA;AACzDvJ,YAAAA,GAAMjT,KAAKjD,EAAAA;UACb;QACF;AACA,eAAOkW;MACT;IACF;IAEApU,gBAAAA;AACE,UAAI1I,IAASyE,IAAKC;AAClB,YAAM6hB,KAAS,CAAA;AAEf,WAAK9hB,MAAOvE,KAAKpB,YAAY;AAC3B4F,QAAAA,KAAQxE,KAAKpB,WAAW2F;AACxB,cAAMmP,KAASG,GAActP,EAAAA;AAC7B,YAAImP,IAAQ;AACV,cAAIA,GAAO5U,SAAS;AAClB,gBAAIkjB;AACJ,kBAAMsE,KAAiBje,EAAYqL,GAAO5U,OAAAA;AAEtCkjB,YAAAA,MACFA,GAAazY,YAAY+c,EAAAA,GACzBtE,KAAesE,MAEfxmB,KAAUkiB,KAAesE;UAE7B;AAMA,cAJI5S,GAAO6S,kBACTF,GAAO3S,GAAO6S,iBAAiB/hB,KAG7BkP,GAAO9K;AACT,iBAAKrE,MAAOmP,GAAO9K;AACjBpE,cAAAA,KAAQkP,GAAO9K,MAAMrE,KACrB8hB,GAAO9hB,MAAOC;QAGpB;MACF;AAEA,UAAImP,OAAOC,KAAKyS,EAAAA,EAAQ/gB;AAEtB,aAAKf,MADAzE,OAAWA,KAAUuI,EAAY,MAAA,IAC1Bge;AACV7hB,UAAAA,KAAQ6hB,GAAO9hB,KACfzE,GAAQ8I,MAAMrE,MAAOC;AAGzB,aAAO1E;IACT;IAEAgf,yBAAAA;AACE,iBAAWva,MAAOvE,KAAKpB,YAAY;AACjC,cAAM4F,KAAQxE,KAAKpB,WAAW2F,KACxBmP,KAASG,GAActP,EAAAA;AAC7B,YAAImP,MACEA,GAAOtH,cAAc;AACvB,gBAAMxN,KAAa,CAAA;AAEnB,iBADAA,GAAW2F,MAAOC,IACX6D,EAAYqL,GAAOtH,cAAcxN,EAAAA;QAC1C;MAEJ;IACF;IAEAwnB,eAAe/V,IAAAA;AAcb,aAbIrQ,KAAK2lB,QAAQa,WACfnW,KAASA,GAAOnM,QAAQ,OAAOE,CAAAA,IAGjCiM,KAASA,GACNnM,QAAQ,kBAAgBT,MAAAA,OAAQW,GAAuB,KAAA,CAAA,EACvDF,QAAQ,UAAQ,GAAAT,OAAKW,GAAkB,GAAA,CAAA,EACvCF,QAAQ,UAAQT,IAAAA,OAAMW,CAAAA,CAAAA,IAErBpE,KAAK2lB,QAAQc,WAAWzmB,KAAK2lB,QAAQe,uBACvCrW,KAASA,GAAOnM,QAAQ,OAAOE,CAAAA,IAG1BiM;IACT;EAAA;ACtIa,MAAMsW,KAAN,cAAuBnK,GAAAA;IACpC5N,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKR,OAAOQ,KAAK2N,QACjB3N,KAAK0lB,aAAa1lB,KAAKuI,QAAQmd;IACjC;IAEA7I,cAAAA;AACE,YAAMD,KAAQ,CAAA,GACRgK,KAAS1M,GAAYC,aAAana,KAAK6mB,UAAAA,CAAAA,GACvCC,KAAYF,GAAOthB,SAAS;AAElC,eAASyM,KAAQ,GAAGA,KAAQ6U,GAAOthB,QAAQyM,MAAS;AAClD,cAAM+P,KAAQ8E,GAAO7U,KACf4T,KAAU,CAAA;AACF,cAAV5T,OACF4T,GAAQc,UAAAA,OAEN1U,OAAU+U,OACZnB,GAAQa,SAAAA,OAENO,GAAmBC,EAAAA,MACrBrB,GAAQe,oBAAAA;AAGV,cAAMnJ,KAAOvd,KAAKqd,4BAA4BmI,IAAW1D,IAAO,EAAE4D,YAAY1lB,KAAK0lB,YAAYC,SAAAA,GAAAA,CAAAA;AAC/F/I,QAAAA,GAAMjT,KAAAA,GAAQiG,MAAMC,KAAK0N,GAAKZ,SAAAA,KAAc,CAAA,CAAA,CAAA;AAE5C,YAAIqK,KAAgBlF;MACtB;AACA,aAAOlF;IACT;IAEAiK,YAAAA;AACE,aAAOjX,MAAMC,KAAK7P,KAAKR,KAAKqnB,UAAAA,CAAAA,EAAa5P,OAAQ6K,CAAAA,OAAAA,CAAWA,GAAMlB,aAAa,YAAA,CAAA;IACjF;EAAA;AAGF,MAAMmG,KAAsBjF,CAAAA,OAAU,MAAMjiB,KAAKiiB,QAAAA,KAAAA,SAAAA,GAAOvT,SAAAA,CAAAA;AAAxD,MAAwDA,ECxChDmT,KAAAA,GAAAA,IAAQhO;AAED,MAAMuT,KAAN,cAAwBzK,GAAAA;IACrC5N,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKknB,QAAQlnB,KAAK2N,QAClB3N,KAAKpB,aAAaoB,KAAKknB,MAAMzB,cAAAA;IAC/B;IAEA5I,cAAAA;AACE,YACMD,KAAQ,CADElY,SAASyiB,cAAc,OAAA,CAAA;AAEvC,UAAInnB,KAAKknB,MAAMpN,QAAAA;AACb8C,QAAAA,GAAMjT,KAAKtB,EAAY,IAAA,CAAA;WAClB;AAAA,YAAA+e;AACL,cAAM1B,KAA0D,UAAhD0B,KAAG5T,GAAexT,KAAKknB,MAAMG,iBAAAA,CAAAA,MAAAA,WAAmBD,KAAAA,SAA7CA,GAA+C5nB,MAC5D8nB,KAAWtnB,KAAKqd,4BAA4BsJ,IAAU3mB,KAAKknB,MAAM1nB,MAAM,EAAEkmB,YAAAA,GAAAA,CAAAA;AAC/E9I,QAAAA,GAAMjT,KAAAA,GAAQiG,MAAMC,KAAKyX,GAAS3K,SAAAA,KAAc,CAAA,CAAA,CAAA,GAC5C3c,KAAKunB,6BAAAA,KACP3K,GAAMjT,KAAKtB,EAAY,IAAA,CAAA;MAE3B;AAEA,UAAIrI,KAAKpB,WAAW0G;AAClB,eAAOsX;AACF;AACL,YAAIhe;AACJ,cAAA,EAAME,SAAEA,GAAAA,IAAY4U,EAAuB7U;AACvCmB,aAAKknB,MAAMM,MAAAA,MACb5oB,KAAa,EAAE0T,KAAK,MAAA;AAGtB,cAAMxS,KAAUuI,EAAY,EAAEvJ,SAAAA,IAASF,YAAAA,GAAAA,CAAAA;AAEvC,eADAge,GAAM3T,QAASvC,CAAAA,OAAS5G,GAAQyJ,YAAY7C,EAAAA,CAAAA,GACrC,CAAE5G,EAAAA;MACX;IACF;IAEAgf,uBAAuBzE,IAAAA;AACrB,YAAMzb,KAAa,CAAA;AACnB,UAAImK;AACJ,YAAM0K,KAAgBzT,KAAKpB,WAAWyb,KAAAA,EAEhCvb,SAAEA,IAAOS,gBAAEA,KAAiB,CAAA,EAAA,IAAOiU,GAAeC,EAAAA;AAMxD,UAJc,MAAV4G,MAAera,KAAKknB,MAAMM,MAAAA,KAC5B7T,OAAO8T,OAAO7oB,IAAY,EAAE0T,KAAK,MAAA,CAAA,GAGb,wBAAlBmB,IAAuC;AACzC,cAAM/U,KAAOsB,KAAKknB,MAAMQ,sBAAAA;AACxB3e,QAAAA,KAAAA,GAAStF,OAAMie,GAAIvhB,mBAAiBsD,GAAAA,EAAAA,OAAIie,GAAIvhB,mBAAiB,IAAA,EAAAsD,OAAK/E,EAAAA;MACpE;AAQA,aANAiV,OAAOgU,QAAQ3nB,KAAKknB,MAAM3nB,cAAAA,EAAgB0J,QAAQ8X,CAAAA,OAAAA;AAAqB,YAAA,CAAlBtiB,IAAM+F,EAAAA,IAAOuc;AAC5DxhB,QAAAA,GAAe0K,SAASxL,EAAAA,MAC1BG,GAAWH,MAAQ+F;MACrB,CAAA,GAGK6D,EAAY,EAAEvJ,SAAAA,IAASiK,WAAAA,IAAWnK,YAAAA,GAAAA,CAAAA;IAC3C;IAIA2oB,+BAAAA;AACE,aAAO,QAAQ1nB,KAAKG,KAAKknB,MAAM3Y,SAAAA,CAAAA;IACjC;EAAA;AC/Da,MAAMqZ,KAAN,cAA2BpL,GAAAA;IACxC,OAAA,OAAc9X,IAAAA;AACZ,YAAM5E,KAAUuI,EAAY,KAAA,GACtBkV,KAAO,IAAIvd,KAAK0E,IAAU,EAAE5E,SAAAA,GAAAA,CAAAA;AAGlC,aAFAyd,GAAKsK,OAAAA,GACLtK,GAAKuK,KAAAA,GACEhoB;IACT;IAEA8O,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKF,UAAUE,KAAKuI,QAAQzI,SAC5BE,KAAK+nB,eAAe,IAAI9M,MACxBjb,KAAKgoB,YAAYhoB,KAAK2N,MAAAA;IACxB;IAEAqa,YAAYtjB,IAAAA;AACLA,MAAAA,GAAS6K,UAAUvP,KAAK0E,QAAAA,MAC3B1E,KAAK0E,WAAW1E,KAAK2N,SAASjJ;IAElC;IAEAmjB,SAAAA;AAKE,UAJA7nB,KAAKyc,aAAa,CAAA,GAElBzc,KAAKioB,gBAAgB5f,EAAY,KAAA,GAAA,CAE5BrI,KAAK0E,SAASoV,QAAAA,GAAW;AAC5B,cAAMT,KAAUa,GAAYC,aAAana,KAAK0E,SAASwjB,UAAAA,GAAa,EAAE5N,QAAAA,KAAQ,CAAA;AAE9E1K,cAAMC,KAAKwJ,EAAAA,EAASpQ,QAAS0E,CAAAA,OAAAA;AAC3B,gBAAM4P,KAAOvd,KAAKqd,4BAA4B4J,IAAWtZ,EAAAA;AACzDiC,gBAAMC,KAAK0N,GAAKZ,SAAAA,CAAAA,EAAYrM,IAAK5J,CAAAA,OAAS1G,KAAKioB,cAAc1e,YAAY7C,EAAAA,CAAAA;QAAM,CAAA;MAEnF;IACF;IAEAyhB,WAAAA;AACE,aAAOC,GAAsBpoB,KAAKioB,eAAejoB,KAAKF,OAAAA;IACxD;IAEAgoB,OAAAA;AACE,YAAMO,KAAWroB,KAAKsoB,8BAAAA;AACtB,aAAOtoB,KAAKF,QAAQyoB;AAClBvoB,aAAKF,QAAQ0H,YAAYxH,KAAKF,QAAQyoB,SAAAA;AAGxC,aADAvoB,KAAKF,QAAQyJ,YAAY8e,EAAAA,GAClBroB,KAAKwoB,QAAAA;IACd;IAIAA,UAAAA;AAEE,aADAxoB,KAAK+nB,aAAa1Q,MAAMoR,GAAmBzoB,KAAKF,OAAAA,CAAAA,GACzCoV,GAAM,MAAMlV,KAAK0e,0BAAAA,CAAAA;IAC1B;IAEA4J,gCAAAA;AACE,YAAMD,KAAW3jB,SAASgkB,uBAAAA;AAa1B,aAXA9Y,MAAMC,KAAK7P,KAAKioB,cAAc5e,UAAAA,EAAYJ,QAASvC,CAAAA,OAAAA;AACjD2hB,QAAAA,GAAS9e,YAAY7C,GAAKoW,UAAAA,IAAU,CAAA;MAAM,CAAA,GAG5ClN,MAAMC,KAAK4Y,GAAmBJ,EAAAA,CAAAA,EAAWpf,QAASnJ,CAAAA,OAAAA;AAChD,cAAM6oB,KAAgB3oB,KAAK+nB,aAAavlB,OAAO1C,EAAAA;AAC3C6oB,QAAAA,MACF7oB,GAAQC,WAAW6oB,aAAaD,IAAe7oB,EAAAA;MACjD,CAAA,GAGKuoB;IACT;EAAA;AAGF,MAAMI,KAAsB3oB,CAAAA,OAAYA,GAAQmhB,iBAAiB,uBAAA;AAAjE,MAEMmH,KAAwBA,CAACtoB,IAAS+oB,OACtCC,GAAahpB,GAAQ8f,SAAAA,MAAekJ,GAAaD,GAAajJ,SAAAA;AAHhE,MAKMkJ,KAAgBrkB,CAAAA,OAASA,GAAKP,QAAQ,WAAW,GAAA;AAAA,WAAA,GAAA6kB,IAAA;AAAA,QAAAC,IAAAC;AAAA,aAAAC,GAAAF,IAAAC,IAAA;AAAA,UAAA;AAAA,YAAAE,KAAAJ,GAAAC,IAAAC,EAAA,GAAAG,KAAAD,GAAA,OAAAtX,KAAAuX,cAAA;AAAA,gBAAA,QAAAvX,KAAAuX,GAAA,IAAAA,EAAA,EAAA,KAAA,SAAAH,IAAA;AAAA,cAAApX,IAAA;AAAA,gBAAAwX,KAAA,aAAAL,KAAA,WAAA;AAAA,gBAAA,CAAAI,GAAA,KAAAH,GAAA;AAAA,qBAAAC,GAAAG,IAAAJ,EAAA;AAAA,YAAAA,KAAAF,GAAAM,IAAAJ,EAAA,EAAA;UAAA;AAAA,UAAAK,GAAAH,GAAA,OAAA,WAAA,UAAAF,EAAA;QAAA,GAAA,SAAAF,IAAA;AAAA,UAAAG,GAAA,SAAAH,EAAA;QAAA,CAAA;MAAA,SAAAA,IAAA;AAAA,QAAAO,GAAA,SAAAP,EAAA;MAAA;IAAA;AAAA,aAAAO,GAAAP,IAAAO,IAAA;AAAA,cAAAP,IAAA;QAAA,KAAA;AAAA,UAAAC,GAAA,QAAA,EAAA,OAAAM,IAAA,MAAA,KAAA,CAAA;AAAA;QAAA,KAAA;AAAA,UAAAN,GAAA,OAAAM,EAAA;AAAA;QAAA;AAAA,UAAAN,GAAA,QAAA,EAAA,OAAAM,IAAA,MAAA,MAAA,CAAA;MAAA;AAAA,OAAAN,KAAAA,GAAA,QAAAE,GAAAF,GAAA,KAAAA,GAAA,GAAA,IAAAC,KAAA;IAAA;AAAA,SAAA,UAAA,SAAAF,IAAAO,IAAA;AAAA,aAAA,IAAA,QAAA,SAAAH,IAAAC,IAAA;AAAA,YAAAvX,KAAA,EAAA,KAAAkX,IAAA,KAAAO,IAAA,SAAAH,IAAA,QAAAC,IAAA,MAAA,KAAA;AAAA,QAAAH,KAAAA,KAAAA,GAAA,OAAApX,MAAAmX,KAAAC,KAAApX,IAAAqX,GAAAH,IAAAO,EAAA;MAAA,CAAA;IAAA,GAAA,cAAA,OAAAP,GAAA,WAAA,KAAA,SAAA;EAAA;AAAA,WAAA,GAAAA,IAAAC,IAAA;AAAA,SAAA,IAAAD,IAAA,KAAA,IAAAC;EAAA;AAAA,WAAA,GAAAD,IAAAC,IAAAC,IAAA;AAAA,YAAAD,KAAA,GAAAA,EAAA,MAAAD,KAAA,OAAA,eAAAA,IAAAC,IAAA,EAAA,OAAAC,IAAA,YAAA,MAAA,cAAA,MAAA,UAAA,KAAA,CAAA,IAAAF,GAAAC,MAAAC,IAAAF;EAAA;AAAA,WAAA,GAAAA,IAAA;AAAA,QAAAC,KAAA,SAAAD,IAAAC,IAAA;AAAA,UAAA,YAAA,OAAAD,MAAA,SAAAA;AAAA,eAAAA;AAAA,UAAAE,KAAAF,GAAA,OAAA;AAAA,UAAA,WAAAE,IAAA;AAAA,YAAAC,KAAAD,GAAA,KAAAF,IAAAC,MAAA,SAAA;AAAA,YAAA,YAAA,OAAAE;AAAA,iBAAAA;AAAA,cAAA,IAAA,UAAA,8CAAA;MAAA;AAAA,cAAA,aAAAF,KAAA,SAAA,QAAAD,EAAA;IAAA,EAAAA,IAAA,QAAA;AAAA,WAAA,YAAA,OAAAC,KAAAA,KAAA,OAAAA,EAAA;EAAA;AAAA,KAAA,UAAA,cAAA,OAAA,UAAA,OAAA,iBAAA,qBAAA,WAAA;AAAA,WAAA;EAAA,GAAA,GAAA,UAAA,OAAA,SAAAD,IAAA;AAAA,WAAA,KAAA,QAAA,QAAAA,EAAA;EAAA,GAAA,GAAA,UAAA,QAAA,SAAAA,IAAA;AAAA,WAAA,KAAA,QAAA,SAAAA,EAAA;EAAA,GAAA,GAAA,UAAA,SAAA,SAAAA,IAAA;AAAA,WAAA,KAAA,QAAA,UAAAA,EAAA;EAAA;AAAA,WAAA,GAAAA,IAAAC,IAAA;AAAA,WAAA,GAAAD,IAAA,GAAAA,IAAAC,IAAA,KAAA,CAAA;EAAA;AAAA,WAAA,GAAAD,IAAAC,IAAAC,IAAA;AAAA,WAAA,GAAAF,IAAA,GAAAA,IAAAC,IAAA,KAAA,GAAAC,EAAA,GAAAA;EAAA;AAAA,WAAA,GAAAF,IAAAC,IAAAC,IAAA;AAAA,QAAA,CAAAD,GAAA,IAAAD,EAAA;AAAA,YAAA,IAAA,UAAA,kBAAAE,KAAA,gCAAA;AAAA,WAAAD,GAAA,IAAAD,EAAA;EAAA;AAAA,WAAA,GAAAA,IAAAC,IAAA;AAAA,WAAAA,GAAA,MAAAA,GAAA,IAAA,KAAAD,EAAA,IAAAC,GAAA;EAAA;AAAA,WAAA,GAAAD,IAAAC,IAAAC,IAAA;AAAA,QAAAD,GAAA;AAAA,MAAAA,GAAA,IAAA,KAAAD,IAAAE,EAAA;SAAA;AAAA,UAAA,CAAAD,GAAA;AAAA,cAAA,IAAA,UAAA,0CAAA;AAAA,MAAAA,GAAA,QAAAC;IAAA;EAAA;AAAA,WAAA,GAAAF,IAAAC,IAAAC,IAAA;AAAA,QAAA,CAAAD,GAAA,IAAAD,EAAA;AAAA,YAAA,IAAA,UAAA,gDAAA;AAAA,WAAAE;EAAA;AAAA,WAAA,GAAAF,IAAAC,IAAA;AAAA,QAAAA,GAAA,IAAAD,EAAA;AAAA,YAAA,IAAA,UAAA,gEAAA;EAAA;AAAA,WAAA,GAAAA,IAAAC,IAAAC,IAAA;AAAA,OAAAF,IAAAC,EAAA,GAAAA,GAAA,IAAAD,IAAAE,EAAA;EAAA;ACtFxC,MAAMM,KAAN,cAAoBvY,GAAAA;IAGjC,OAAA,aAAoBhG,IAAM4D,IAAAA;AACxBA,MAAAA,GAAY5D,OAAOA,IACnBhL,KAAKwpB,MAAMxe,MAAQ4D;IACrB;IAEA,OAAA,SAAgB6a,IAAAA;AACd,YAAM7a,KAAc5O,KAAKwpB,MAAMC,GAAUze;AACzC,UAAI4D;AACF,eAAOA,GAAYsC,SAASuY,EAAAA;IAEhC;IAEA7a,YAAYpK,IAAAA;AAAwB,UAAjB5F,KAAUyG,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAC9BwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKpB,aAAaua,GAAK9K,IAAIzP,EAAAA;IAC7B;IAEA8qB,mBAAmB9qB,IAAAA;AACjB,aAAO,IAAIoB,KAAK4O,YAAY5O,KAAK2pB,SAAAA,GAAY/qB,EAAAA;IAC/C;IAEAgrB,6BAA6BhrB,IAAAA;AAC3B,aAAOoB,KAAK0pB,mBAAmB1pB,KAAKpB,WAAW+a,MAAM/a,EAAAA,CAAAA;IACvD;IAEAirB,qBAAqBC,IAAAA;AACnB,aAAO9pB,KAAK0pB,mBAAmB1pB,KAAKpB,WAAW4D,OAAOsnB,EAAAA,CAAAA;IACxD;IAEApQ,OAAAA;AACE,aAAO1Z,KAAK0pB,mBAAmB1pB,KAAKpB,UAAAA;IACtC;IAEAyN,aAAayd,IAAAA;AACX,aAAO9pB,KAAKpB,WAAWmU,IAAI+W,EAAAA;IAC7B;IAEAC,oBAAAA;AACE,aAAO/pB,KAAKpB;IACd;IAEA6mB,gBAAAA;AACE,aAAOzlB,KAAKpB,WAAWmb,SAAAA;IACzB;IAEA6G,aAAakJ,IAAAA;AACX,aAAO9pB,KAAKpB,WAAWgU,IAAIkX,EAAAA;IAC7B;IAEAE,0BAA0BlI,IAAAA;AACxB,aAAOA,MAAS9hB,KAAKuO,SAAAA,MAAeuT,GAAMvT,SAAAA;IAC5C;IAEA0b,yBAAyBnI,IAAAA;AACvB,aAAOA,OAAU9hB,KAAKpB,eAAekjB,GAAMljB,cAAcoB,KAAKpB,WAAW2Q,UAAUuS,GAAMljB,UAAAA;IAC3F;IAEAsrB,eAAAA;AACE,aAAA;IACF;IAEA3a,UAAUuS,IAAAA;AACR,aACEjT,MAAMU,UAAAA,GAAalK,SAAAA,KACnBrF,KAAKoR,qBAAqB0Q,EAAAA,KACxB9hB,KAAKgqB,0BAA0BlI,EAAAA,KAC/B9hB,KAAKiqB,yBAAyBnI,EAAAA;IAEpC;IAEAhI,UAAAA;AACE,aAAuB,MAAhB9Z,KAAKsF;IACd;IAEA6kB,iBAAAA;AACE,aAAA;IACF;IAEA3a,SAAAA;AACE,aAAO,EACLxE,MAAMhL,KAAK4O,YAAY5D,MACvBpM,YAAYoB,KAAKylB,cAAAA,EAAAA;IAErB;IAEAjU,wBAAAA;AACE,aAAO,EACLxG,MAAMhL,KAAK4O,YAAY5D,MACvBpM,YAAYoB,KAAKpB,WAAWyS,QAAAA,EAAAA;IAEhC;IAIAsJ,eAAAA;AACE,aAAO3a,KAAK4gB,aAAa,MAAA;IAC3B;IAEAhG,iBAAiBkH,IAAAA;AACf,aAAO9hB,KAAKqM,aAAa,MAAA,MAAYyV,GAAMzV,aAAa,MAAA;IAC1D;IAIA+d,YAAAA;AACE,aAAOpqB,KAAKsF;IACd;IAEA+kB,sBAAsBvI,IAAAA;AACpB,aAAA;IACF;EAAA;AACDwI,KAlHoBf,IACJ,SAAA,CAAA,CAAA;ACFF,MAAMgB,KAAN,cAAoClP,GAAAA;IACjDzM,YAAYhM,IAAAA;AACViM,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK4C,MAAMA;IACb;IAEAsZ,QAAQnR,IAAAA;AACN,YAAM2Z,KAAQ,IAAI8F;AAElB9F,MAAAA,GAAM+F,SAAS,OACb/F,GAAMQ,QAAQllB,KAAKklB,QAAQR,GAAMgG,cACjChG,GAAMU,SAASplB,KAAKolB,SAASV,GAAMiG,eAC5B5f,GAAAA,MAAe2Z,EAAAA,IAGxBA,GAAMkG,UAAU,MAAM7f,GAAAA,KAAS,GAE/B2Z,GAAMC,MAAM3kB,KAAK4C;IACnB;EAAA;ACfa,MAAMioB,KAAN,cAAyB7Z,GAAAA;IAGtC,OAAA,kBAAyBrS,IAAAA;AACvB,YACMgO,KAAa,IAAI3M,KADJA,KAAK8qB,kBAAkBnsB,EAAAA,CAAAA;AAG1C,aADAgO,GAAWoe,QAAQpsB,EAAAA,GACZgO;IACT;IAEA,OAAA,kBAAyBhO,IAAAA;AACvB,aAAO,IAAIwa,GAAK,EACd6R,UAAUrsB,GAAKF,MACfwsB,UAAUtsB,GAAKD,MACfwsB,aAAavsB,GAAKqM,KAAAA,CAAAA;IAEtB;IAEA,OAAA,SAAgBmgB,IAAAA;AACd,aAAO,IAAInrB,KAAKmrB,EAAAA;IAClB;IAEAvc,cAAAA;AAA6B,UAAjBhQ,KAAUyG,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACvBwJ,YAAMjQ,EAAAA,GACNoB,KAAKorB,cAAcprB,KAAKorB,YAAY1U,KAAK1W,IAAAA,GACzCA,KAAKpB,aAAaua,GAAK9K,IAAIzP,EAAAA,GAC3BoB,KAAKqrB,oBAAAA;IACP;IAEAhf,aAAayd,IAAAA;AACX,aAAO9pB,KAAKpB,WAAWmU,IAAI+W,EAAAA;IAC7B;IAEAlJ,aAAakJ,IAAAA;AACX,aAAO9pB,KAAKpB,WAAWgU,IAAIkX,EAAAA;IAC7B;IAEArE,gBAAAA;AACE,aAAOzlB,KAAKpB,WAAWmb,SAAAA;IACzB;IAEAuR,gBAAAA;AAA+B,UAAjB1sB,KAAUyG,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACzB,YAAMkmB,KAAgBvrB,KAAKpB,WAAW+a,MAAM/a,EAAAA;AACG,UAAA4sB,IAAAC,IAAAC,IAAAC;AAA/C,UAAA,CAAK3rB,KAAKpB,WAAW2Q,UAAUgc,EAAAA;AAI7B,eAHAvrB,KAAKpB,aAAa2sB,IAClBvrB,KAAKqrB,oBAAAA,GAAAA,UACLG,KAAAA,KAAK/G,oBAAAA,WAAe+G,MAA+BC,UAA/BA,KAApBD,GAAsBjG,kCAAAA,WAA6BkG,MAAnDA,GAAA1lB,KAAAylB,IAAsDxrB,IAAAA,GAClC0rB,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAA+B,UAA/BC,KAAbD,GAAenG,kCAAAA,WAA6BoG,KAAAA,SAA5CA,GAAA5lB,KAAA2lB,IAA+C1rB,IAAAA;IAE1D;IAEAqrB,sBAAAA;AACE,UAAIrrB,KAAKgmB,cAAAA;AACP,eAAOhmB,KAAK6rB,WAAAA;IAEhB;IAEApJ,YAAAA;AACE,aAAoB,QAAbziB,KAAKrB,QAAAA,EAAkBqB,KAAK8kB,OAAAA,KAAY9kB,KAAKmiB,QAAAA;IACtD;IAEA6D,gBAAAA;AACE,aAAIhmB,KAAKpB,WAAWgU,IAAI,aAAA,IACf5S,KAAKpB,WAAWmU,IAAI,aAAA,IAEpB8X,GAAWiB,mBAAmBjsB,KAAKG,KAAK8jB,eAAAA,CAAAA;IAEnD;IAEAL,UAAAA;AACE,aAAIzjB,KAAKqiB,WAAAA,IACA,YACEriB,KAAKgmB,cAAAA,IACP,YAEA;IAEX;IAEAlB,SAAAA;AACE,aAAO9kB,KAAKpB,WAAWmU,IAAI,KAAA;IAC7B;IAEAoP,UAAAA;AACE,aAAOniB,KAAKpB,WAAWmU,IAAI,MAAA;IAC7B;IAEAoQ,cAAAA;AACE,aAAOnjB,KAAKpB,WAAWmU,IAAI,UAAA,KAAe;IAC5C;IAEAgZ,cAAAA;AACE,aAAO/rB,KAAKpB,WAAWmU,IAAI,UAAA;IAC7B;IAEAqQ,uBAAAA;AACE,YAAM6H,KAAWjrB,KAAKpB,WAAWmU,IAAI,UAAA;AACrC,aAAwB,YAAA,OAAbkY,KACFvX,EAAgBlQ,UAAUynB,EAAAA,IAE1B;IAEX;IAEAtH,eAAAA;AAAe,UAAAqI;AACb,aACoBA,UADpBA,KAAOhsB,KAAKmjB,YAAAA,EACTziB,MAAM,UAAA,MAAA,WAAWsrB,KAAAA,SADbA,GACgB,GACpB1rB,YAAAA;IACL;IAEAwjB,iBAAAA;AACE,aAAO9jB,KAAKpB,WAAWmU,IAAI,aAAA;IAC7B;IAEAsP,aAAAA;AACE,aAAOriB,KAAKpB,WAAWgU,IAAI,SAAA;IAC7B;IAEA2P,aAAAA;AACE,aAAOviB,KAAKpB,WAAWmU,IAAI,SAAA;IAC7B;IAEAoS,WAAAA;AACE,aAAOnlB,KAAKpB,WAAWmU,IAAI,OAAA;IAC7B;IAEAsS,YAAAA;AACE,aAAOrlB,KAAKpB,WAAWmU,IAAI,QAAA;IAC7B;IAEAkZ,UAAAA;AACE,aAAOjsB,KAAKrB;IACd;IAEAosB,QAAQpsB,IAAAA;AAEN,UADAqB,KAAKrB,OAAOA,IACRqB,KAAKgmB,cAAAA;AACP,eAAOhmB,KAAKksB,YAAAA;IAEhB;IAEAd,cAAAA;AACEprB,WAAKmsB,qBAAAA,GACLnsB,KAAKrB,OAAO;IACd;IAEAikB,oBAAAA;AACE,aAA8B,QAAvB5iB,KAAKosB,iBAAyBpsB,KAAKosB,iBAAiB;IAC7D;IAEAC,kBAAkB7nB,IAAAA;AACmB,UAAA8nB,IAAAC;AAAnC,UAAIvsB,KAAKosB,mBAAmB5nB;AAE1B,eADAxE,KAAKosB,iBAAiB5nB,IACY8nB,UAAlCA,KAAOtsB,KAAK4hB,2BAAAA,WAAsB0K,MAAmC,UAAnCC,KAA3BD,GAA6BhI,sCAAAA,WAAiCiI,KAAAA,SAA9DA,GAAAxmB,KAAAumB,IAAiEtsB,IAAAA;IAE5E;IAEAwP,SAAAA;AACE,aAAOxP,KAAKylB,cAAAA;IACd;IAEAhW,cAAAA;AACE,aAAO,CAAEZ,MAAMY,YAAAA,GAAepK,SAAAA,GAAYrF,KAAKpB,WAAW6Q,YAAAA,GAAezP,KAAKglB,cAAAA,CAAAA,EAAkBjU,KAAK,GAAA;IACvG;IAIAiU,gBAAAA;AACE,aAAOhlB,KAAK+kB,cAAc/kB,KAAKwsB;IACjC;IAEAC,cAAc7pB,IAAAA;AACsB,UAAA8pB,IAAAC,IAAAC,IAAAC;AAAlC,UAAIjqB,OAAQ5C,KAAKglB,cAAAA;AAGf,eAFAhlB,KAAK+kB,aAAaniB,IAAAA,UAClB8pB,KAAAA,KAAKjI,oBAAAA,WAAeiI,MAA+BC,UAA/BA,KAApBD,GAAsBnH,kCAAAA,WAA6BoH,MAAnDA,GAAA5mB,KAAA2mB,IAAsD1sB,IAAAA,GAClC4sB,UAApBA,KAAO5sB,KAAK4rB,aAAAA,WAAQgB,MAA+B,UAA/BC,KAAbD,GAAeE,kCAAAA,WAA6BD,KAAAA,SAA5CA,GAAA9mB,KAAA6mB,IAA+C5sB,IAAAA;IAE1D;IAEA6rB,aAAAA;AACE,aAAO7rB,KAAK+sB,QAAQ/sB,KAAK8kB,OAAAA,GAAU9kB,KAAKorB,WAAAA;IAC1C;IAEAc,cAAAA;AACE,UAAIlsB,KAAKrB;AAEP,eADAqB,KAAKgtB,gBAAgBC,IAAIC,gBAAgBltB,KAAKrB,IAAAA,GACvCqB,KAAK+sB,QAAQ/sB,KAAKgtB,aAAAA;IAE7B;IAEAb,uBAAAA;AACMnsB,WAAKgtB,kBACPC,IAAIE,gBAAgBntB,KAAKgtB,aAAAA,GACzBhtB,KAAKgtB,gBAAgB;IAEzB;IAEAD,QAAQnqB,IAAKmI,IAAAA;AACX,UAAInI,MAAOA,OAAQ5C,KAAKglB,cAAAA,GAAiB;AACvChlB,aAAKwsB,gBAAgB5pB;AAErB,eADkB,IAAI2nB,GAAsB3nB,EAAAA,EAEzCwqB,KAAKrM,CAAAA,OAAAA;AAAuB,cAAA,EAAtBmE,OAAEA,IAAKE,QAAEA,GAAAA,IAAQrE;AAMtB,iBALK/gB,KAAKmlB,SAAAA,KAAenlB,KAAKqlB,UAAAA,KAC5BrlB,KAAKsrB,cAAc,EAAEpG,OAAAA,IAAOE,QAAAA,GAAAA,CAAAA,GAE9BplB,KAAKwsB,gBAAgB,MACrBxsB,KAAKysB,cAAc7pB,EAAAA,GACZmI,QAAAA,KAAAA,SAAAA,GAAAA;QAAY,CAAA,EAEpBsiB,MAAM,OACLrtB,KAAKwsB,gBAAgB,MACdzhB,QAAAA,KAAAA,SAAAA,GAAAA,EAAAA;MAEb;IACF;EAAA;AACDuf,KAxNoBO,IAAU,sBACD,kCAAA;ACDf,MAAMyC,KAAN,cAA8B/D,GAAAA;IAG3C,OAAA,SAAgBE,IAAAA;AACd,aAAO,IAAIzpB,KAAK6qB,GAAW3Z,SAASuY,GAAU9c,UAAAA,GAAa8c,GAAU7qB,UAAAA;IACvE;IAEAgQ,YAAYjC,IAAAA;AACVkC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK2M,aAAaA,IAClB3M,KAAKsF,SAAS,GACdtF,KAAKutB,wCAAwC,MAAA,GACxCvtB,KAAK2M,WAAW0V,WAAAA,KACnBriB,KAAKwtB,2BAAAA;IAET;IAEAD,wCAAwCzD,IAAAA;AAClC9pB,WAAK4gB,aAAakJ,EAAAA,MACf9pB,KAAK2M,WAAWiU,aAAakJ,EAAAA,KAChC9pB,KAAK2M,WAAW2e,cAActrB,KAAKpB,WAAWqQ,MAAM,CAAE6a,EAAAA,CAAAA,CAAAA,GAExD9pB,KAAKpB,aAAaoB,KAAKpB,WAAW4D,OAAOsnB,EAAAA;IAE7C;IAEA0D,6BAAAA;AACE,YAAM5uB,KAAaoB,KAAKpB,WAAWqQ,MAAMqe,GAAgBG,mBAAAA;AACpD7uB,MAAAA,GAAW2Q,UAAUvP,KAAKpB,UAAAA,MAC7BoB,KAAKpB,aAAaA;IAEtB;IAEA+qB,WAAAA;AACE,aAAO3pB,KAAK2M;IACd;IAEAwd,iBAAAA;AACE,aAAA,CAAQnqB,KAAK2M,WAAW8V,UAAAA;IAC1B;IAEAO,aAAAA;AACE,aAAOhjB,KAAKpB,WAAWmU,IAAI,SAAA,KAAc;IAC3C;IAEAxD,UAAUuS,IAAAA;AAAO,UAAA4L;AACf,aAAO7e,MAAMU,UAAUuS,EAAAA,KAAU9hB,KAAK2M,WAAWxB,QAAO2W,QAAAA,MAAiB,UAAZ4L,KAAL5L,GAAOnV,eAAAA,WAAU+gB,KAAAA,SAAjBA,GAAmBviB;IAC7E;IAEAoD,WAAAA;AACE,avCrDwC;IuCsD1C;IAEAiB,SAAAA;AACE,YAAMme,KAAO9e,MAAMW,OAAAA,GAAUnK,SAAAA;AAE7B,aADAsoB,GAAKhhB,aAAa3M,KAAK2M,YAChBghB;IACT;IAEAle,cAAAA;AACE,aAAO,CAAEZ,MAAMY,YAAAA,GAAepK,SAAAA,GAAYrF,KAAK2M,WAAW8C,YAAAA,CAAAA,EAAgBsB,KAAK,GAAA;IACjF;IAEA6c,YAAAA;AACE,aAAOzc,KAAKO,UAAU1R,KAAKuO,SAAAA,CAAAA;IAC7B;EAAA;AACD+b,KAlEoBgD,IAAe,uBACL,CAAE,WAAW,cAAA,CAAA,GAmE5C/D,GAAMsE,aAAa,cAAcP,EAAAA;ACrElB,MAAMQ,KAAN,cAA0BvE,GAAAA;IACvC,OAAA,SAAgBE,IAAAA;AACd,aAAO,IAAIzpB,KAAKypB,GAAUpZ,QAAQoZ,GAAU7qB,UAAAA;IAC9C;IAEAgQ,YAAYyB,IAAAA;AACVxB,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKqQ,UlBDyBA,CAAAA,OAAWA,GAAOnM,QAAQ,UAAU,IAAA,GkBClCmM,EAAAA,GAChCrQ,KAAKsF,SAAStF,KAAKqQ,OAAO/K;IAC5B;IAEAqkB,WAAAA;AACE,aAAO3pB,KAAKqQ;IACd;IAEA9B,WAAAA;AACE,aAAOvO,KAAKqQ,OAAO9B,SAAAA;IACrB;IAEA2b,eAAAA;AACE,aAA2B,SAApBlqB,KAAKuO,SAAAA,KAAAA,SAAuBvO,KAAKqM,aAAa,YAAA;IACvD;IAEAmD,SAAAA;AACE,YAAMqB,KAAShC,MAAMW,OAAAA,GAAUnK,SAAAA;AAE/B,aADAwL,GAAOR,SAASrQ,KAAKqQ,QACdQ;IACT;IAIAwZ,sBAAsBvI,IAAAA;AACpB,aAAOA,MAAS9hB,KAAKoR,qBAAqB0Q,EAAAA,KAAU9hB,KAAKiqB,yBAAyBnI,EAAAA;IACpF;IAEAiM,gBAAgBjM,IAAAA;AACd,aAAO,IAAI9hB,KAAK4O,YAAY5O,KAAKuO,SAAAA,IAAauT,GAAMvT,SAAAA,GAAYvO,KAAKpB,UAAAA;IACvE;IAEAovB,cAAchf,IAAAA;AACZ,UAAIsH,IAAMC;AAWV,aAVe,MAAXvH,MACFsH,KAAO,MACPC,KAAQvW,QACCgP,OAAWhP,KAAKsF,UACzBgR,KAAOtW,MACPuW,KAAQ,SAERD,KAAO,IAAItW,KAAK4O,YAAY5O,KAAKqQ,OAAOpB,MAAM,GAAGD,EAAAA,GAAShP,KAAKpB,UAAAA,GAC/D2X,KAAQ,IAAIvW,KAAK4O,YAAY5O,KAAKqQ,OAAOpB,MAAMD,EAAAA,GAAShP,KAAKpB,UAAAA,IAExD,CAAE0X,IAAMC,EAAAA;IACjB;IAEAqX,YAAAA;AACE,UAAA,EAAIvd,QAAEA,GAAAA,IAAWrQ;AAIjB,aAHIqQ,GAAO/K,SAAS,OAClB+K,KAASA,GAAOpB,MAAM,GAAG,EAAA,IAAM,WAE1BkC,KAAKO,UAAUrB,GAAO9B,SAAAA,CAAAA;IAC/B;EAAA;AAGFgb,KAAMsE,aAAa,UAAUC,EAAAA;AC5Dd,MAAMG,KAAN,cAA6Bjd,GAAAA;IAC1C,OAAA,IAAWqI,IAAAA;AACT,aAAIA,cAAmBrZ,OACdqZ,KAEA,IAAIrZ,KAAKqZ,EAAAA;IAEpB;IAEAzK,cAAAA;AAA0B,UAAdyK,KAAOhU,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACpBwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKqZ,UAAUA,GAAQpK,MAAM,CAAA,GAC7BjP,KAAKsF,SAAStF,KAAKqZ,QAAQ/T;IAC7B;IAEA0b,QAAQrT,IAAAA;AACN,aAAO3N,KAAKqZ,QAAQ2H,QAAQrT,EAAAA;IAC9B;IAEAwE,SAAAA;AAAgB,eAAAF,KAAA5M,UAAAC,QAAN2I,KAAI2B,IAAAA,MAAAqC,EAAAA,GAAAC,KAAA,GAAAA,KAAAD,IAAAC;AAAJjE,QAAAA,GAAIiE,MAAA7M,UAAA6M;AACZ,aAAO,IAAIlS,KAAK4O,YAAYoD,GAAYhS,KAAKqZ,SAAAA,GAAYpL,EAAAA,CAAAA;IAC3D;IAEAigB,WAAWnjB,IAAAA;AACT,aAAO/K,KAAKqZ,QAAQ/I,IAAI,CAAC3C,IAAQoE,OAAUhH,GAAS4C,IAAQoE,EAAAA,CAAAA;IAC9D;IAEAoc,oBAAoBxgB,IAAQoE,IAAAA;AAC1B,aAAO/R,KAAKmS,OAAOJ,IAAO,GAAGpE,EAAAA;IAC/B;IAEAygB,4BAA4BC,IAAgBtc,IAAAA;AAC1C,aAAO/R,KAAKmS,OAAOJ,IAAO,GAAA,GAAMsc,GAAehV,OAAAA;IACjD;IAEAiV,+BAA+BD,IAAgBE,IAAAA;AAC7C,YAAA,CAAQlV,IAAStH,EAAAA,IAAU/R,KAAKwuB,sBAAsBD,EAAAA;AACtD,aAAO,IAAIvuB,KAAK4O,YAAYyK,EAAAA,EAAS+U,4BAA4BC,IAAgBtc,EAAAA;IACnF;IAEA0c,kBAAkB1c,IAAOhH,IAAAA;AACvB,aAAO/K,KAAK0uB,qBAAqB3jB,GAAS/K,KAAKqZ,QAAQtH,GAAAA,GAASA,EAAAA;IAClE;IAEA2c,qBAAqB/gB,IAAQoE,IAAAA;AAC3B,aAAO/R,KAAKmS,OAAOJ,IAAO,GAAGpE,EAAAA;IAC/B;IAEAghB,oBAAoB5c,IAAAA;AAClB,aAAO/R,KAAKmS,OAAOJ,IAAO,CAAA;IAC5B;IAEA6c,iBAAiB7c,IAAAA;AACf,aAAO/R,KAAKqZ,QAAQtH;IACtB;IAEA8c,yBAAyBrZ,IAAAA;AACvB,YAAA,CAAQ6D,IAASL,IAAW8V,EAAAA,IAAe9uB,KAAK+uB,oBAAoBvZ,EAAAA;AACpE,aAAO,IAAIxV,KAAK4O,YAAYyK,GAAQpK,MAAM+J,IAAW8V,KAAa,CAAA,CAAA;IACpE;IAEAE,qBAAqBnvB,IAAAA;AACnB,YAAMwZ,KAAUrZ,KAAKqZ,QAAQpC,OAAQtJ,CAAAA,OAAW9N,GAAK8N,EAAAA,CAAAA;AACrD,aAAO,IAAI3N,KAAK4O,YAAYyK,EAAAA;IAC9B;IAEA4V,qBAAqBzZ,IAAAA;AACnB,YAAA,CAAQ6D,IAASL,IAAW8V,EAAAA,IAAe9uB,KAAK+uB,oBAAoBvZ,EAAAA;AACpE,aAAO,IAAIxV,KAAK4O,YAAYyK,EAAAA,EAASlH,OAAO6G,IAAW8V,KAAa9V,KAAY,CAAA;IAClF;IAEAkW,wBAAwB1Z,IAAO2Z,IAAAA;AAC7B,YAAA,CAAQ9V,IAASL,IAAW8V,EAAAA,IAAe9uB,KAAK+uB,oBAAoBvZ,EAAAA,GAC9D4Z,KAAqB/V,GAAQ/I,IAAI,CAAC3C,IAAQoE,OAC9CiH,MAAajH,MAASA,MAAS+c,KAAaK,GAAUxhB,EAAAA,IAAUA,EAAAA;AAElE,aAAO,IAAI3N,KAAK4O,YAAYwgB,EAAAA;IAC9B;IAEAL,oBAAoBvZ,IAAAA;AAClB,UAAI6Z,IAAAA,CACEhW,IAASiW,IAAgBtgB,EAAAA,IAAWhP,KAAKwuB,sBAAsBe,GAAa/Z,EAAAA,CAAAA;AAGlF,aAAA,CAFG6D,IAASgW,EAAAA,IAAoB,IAAIrvB,KAAK4O,YAAYyK,EAAAA,EAASmV,sBAAsBgB,GAAWha,EAAAA,IAASxG,EAAAA,GAEjG,CAAEqK,IAASiW,IAAgBD,KAAkB,CAAA;IACtD;IAEAI,oBAAoBlB,IAAAA;AAClB,YAAA,EAAMxc,OAAEA,GAAAA,IAAU/R,KAAK0vB,6BAA6BnB,EAAAA;AACpD,aAAOvuB,KAAKqZ,QAAQtH;IACtB;IAEAyc,sBAAsBD,IAAAA;AACpB,UAAIoB,IAAYC;AAChB,YAAA,EAAM7d,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAK0vB,6BAA6BnB,EAAAA,GACtDlV,KAAUrZ,KAAKqZ,QAAQpK,MAAM,CAAA;AACnC,UAAa,QAAT8C;AACF,YAAe,MAAX/C;AACF2gB,UAAAA,KAAa5d,IACb6d,KAAc;aACT;AACL,gBAAMjiB,KAAS3N,KAAK4uB,iBAAiB7c,EAAAA,GAAAA,CAC7B8d,IAAYC,EAAAA,IAAgBniB,GAAOqgB,cAAchf,EAAAA;AACzDqK,UAAAA,GAAQlH,OAAOJ,IAAO,GAAG8d,IAAYC,EAAAA,GACrCH,KAAa5d,KAAQ,GACrB6d,KAAcC,GAAWzF,UAAAA,IAAcpb;QACzC;;AAEA2gB,QAAAA,KAAatW,GAAQ/T,QACrBsqB,KAAc;AAGhB,aAAO,CAAEvW,IAASsW,IAAYC,EAAAA;IAChC;IAEAG,cAAAA;AACE,YAAM1W,KAAU,CAAA;AAChB,UAAI2W,KAAgBhwB,KAAKqZ,QAAQ;AAejC,aAbArZ,KAAKqZ,QAAQpK,MAAM,CAAA,EAAGhG,QAAS0E,CAAAA,OAAAA;AAAW,YAAAsiB,IAAAC;AACD,kBAAvCD,MAAIC,KAAAF,IAAc3F,0BAAAA,WAAqB4F,MAAnCA,GAAAlqB,KAAAmqB,IAAsCviB,EAAAA,IACxCqiB,KAAgBA,GAAcjC,gBAAgBpgB,EAAAA,KAE9C0L,GAAQ1P,KAAKqmB,EAAAA,GACbA,KAAgBriB;MAClB,CAAA,GAGEqiB,MACF3W,GAAQ1P,KAAKqmB,EAAAA,GAGR,IAAIhwB,KAAK4O,YAAYyK,EAAAA;IAC9B;IAEA8W,4BAA4BC,IAAYC,IAAAA;AACtC,YACMC,KADUtwB,KAAKqZ,QAAQpK,MAAM,CAAA,EACJA,MAAMmhB,IAAYC,KAAW,CAAA,GACtDE,KAAsB,IAAIvwB,KAAK4O,YAAY0hB,EAAAA,EAAgBP,YAAAA,EAAclW,QAAAA;AAC/E,aAAO7Z,KAAKmS,OAAOie,IAAYE,GAAehrB,QAAAA,GAAWirB,EAAAA;IAC3D;IAEAb,6BAA6BnB,IAAAA;AAC3B,UAAIxc,IACAye,KAAkB;AACtB,WAAKze,KAAQ,GAAGA,KAAQ/R,KAAKqZ,QAAQ/T,QAAQyM,MAAS;AACpD,cACM0e,KAAeD,KADNxwB,KAAKqZ,QAAQtH,IACkBqY,UAAAA;AAC9C,YAAIoG,MAAmBjC,MAAYA,KAAWkC;AAC5C,iBAAO,EAAE1e,OAAAA,IAAO/C,QAAQuf,KAAWiC,GAAAA;AAErCA,QAAAA,KAAkBC;MACpB;AACA,aAAO,EAAE1e,OAAO,MAAM/C,QAAQ,KAAA;IAChC;IAEA0hB,6BAA6B3e,IAAO/C,IAAAA;AAClC,UAAIuf,KAAW;AACf,eAASoC,KAAe,GAAGA,KAAe3wB,KAAKqZ,QAAQ/T,QAAQqrB,MAAgB;AAC7E,cAAMhjB,KAAS3N,KAAKqZ,QAAQsX;AAC5B,YAAIA,KAAe5e;AACjBwc,UAAAA,MAAY5gB,GAAOyc,UAAAA;iBACVuG,OAAiB5e,IAAO;AACjCwc,UAAAA,MAAYvf;AACZ;QACF;MACF;AACA,aAAOuf;IACT;IAEAqC,iBAAAA;AAME,aALwB,QAApB5wB,KAAK6wB,gBACP7wB,KAAK6wB,cAAc,GACnB7wB,KAAKqZ,QAAQpQ,QAAS0E,CAAAA,OAAW3N,KAAK6wB,eAAeljB,GAAOyc,UAAAA,CAAAA,IAGvDpqB,KAAK6wB;IACd;IAEAtiB,WAAAA;AACE,aAAOvO,KAAKqZ,QAAQtI,KAAK,EAAA;IAC3B;IAEA8I,UAAAA;AACE,aAAO7Z,KAAKqZ,QAAQpK,MAAM,CAAA;IAC5B;IAEAO,SAAAA;AACE,aAAOxP,KAAK6Z,QAAAA;IACd;IAEAtK,UAAU8e,IAAAA;AACR,aAAOxf,MAAMU,UAAAA,GAAalK,SAAAA,KAAcyrB,GAAqB9wB,KAAKqZ,SAASgV,QAAAA,KAAAA,SAAAA,GAAgBhV,OAAAA;IAC7F;IAEA7H,wBAAAA;AACE,aAAO,EACL6H,SAAO,IAAA5V,OAAMzD,KAAKqZ,QAAQ/I,IAAK3C,CAAAA,OAAWA,GAAO0D,QAAAA,CAAAA,EAAWN,KAAK,IAAA,GAAK,GAAA,EAAA;IAE1E;EAAA;AAGF,MAAM+f,KAAuB,SAASxa,IAAAA;AAAkB,QAAZC,KAAKlR,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAClD,QAAIiR,GAAKhR,WAAWiR,GAAMjR;AACxB,aAAA;AAEF,QAAIuL,KAAAA;AACJ,aAASkB,KAAQ,GAAGA,KAAQuE,GAAKhR,QAAQyM,MAAS;AAChD,YAAMpE,KAAS2I,GAAKvE;AAChBlB,MAAAA,MAAAA,CAAWlD,GAAO4B,UAAUgH,GAAMxE,GAAAA,MACpClB,KAAAA;IAEJ;AACA,WAAOA;EACT;AAZA,MAcM0e,KAAgB/Z,CAAAA,OAAUA,GAAM;AAdtC,MAgBMga,KAAcha,CAAAA,OAAUA,GAAM;ACtNrB,MAAMub,KAAN,cAAmB/f,GAAAA;IAChC,OAAA,gCAAuCrE,IAAY/N,IAAAA;AAEjD,aAAO,IAAIoB,KAAK,CADF,IAAIstB,GAAgB3gB,IAAY/N,EAAAA,CAAAA,CAAAA;IAEhD;IAEA,OAAA,4BAAmCyR,IAAQzR,IAAAA;AAEzC,aAAO,IAAIoB,KAAK,CADF,IAAI8tB,GAAYzd,IAAQzR,EAAAA,CAAAA,CAAAA;IAExC;IAEA,OAAA,SAAgBoyB,IAAAA;AAEd,aAAO,IAAIhxB,KADI4P,MAAMC,KAAKmhB,EAAAA,EAAU1gB,IAAKmZ,CAAAA,OAAcF,GAAMrY,SAASuY,EAAAA,CAAAA,CAAAA;IAExE;IAEA7a,cAAAA;AAAyB,UAAbgY,KAAMvhB,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACnBwJ,YAAAA,GAASxJ,SAAAA;AACT,YAAM4rB,KAAWrK,GAAO3P,OAAQ6K,CAAAA,OAAAA,CAAWA,GAAMhI,QAAAA,CAAAA;AACjD9Z,WAAKkxB,YAAY,IAAIjD,GAAegD,EAAAA;IACtC;IAEAvX,OAAAA;AACE,aAAO1Z,KAAKmxB,kBAAkBnxB,KAAKkxB,SAAAA;IACrC;IAEAC,kBAAkBD,IAAAA;AAChB,aAAO,IAAIlxB,KAAK4O,YAAYsiB,GAAUnB,YAAAA,EAAclW,QAAAA,CAAAA;IACtD;IAEAuX,mBAAmBC,IAAAA;AACjB,YAAMzK,KAAS5mB,KAAK6mB,UAAAA,EAAYvW,IAAKwR,CAAAA,OAAUuP,GAAUrW,KAAK8G,EAAAA,KAAUA,EAAAA;AACxE,aAAO,IAAI9hB,KAAK4O,YAAYgY,EAAAA;IAC9B;IAEA0K,WAAW9xB,IAAAA;AACT,aAAOQ,KAAKuxB,qBAAqB/xB,IAAMQ,KAAKoqB,UAAAA,CAAAA;IAC9C;IAEAmH,qBAAqB/xB,IAAM+uB,IAAAA;AACzB,aAAOvuB,KAAKmxB,kBAAkBnxB,KAAKkxB,UAAU5C,+BAA+B9uB,GAAK0xB,WAAW3C,EAAAA,CAAAA;IAC9F;IAEAiD,kBAAkBhc,IAAAA;AAChB,aAAOxV,KAAKmxB,kBAAkBnxB,KAAKkxB,UAAUjC,qBAAqBzZ,EAAAA,CAAAA;IACpE;IAEAic,mBAAmBjyB,IAAMgW,IAAAA;AACvB,aAAOxV,KAAKwxB,kBAAkBhc,EAAAA,EAAO+b,qBAAqB/xB,IAAMgW,GAAM,EAAA;IACxE;IAEAkc,4BAA4Blc,IAAO+Y,IAAAA;AACjC,UAAI/Y,GAAM,MAAM+Y,MAAYA,MAAY/Y,GAAM;AAAI;AAClD,YAAMhW,KAAOQ,KAAK2xB,eAAenc,EAAAA,GAC3BlQ,KAAS9F,GAAK4qB,UAAAA;AAIpB,aAHI5U,GAAM,KAAK+Y,OACbA,MAAYjpB,KAEPtF,KAAKwxB,kBAAkBhc,EAAAA,EAAO+b,qBAAqB/xB,IAAM+uB,EAAAA;IAClE;IAEAqD,oBAAoB9H,IAAWtlB,IAAOgR,IAAAA;AACpC,YAAM5W,KAAa,CAAA;AAEnB,aADAA,GAAWkrB,MAAatlB,IACjBxE,KAAK6xB,qBAAqBjzB,IAAY4W,EAAAA;IAC/C;IAEAqc,qBAAqBjzB,IAAY4W,IAAAA;AAC/B,aAAOxV,KAAKmxB,kBACVnxB,KAAKkxB,UAAUhC,wBAAwB1Z,IAAQsM,CAAAA,OAAUA,GAAM8H,6BAA6BhrB,EAAAA,CAAAA,CAAAA;IAEhG;IAEAkzB,uBAAuBhI,IAAWtU,IAAAA;AAChC,aAAOxV,KAAKmxB,kBACVnxB,KAAKkxB,UAAUhC,wBAAwB1Z,IAAQsM,CAAAA,OAAUA,GAAM+H,qBAAqBC,EAAAA,CAAAA,CAAAA;IAExF;IAEAiI,qBAAqBnzB,IAAY4W,IAAAA;AAC/B,aAAOxV,KAAKmxB,kBACVnxB,KAAKkxB,UAAUhC,wBAAwB1Z,IAAQsM,CAAAA,OAAUA,GAAM4H,mBAAmB9qB,EAAAA,CAAAA,CAAAA;IAEtF;IAEAozB,wBAAwBzD,IAAAA;AAAU,UAAA0D;AAChC,cAAA,UAAOA,KAAIjyB,KAACkxB,UAAUzB,oBAAoBlB,EAAAA,MAAAA,WAAS0D,KAAAA,SAA5CA,GAA8CxM,cAAAA,MAAmB,CAAA;IAC1E;IAEAyM,sBAAAA;AACE,YAAM7Y,KAAUzJ,MAAMC,KAAK7P,KAAKkxB,UAAUrX,QAAAA,CAAAA,EAAWvJ,IAAKwR,CAAAA,OAAUA,GAAM2D,cAAAA,CAAAA;AAC1E,aAAOtM,GAAKC,8BAA8BC,EAAAA,EAASU,SAAAA;IACrD;IAEAoY,2BAA2B3c,IAAAA;AACzB,aAAOxV,KAAK2xB,eAAenc,EAAAA,EAAO0c,oBAAAA,KAAyB,CAAA;IAC7D;IAEAE,qCAAqC3e,IAAezE,IAAAA;AAClD,UAAIuH,IACAD,KAAOC,KAAQvH;AACnB,YAAM1J,KAAStF,KAAKoqB,UAAAA;AAEpB,aAAO9T,KAAO,KAAKtW,KAAKmyB,2BAA2B,CAAE7b,KAAO,GAAGC,EAAAA,CAAAA,EAAS9C;AACtE6C,QAAAA;AAEF,aAAOC,KAAQjR,MAAUtF,KAAKmyB,2BAA2B,CAAEnjB,IAAQuH,KAAQ,CAAA,CAAA,EAAK9C;AAC9E8C,QAAAA;AAGF,aAAO,CAAED,IAAMC,EAAAA;IACjB;IAEAob,eAAenc,IAAAA;AACb,aAAOxV,KAAKmxB,kBAAkBnxB,KAAKkxB,UAAUrC,yBAAyBrZ,EAAAA,CAAAA;IACxE;IAEA6c,iBAAiB7c,IAAAA;AACf,aAAOxV,KAAKkxB,UAAUrC,yBAAyBrZ,EAAAA,EAAOjH,SAAAA;IACxD;IAEA+jB,oBAAoB/D,IAAAA;AAClB,aAAOvuB,KAAKqyB,iBAAiB,CAAE9D,IAAUA,KAAW,CAAA,CAAA;IACtD;IAEAgE,iBAAiBliB,IAAAA;AACf,aAAOrQ,KAAKqyB,iBAAiB,CAAE,GAAGhiB,GAAO/K,MAAAA,CAAAA,MAAc+K;IACzD;IAEAmiB,eAAeniB,IAAAA;AACb,YAAM/K,KAAStF,KAAKoqB,UAAAA;AACpB,aAAOpqB,KAAKqyB,iBAAiB,CAAE/sB,KAAS+K,GAAO/K,QAAQA,EAAAA,CAAAA,MAAc+K;IACvE;IAEAoiB,sBAAAA;AACE,aAAOzyB,KAAKkxB,UAAUrX,QAAAA,EAAU5C,OAAQ6K,CAAAA,OAAAA,CAAAA,CAAYA,GAAMnV,UAAAA;IAC5D;IAEA+lB,iBAAAA;AACE,aAAO1yB,KAAKyyB,oBAAAA,EAAsBniB,IAAKwR,CAAAA,OAAUA,GAAMnV,UAAAA;IACzD;IAEAgmB,6BAA6BC,IAAAA;AAC3B,UAAIrE,KAAW;AACf,iBAAWzM,MAAS9hB,KAAKkxB,UAAUrX,QAAAA,GAAW;AAAA,YAAA6T;AAC5C,aAAoB,UAAhBA,KAAA5L,GAAMnV,eAAAA,WAAU+gB,KAAAA,SAAhBA,GAAkBviB,QAAOynB;AAC3B,iBAAO,EAAEjmB,YAAYmV,GAAMnV,YAAY4hB,UAAAA,GAAAA;AAEzCA,QAAAA,MAAYzM,GAAMxc;MACpB;AACA,aAAO,EAAEqH,YAAY,MAAM4hB,UAAU,KAAA;IACvC;IAEAsE,kBAAkBD,IAAAA;AAChB,YAAA,EAAMjmB,YAAEA,GAAAA,IAAe3M,KAAK2yB,6BAA6BC,EAAAA;AACzD,aAAOjmB;IACT;IAEAmmB,qBAAqBnmB,IAAAA;AACnB,YAAMomB,KAAwB/yB,KAAK2yB,6BAA6BhmB,GAAWxB,EAAAA,GACrEojB,KAAWwE,GAAsBxE;AAEvC,UADA5hB,KAAaomB,GAAsBpmB;AAEjC,eAAO,CAAE4hB,IAAUA,KAAW,CAAA;IAElC;IAEAyE,8BAA8Bp0B,IAAY+N,IAAAA;AACxC,YAAM6I,KAAQxV,KAAK8yB,qBAAqBnmB,EAAAA;AACxC,aAAI6I,KACKxV,KAAK6xB,qBAAqBjzB,IAAY4W,EAAAA,IAEtCxV;IAEX;IAEAoqB,YAAAA;AACE,aAAOpqB,KAAKkxB,UAAUN,eAAAA;IACxB;IAEA9W,UAAAA;AACE,aAA4B,MAArB9Z,KAAKoqB,UAAAA;IACd;IAEA7a,UAAU/P,IAAAA;AAAM,UAAAyzB;AACd,aAAOpkB,MAAMU,UAAU/P,EAAAA,MAASA,QAAAA,MAAeyzB,UAAXA,KAAJzzB,GAAM0xB,cAAAA,WAAS+B,KAAAA,SAAfA,GAAiB1jB,UAAUvP,KAAKkxB,SAAAA;IAClE;IAEAhH,eAAAA;AACE,aAA4B,MAArBlqB,KAAKoqB,UAAAA,KAAqBpqB,KAAKkxB,UAAUtC,iBAAiB,CAAA,EAAG1E,aAAAA;IACtE;IAEAgJ,UAAUnoB,IAAAA;AACR,aAAO/K,KAAKkxB,UAAUhD,WAAWnjB,EAAAA;IACnC;IAEA8b,YAAAA;AACE,aAAO7mB,KAAKkxB,UAAUrX,QAAAA;IACxB;IAEAsZ,mBAAmB5E,IAAAA;AACjB,aAAOvuB,KAAKkxB,UAAUzB,oBAAoBlB,EAAAA;IAC5C;IAEA/c,wBAAAA;AACE,aAAO,EAAE0f,WAAWlxB,KAAKkxB,UAAU7f,QAAAA,EAAAA;IACrC;IAEA+hB,qBAAAA;AACE,YAAMlC,KAAYlxB,KAAKkxB,UAAUlC,qBAAsBlN,CAAAA,OAAUA,GAAMqI,eAAAA,CAAAA;AACvE,aAAOnqB,KAAKmxB,kBAAkBD,EAAAA;IAChC;IAEA3iB,WAAAA;AACE,aAAOvO,KAAKkxB,UAAU3iB,SAAAA;IACxB;IAEAiB,SAAAA;AACE,aAAOxP,KAAKkxB,UAAU1hB,OAAAA;IACxB;IAEAoe,YAAAA;AACE,aAAOzc,KAAKO,UAAU1R,KAAKkxB,UAAUrX,QAAAA,EAAUvJ,IAAKwR,CAAAA,OAAU3Q,KAAKpS,MAAM+iB,GAAM8L,UAAAA,CAAAA,CAAAA,CAAAA;IACjF;IAIAvb,eAAAA;AACE,aAAOA,GAAarS,KAAKuO,SAAAA,CAAAA;IAC3B;IAEAiZ,QAAAA;AACE,aAA+B,UAAxBxnB,KAAKqS,aAAAA;IACd;EAAA;ACzOa,MAAMghB,KAAN,cAAoBriB,GAAAA;IACjC,OAAA,SAAgBsiB,IAAAA;AAEd,aAAO,IAAItzB,KADE+wB,GAAK7f,SAASoiB,GAAU9zB,IAAAA,GACf8zB,GAAU10B,YAAY00B,GAAU/zB,cAAAA;IACxD;IAEAqP,YAAYpP,IAAMZ,IAAYW,IAAAA;AAC5BsP,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKR,OAAO+zB,GAAsB/zB,MAAQ,IAAIuxB,IAAAA,GAC9C/wB,KAAKpB,aAAaA,MAAc,CAAA,GAChCoB,KAAKT,iBAAiBA,MAAkB,CAAA;IAC1C;IAEAua,UAAAA;AACE,aAAO9Z,KAAKR,KAAK0qB,aAAAA;IACnB;IAEA3a,UAAU2X,IAAAA;AACR,aAAA,CAAA,CAAIrY,MAAMU,UAAU2X,EAAAA,KAEblnB,KAAKR,KAAK+P,UAAU2X,QAAAA,KAAAA,SAAAA,GAAO1nB,IAAAA,KAASoS,GAAe5R,KAAKpB,YAAYsoB,QAAAA,KAAAA,SAAAA,GAAOtoB,UAAAA,KAAe0W,GAAgBtV,KAAKT,gBAAgB2nB,QAAAA,KAAAA,SAAAA,GAAO3nB,cAAAA;IAC/I;IAEAi0B,aAAah0B,IAAAA;AACX,aAAO,IAAI6zB,GAAM7zB,IAAMQ,KAAKpB,YAAYoB,KAAKT,cAAAA;IAC/C;IAEAk0B,kBAAAA;AACE,aAAOzzB,KAAKwzB,aAAa,IAAA;IAC3B;IAEA9J,mBAAmB9qB,IAAAA;AACjB,aAAO,IAAIy0B,GAAMrzB,KAAKR,MAAMZ,IAAYoB,KAAKT,cAAAA;IAC/C;IAEAm0B,wBAAAA;AACE,aAAO1zB,KAAK0pB,mBAAmB,IAAA;IACjC;IAEA0H,mBAAmBC,IAAAA;AACjB,YAAMsC,KAAatC,GAAUrW,KAAKhb,KAAKR,IAAAA;AACvC,aAAIm0B,KACK3zB,KAAKwzB,aAAaG,EAAAA,IAElB3zB,KAAKwzB,aAAaxzB,KAAKR,KAAK4xB,mBAAmBC,EAAAA,CAAAA;IAE1D;IAEAuC,aAAa9J,IAAAA;AACX,YAAMlrB,KAAaoB,KAAKpB,WAAW6E,OAAOowB,GAAgB/J,EAAAA,CAAAA;AAC1D,aAAO9pB,KAAK0pB,mBAAmB9qB,EAAAA;IACjC;IAEAk1B,iBAAiBhK,IAAWtlB,IAAAA;AAC1B,YAAMjF,KAAiBoU,OAAO8T,OAAO,CAAA,GAAIznB,KAAKT,gBAAgB,EAAEuqB,CAACA,KAAYtlB,GAAAA,CAAAA;AAC7E,aAAO,IAAI6uB,GAAMrzB,KAAKR,MAAMQ,KAAKpB,YAAYW,EAAAA;IAC/C;IAEAuhB,gBAAgBgJ,IAAAA;AACd,YAAA,EAAMlqB,eAAEA,GAAAA,IAAkB4T,GAAesW,EAAAA,GACnClrB,KAAam1B,GAAgBA,GAAgB/zB,KAAKpB,YAAYkrB,EAAAA,GAAYlqB,EAAAA;AAChF,aAAOI,KAAK0pB,mBAAmB9qB,EAAAA;IACjC;IAEAo1B,sBAAAA;AACE,aAAOh0B,KAAK8gB,gBAAgB9gB,KAAKqnB,iBAAAA,CAAAA;IACnC;IAEAA,mBAAAA;AACE,aAAO4M,GAAej0B,KAAKpB,UAAAA;IAC7B;IAEA6mB,gBAAAA;AACE,aAAOzlB,KAAKpB,WAAWqQ,MAAM,CAAA;IAC/B;IAEAilB,oBAAAA;AACE,aAAOl0B,KAAKpB,WAAW0G;IACzB;IAEA6uB,oBAAoBC,IAAAA;AAClB,aAAOp0B,KAAKpB,WAAWw1B,KAAQ;IACjC;IAEAxT,aAAanN,IAAAA;AACX,aAAOzT,KAAKpB,WAAWqL,SAASwJ,EAAAA;IAClC;IAEA4gB,gBAAAA;AACE,aAAOr0B,KAAKk0B,kBAAAA,IAAsB;IACpC;IAEAI,2BAAAA;AACE,aAAOL,GAAej0B,KAAKu0B,sBAAAA,CAAAA;IAC7B;IAEAA,wBAAAA;AACE,aAAOv0B,KAAKpB,WAAWqY,OAAQ6S,CAAAA,OAActW,GAAesW,EAAAA,EAAW7qB,QAAAA;IACzE;IAEAu1B,kBAAAA;AACE,aAAOx0B,KAAKu0B,sBAAAA,EAAwBjvB;IACtC;IAEAmvB,uBAAAA;AACE,YAAM3K,KAAY9pB,KAAKs0B,yBAAAA;AACvB,aAAIxK,KACK9pB,KAAK8gB,gBAAgBgJ,EAAAA,IAErB9pB;IAEX;IAEA00B,uBAAAA;AACE,YAAM5K,KAAY9pB,KAAKs0B,yBAAAA;AACvB,UAAIxK,IAAW;AACb,cAAM/X,KAAQ/R,KAAKpB,WAAW+1B,YAAY7K,EAAAA,GACpClrB,KAAaoT,GAAYhS,KAAKpB,YAAYmT,KAAQ,GAAG,GAAA,GAAM8hB,GAAgB/J,EAAAA,CAAAA;AACjF,eAAO9pB,KAAK0pB,mBAAmB9qB,EAAAA;MACjC;AACE,aAAOoB;IAEX;IAEA40B,wBAAAA;AACE,aAAO50B,KAAKpB,WAAWqY,OAAQ6S,CAAAA,OAActW,GAAesW,EAAAA,EAAWlqB,aAAAA;IACzE;IAEAi1B,aAAAA;AAAa,UAAAzN;AACX,aAA8CA,UAA9CA,KAAO5T,GAAexT,KAAKqnB,iBAAAA,CAAAA,MAAAA,WAAmBD,KAAAA,SAAvCA,GAAyCxnB;IAClD;IAEAk1B,kBAAAA;AAAkB,UAAAC;AAChB,aAA8CA,UAA9CA,KAAOvhB,GAAexT,KAAKqnB,iBAAAA,CAAAA,MAAAA,WAAmB0N,KAAAA,SAAvCA,GAAyC51B;IAClD;IAEA61B,iBAAAA;AAAiB,UAAAC;AACf,aAA8CA,UAA9CA,KAAOzhB,GAAexT,KAAKqnB,iBAAAA,CAAAA,MAAAA,WAAmB4N,KAAAA,SAAvCA,GAAyC71B;IAClD;IAEA81B,qCAAqCC,IAAW5G,IAAAA;AAC9C,YAAMle,KAASrQ,KAAKuO,SAAAA;AACpB,UAAIsC;AACJ,cAAQskB,IAAAA;QACN,KAAK;AACHtkB,UAAAA,KAASR,GAAO2Q,QAAQ,MAAMuN,EAAAA;AAC9B;QACF,KAAK;AACH1d,UAAAA,KAASR,GAAOpB,MAAM,GAAGsf,EAAAA,EAAUoG,YAAY,IAAA;MAAA;AAGnD,UAAA,OAAI9jB;AACF,eAAOA;IAEX;IAEAW,wBAAAA;AACE,aAAO,EACLhS,MAAMQ,KAAKR,KAAK6R,QAAAA,GAChBzS,YAAYoB,KAAKpB,WAAAA;IAErB;IAEA2P,WAAAA;AACE,aAAOvO,KAAKR,KAAK+O,SAAAA;IACnB;IAEAiB,SAAAA;AACE,aAAO,EACLhQ,MAAMQ,KAAKR,MACXZ,YAAYoB,KAAKpB,YACjBW,gBAAgBS,KAAKT,eAAAA;IAEzB;IAIA8S,eAAAA;AACE,aAAOrS,KAAKR,KAAK6S,aAAAA;IACnB;IAEAmV,QAAAA;AACE,aAAOxnB,KAAKR,KAAKgoB,MAAAA;IACnB;IAIA4C,YAAAA;AACE,aAAOpqB,KAAKR,KAAK4qB,UAAAA;IACnB;IAEAC,sBAAsBnD,IAAAA;AACpB,aAAA,CAAQlnB,KAAKq0B,cAAAA,KAAAA,CAAoBnN,GAAMmN,cAAAA,KAAmBr0B,KAAKqS,aAAAA,MAAmB6U,GAAM7U,aAAAA;IAC1F;IAEA0b,gBAAgB7G,IAAAA;AACd,YAAMkO,KAAcrE,GAAKsE,4BAA4B,IAAA,GAC/C71B,KAAOQ,KAAKs1B,yBAAAA,EAA2BhE,WAAW8D,EAAAA;AACxD,aAAOp1B,KAAKwzB,aAAah0B,GAAK8xB,WAAWpK,GAAM1nB,IAAAA,CAAAA;IACjD;IAEAwuB,cAAchf,IAAAA;AACZ,UAAIsH,IAAMC;AAWV,aAVe,MAAXvH,MACFsH,KAAO,MACPC,KAAQvW,QACCgP,OAAWhP,KAAKoqB,UAAAA,KACzB9T,KAAOtW,MACPuW,KAAQ,SAERD,KAAOtW,KAAKwzB,aAAaxzB,KAAKR,KAAKmyB,eAAe,CAAE,GAAG3iB,EAAAA,CAAAA,CAAAA,GACvDuH,KAAQvW,KAAKwzB,aAAaxzB,KAAKR,KAAKmyB,eAAe,CAAE3iB,IAAQhP,KAAKoqB,UAAAA,CAAAA,CAAAA,CAAAA,IAE7D,CAAE9T,IAAMC,EAAAA;IACjB;IAEAmR,wBAAAA;AACE,aAAO1nB,KAAKR,KAAK4qB,UAAAA,IAAc;IACjC;IAEAkL,2BAAAA;AACE,aAAIC,GAAqBv1B,KAAKR,IAAAA,IACrBQ,KAAKR,KAAKmyB,eAAe,CAAE,GAAG3xB,KAAK0nB,sBAAAA,CAAAA,CAAAA,IAEnC1nB,KAAKR,KAAKka,KAAAA;IAErB;IAIAiB,aAAaN,IAAAA;AACX,aAAOra,KAAKpB,WAAWyb;IACzB;IAEAO,iBAAiB4a,IAAYnb,IAAAA;AAC3B,YAAMob,KAAkBD,GAAW/P,cAAAA,GAC7BiQ,KAAiBD,GAAgBpb,KACjCyP,KAAY9pB,KAAKpB,WAAWyb;AAElC,aACEyP,OAAc4L,MAAAA,EAAAA,UACZliB,GAAesW,EAAAA,EAAWzqB,SAAAA,E5B5NGs2B,MAAAA;AACnC,YAAA,CAAKviB,IAAoB;AACvBA,eAAqB,CAAA;AACrB,qBAAW7O,MAAOmP,GAAwB;AACxC,kBAAA,EAAM9T,eAAEA,GAAAA,IAAkB8T,EAAuBnP;AAC5B,oBAAjB3E,MACFwT,GAAmBzJ,KAAK/J,EAAAA;UAE5B;QACF;AACA,eAAOwT;MAAkB,G4BkN2BuiB,EAAwB1rB,SAASwrB,GAAgBpb,KAAQ,EAAA,OACxGra,KAAKqS,aAAAA,MAAmBmjB,GAAWnjB,aAAAA,KAAkBmjB,GAAW1b,QAAAA;IAErE;EAAA;AAKF,MAAMyZ,KAAwB,SAAS/zB,IAAAA;AAGrC,WAFAA,KAAOo2B,GAAqCp2B,EAAAA,GAC5CA,KAAOq2B,GAAoBr2B,EAAAA;EAE7B;AAJA,MAMMo2B,KAAuC,SAASp2B,IAAAA;AACpD,QAAIs2B,KAAAA;AACJ,UAAMlP,KAASpnB,GAAKqnB,UAAAA;AAEpB,QAAIkP,KAAcnP,GAAO3X,MAAM,GAAG2X,GAAOthB,SAAS,CAAA;AAClD,UAAM0wB,KAAYpP,GAAOA,GAAOthB,SAAS;AAEzC,WAAK0wB,MAELD,KAAcA,GAAYzlB,IAAKwR,CAAAA,OACzBA,GAAMoI,aAAAA,KACR4L,KAAAA,MACOG,GAAsBnU,EAAAA,KAEtBA,EAAAA,GAIPgU,KACK,IAAI/E,GAAK,CAAA,GAAKgF,IAAaC,EAAAA,CAAAA,IAE3Bx2B,MAdcA;EAgBzB;AA7BA,MA+BM02B,KAAiBnF,GAAKsE,4BAA4B,MAAM,EAAEc,YAAAA,KAAY,CAAA;AA/B5E,MAiCMN,KAAsB,SAASr2B,IAAAA;AACnC,WAAI+1B,GAAqB/1B,EAAAA,IAChBA,KAEAA,GAAK8xB,WAAW4E,EAAAA;EAE3B;AAvCA,MAyCMX,KAAuB,SAAS/1B,IAAAA;AACpC,UAAM8F,KAAS9F,GAAK4qB,UAAAA;AACpB,QAAe,MAAX9kB;AACF,aAAA;AAGF,WADgB9F,GAAKmyB,eAAe,CAAErsB,KAAS,GAAGA,EAAAA,CAAAA,EACnC4kB,aAAAA;EACjB;AAhDA,MAkDM+L,KAAyBnU,CAAAA,OAAUA,GAAM+H,qBAAqB,YAAA;AAlDpE,MAsDMgK,KAAkB,SAAS/J,IAAAA;AAC/B,UAAA,EAAMlqB,eAAEA,GAAAA,IAAkB4T,GAAesW,EAAAA;AACzC,WAAIlqB,KACK,CAAEA,IAAekqB,EAAAA,IAEjB,CAAEA,EAAAA;EAEb;AA7DA,MAiEMmK,KAAkBrjB,CAAAA,OAAUA,GAAM3B,MAAAA,EAAO,EAAG;AAjElD,MAmEM8kB,KAAkB,SAASnjB,IAAOpM,IAAAA;AACtC,UAAMuN,KAAQnB,GAAM+jB,YAAYnwB,EAAAA;AAChC,WAAA,OAAIuN,KACKnB,KAEAoB,GAAYpB,IAAOmB,IAAO,CAAA;EAErC;ACnUe,MAAMqkB,KAAN,cAAuBplB,GAAAA;IACpC,OAAA,SAAgBqlB,IAAAA;AAEd,aAAO,IAAIr2B,KADI4P,MAAMC,KAAKwmB,EAAAA,EAAc/lB,IAAKgjB,CAAAA,OAAcD,GAAMniB,SAASoiB,EAAAA,CAAAA,CAAAA;IAE5E;IAEA,OAAA,WAAkBjjB,IAAQimB,IAAAA;AACxB,YAAM92B,KAAOuxB,GAAKsE,4BAA4BhlB,IAAQimB,EAAAA;AACtD,aAAO,IAAIt2B,KAAK,CAAE,IAAIqzB,GAAM7zB,EAAAA,CAAAA,CAAAA;IAC9B;IAEAoP,cAAAA;AAAyB,UAAb2nB,KAAMlxB,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACnBwJ,YAAAA,GAASxJ,SAAAA,GACa,MAAlBkxB,GAAOjxB,WACTixB,KAAS,CAAE,IAAIlD,IAAAA,IAEjBrzB,KAAKw2B,YAAYvI,GAAe5f,IAAIkoB,EAAAA;IACtC;IAEAzc,UAAAA;AACE,YAAMoN,KAAQlnB,KAAKy2B,gBAAgB,CAAA;AACnC,aAAiC,MAA1Bz2B,KAAKw2B,UAAUlxB,UAAgB4hB,GAAMpN,QAAAA,KAAAA,CAAcoN,GAAMmN,cAAAA;IAClE;IAEA3a,OAAAA;AACE,YAAM6c,MADIlxB,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GACUqxB,oBAAoB12B,KAAKw2B,UAAUzG,YAAAA,EAAclW,QAAAA,IAAY7Z,KAAKw2B,UAAU3c,QAAAA;AAEnG,aAAO,IAAI7Z,KAAK4O,YAAY2nB,EAAAA;IAC9B;IAEAI,6BAA6BC,IAAAA;AAC3B,YAAMvF,KAAY,IAAItW,GAAU6b,GAAe/b,WAAAA,CAAAA;AAC/C,aAAO7a,KAAKoxB,mBAAmBC,EAAAA;IACjC;IAEAD,mBAAmBC,IAAAA;AACjB,YAAMkF,KAASv2B,KAAKkoB,UAAAA,EAAY5X,IAAK4W,CAAAA,OACfmK,GAAUrW,KAAKkM,EAAAA,KACbA,GAAMkK,mBAAmBC,EAAAA,CAAAA;AAEjD,aAAO,IAAIrxB,KAAK4O,YAAY2nB,EAAAA;IAC9B;IAEAM,8BAAAA;AAAkD,UAAtBntB,KAAerE,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAC5C,YAAMkxB,KAASv2B,KAAKkoB,UAAAA,EAAY5X,IAAK4W,CAAAA,OAAAA;AACnC,cAAMtoB,KAAa8K,GAAgBjG,OAAOyjB,GAAMzB,cAAAA,CAAAA;AAChD,eAAOyB,GAAMwC,mBAAmB9qB,EAAAA;MAAW,CAAA;AAG7C,aAAO,IAAIoB,KAAK4O,YAAY2nB,EAAAA;IAC9B;IAEAO,aAAaC,IAAUC,IAAAA;AACrB,YAAMjlB,KAAQ/R,KAAKw2B,UAAUxV,QAAQ+V,EAAAA;AACrC,aAAA,OAAIhlB,KACK/R,OAEF,IAAIA,KAAK4O,YAAY5O,KAAKw2B,UAAU9H,qBAAqBsI,IAAUjlB,EAAAA,CAAAA;IAC5E;IAEAklB,sBAAsBvyB,IAAU8Q,IAAAA;AAC9B,YAAA,EAAMghB,WAAEA,GAAAA,IAAc9xB;AACtB8Q,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,UAAA,CAAM+Y,EAAAA,IAAa/Y;AACnB,YAAA,EAAMzD,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqB3I,EAAAA;AAEpD,UAAI1d,KAAS7Q;AACb,YAAMknB,KAAQlnB,KAAKm3B,mBAAmB5I,EAAAA;AAStC,aAPI5Y,GAAiBH,EAAAA,KAAU0R,GAAMpN,QAAAA,KAAAA,CAAcoN,GAAMmN,cAAAA,IACvDxjB,KAAS,IAAI7Q,KAAK4O,YAAYiC,GAAO2lB,UAAU7H,oBAAoB5c,EAAAA,CAAAA,IAC1DmV,GAAMQ,sBAAAA,MAA4B1Y,MAC3Cuf,MAGF1d,KAASA,GAAO2gB,kBAAkBhc,EAAAA,GAC3B,IAAIxV,KAAK4O,YAAYiC,GAAO2lB,UAAUlI,+BAA+BkI,IAAWjI,EAAAA,CAAAA;IACzF;IAEA6I,qBAAqB1yB,IAAU8Q,IAAAA;AAC7B,UAAI6hB,IAAmBxmB;AACvB2E,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,EAAAA,IAAkB9hB,IACpB+hB,KAAgBv3B,KAAKk3B,qBAAqBI,EAAAA,GAC1C5tB,KAAkB1J,KAAKy2B,gBAAgBc,GAAcxlB,KAAAA,EAAO0T,cAAAA,GAC5D+R,KAAsB9yB,GAAS+yB,uBAAAA,GAC/BC,KAA0BhuB,GAAgBuF,MAAAA,CAAOuoB,GAAoBlyB,MAAAA;AAE3E,UAAIsM,GAAe4lB,IAAqBE,EAAAA,GAA0B;AAChE,cAAMC,KAAyBjuB,GAAgBuF,MAAM,GAAA,CAAIuoB,GAAoBlyB,MAAAA;AAC7E+xB,QAAAA,KAAoB3yB,GAASmyB,4BAA4Bc,EAAAA;MAC3D;AACEN,QAAAA,KAAoB3yB,GAASgV,KAAK,EAAEgd,mBAAAA,KAAmB,CAAA,EAAQG,4BAA4BntB,EAAAA;AAG7F,YAAMkuB,KAAaP,GAAkBQ,cAAAA,GAC/BC,KAAaT,GAAkBZ,gBAAgB,CAAA;AAErD,UAAI7kB,GAAelI,IAAiBouB,GAAWrS,cAAAA,CAAAA,GAAkB;AAC/D,cAAMsS,KAAYD,GAAWxC,yBAAAA;AAG7B,YAFAzkB,KAAS7Q,KAAKg4B,kBAAkBD,IAAWviB,EAAAA,GAEvCoiB,KAAa,GAAG;AAClBP,UAAAA,KAAoB,IAAIr3B,KAAK4O,YAAYyoB,GAAkBnP,UAAAA,EAAYjZ,MAAM,CAAA,CAAA;AAC7E,gBAAMsf,KAAW+I,KAAgBS,GAAU3N,UAAAA;AAC3CvZ,UAAAA,KAASA,GAAOomB,sBAAsBI,IAAmB9I,EAAAA;QAC3D;MACF;AACE1d,QAAAA,KAAS7Q,KAAKi3B,sBAAsBI,IAAmB7hB,EAAAA;AAGzD,aAAO3E;IACT;IAEAmnB,kBAAkBx4B,IAAMgW,IAAAA;AACtBA,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,EAAAA,IAAkB9hB,IAAAA,EACpBzD,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqBI,EAAAA,GAE9C5yB,KAAW1E,KAAKwxB,kBAAkBhc,EAAAA;AACxC,aAAO,IAAIxV,KAAK4O,YACdlK,GAAS8xB,UAAU/H,kBAAkB1c,IAAQmV,CAAAA,OAC3CA,GAAMsM,aAAatM,GAAM1nB,KAAK+xB,qBAAqB/xB,IAAMwP,EAAAA,CAAAA,CAAAA,CAAAA;IAG/D;IAEAwiB,kBAAkBhc,IAAAA;AAChB,UAAI+gB;AACJ/gB,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQyiB,IAAcC,EAAAA,IAAkB1iB;AACxC,UAAIG,GAAiBH,EAAAA;AACnB,eAAOxV;AAET,YAAA,CAAQm4B,IAAcC,EAAAA,IAAkBxoB,MAAMC,KAAK7P,KAAKq4B,uBAAuB7iB,EAAAA,CAAAA,GAEzEwD,KAAYmf,GAAapmB,OACzBumB,KAAaH,GAAanpB,QAC1BupB,KAAYv4B,KAAKy2B,gBAAgBzd,EAAAA,GAEjC8V,KAAasJ,GAAcrmB,OAC3BymB,KAAcJ,GAAcppB,QAC5BypB,KAAaz4B,KAAKy2B,gBAAgB3H,EAAAA;AAQxC,UALEoJ,KAAgBD,MAAiB,KACjCM,GAAU7Q,sBAAAA,MAA4B4Q,MACtCG,GAAW/Q,sBAAAA,MAA4B8Q,MACc,SAArDC,GAAWj5B,KAAK8yB,oBAAoBkG,EAAAA;AAGpCjC,QAAAA,KAASv2B,KAAKw2B,UAAU/H,kBAAkBK,IAAa5H,CAAAA,OACrDA,GAAMsM,aAAatM,GAAM1nB,KAAKgyB,kBAAkB,CAAEgH,IAAaA,KAAc,CAAA,CAAA,CAAA,CAAA;WAE1E;AACL,YAAItR;AACJ,cAAMwR,KAAWH,GAAU/4B,KAAKmyB,eAAe,CAAE,GAAG2G,EAAAA,CAAAA,GAC9CK,KAAYF,GAAWj5B,KAAKmyB,eAAe,CAAE6G,IAAaC,GAAWrO,UAAAA,CAAAA,CAAAA,GACrE5qB,KAAOk5B,GAASpH,WAAWqH,EAAAA;AAM/BzR,QAAAA,KAJwBlO,OAAc8V,MAA6B,MAAfwJ,MACXC,GAAUrE,kBAAAA,KAAuBuE,GAAWvE,kBAAAA,IAG7EuE,GAAWjF,aAAah0B,EAAAA,IAExB+4B,GAAU/E,aAAah0B,EAAAA;AAGjC,cAAMo5B,KAAqB9J,KAAa,IAAI9V;AAC5Cud,QAAAA,KAASv2B,KAAKw2B,UAAUrkB,OAAO6G,IAAW4f,IAAoB1R,EAAAA;MAChE;AAEA,aAAO,IAAIlnB,KAAK4O,YAAY2nB,EAAAA;IAC9B;IAEA7E,4BAA4Blc,IAAO+Y,IAAAA;AACjC,UAAI/uB;AACJgW,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,IAAezG,EAAAA,IAAgBrb;AACvC,UAAI8hB,MAAiB/I,MAAYA,MAAYsC;AAC3C,eAAO7wB;AAGT,UAAI0E,KAAW1E,KAAK64B,mBAAmBrjB,EAAAA,GACnC3E,KAAS7Q,KAAKwxB,kBAAkBhc,EAAAA;AAEpC,YAAMsjB,KAAkBxB,KAAgB/I;AACpCuK,MAAAA,OACFvK,MAAY7pB,GAAS0lB,UAAAA;AAGvB,YAAA,CAAQ0N,OAAevB,EAAAA,IAAW7xB,GAASwjB,UAAAA;AAW3C,aAVsB,MAAlBqO,GAAOjxB,UACT9F,KAAOs4B,GAAWxC,yBAAAA,GACdwD,OACFvK,MAAY,MAGd/uB,KAAOs4B,GAAWt4B,MAGpBqR,KAASA,GAAOmnB,kBAAkBx4B,IAAM+uB,EAAAA,GAClB,MAAlBgI,GAAOjxB,SACFuL,MAGTnM,KAAW,IAAI1E,KAAK4O,YAAY2nB,EAAAA,GAChChI,MAAY/uB,GAAK4qB,UAAAA,GAEVvZ,GAAOomB,sBAAsBvyB,IAAU6pB,EAAAA;IAChD;IAEAqD,oBAAoB9H,IAAWtlB,IAAOgR,IAAAA;AACpC,UAAA,EAAIghB,WAAEA,GAAAA,IAAcx2B;AAgBpB,aAfAA,KAAK+4B,iBACHvjB,IACA,CAAC0R,IAAO8R,IAAWjnB,OACjBykB,KAAYA,GAAU/H,kBAAkB1c,IAAO,WAAA;AAC7C,eAAIyB,GAAesW,EAAAA,IACV5C,GAAM0M,aAAa9J,IAAWtlB,EAAAA,IAEjCw0B,GAAU,OAAOA,GAAU,KACtB9R,KAEAA,GAAMsM,aAAatM,GAAM1nB,KAAKoyB,oBAAoB9H,IAAWtlB,IAAOw0B,EAAAA,CAAAA;MAGhF,CAAA,CAAA,GAEE,IAAIh5B,KAAK4O,YAAY4nB,EAAAA;IAC9B;IAEA5C,aAAa9J,IAAWtlB,IAAAA;AACtB,UAAA,EAAIgyB,WAAEA,GAAAA,IAAcx2B;AAIpB,aAHAA,KAAKi5B,UACH,CAAC/R,IAAOnV,OAAUykB,KAAYA,GAAU/H,kBAAkB1c,IAAO,MAAMmV,GAAM0M,aAAa9J,IAAWtlB,EAAAA,CAAAA,CAAAA,GAEhG,IAAIxE,KAAK4O,YAAY4nB,EAAAA;IAC9B;IAEA1E,uBAAuBhI,IAAWtU,IAAAA;AAChC,UAAA,EAAIghB,WAAEA,GAAAA,IAAcx2B;AAUpB,aATAA,KAAK+4B,iBAAiBvjB,IAAO,SAAS0R,IAAO8R,IAAWjnB,IAAAA;AAClDyB,WAAesW,EAAAA,IACjB0M,KAAYA,GAAU/H,kBAAkB1c,IAAO,MAAMmV,GAAMpG,gBAAgBgJ,EAAAA,CAAAA,IAClEkP,GAAU,OAAOA,GAAU,OACpCxC,KAAYA,GAAU/H,kBAAkB1c,IAAO,MAC7CmV,GAAMsM,aAAatM,GAAM1nB,KAAKsyB,uBAAuBhI,IAAWkP,EAAAA,CAAAA,CAAAA;MAGtE,CAAA,GACO,IAAIh5B,KAAK4O,YAAY4nB,EAAAA;IAC9B;IAEAxD,8BAA8Bp0B,IAAY+N,IAAAA;AACxC,YAAM6I,KAAQxV,KAAK8yB,qBAAqBnmB,EAAAA,GAAAA,CAChC2qB,EAAAA,IAAkB1nB,MAAMC,KAAK2F,EAAAA,GAAAA,EAC/BzD,OAAEA,GAAAA,IAAU/R,KAAKk3B,qBAAqBI,EAAAA,GACtC93B,KAAOQ,KAAKk5B,eAAennB,EAAAA;AAEjC,aAAO,IAAI/R,KAAK4O,YACd5O,KAAKw2B,UAAU/H,kBAAkB1c,IAAQmV,CAAAA,OACvCA,GAAMsM,aAAah0B,GAAKwzB,8BAA8Bp0B,IAAY+N,EAAAA,CAAAA,CAAAA,CAAAA;IAGxE;IAEAwsB,6BAA6BrP,IAAWnd,IAAAA;AACtC,YAAM6I,KAAQxV,KAAK8yB,qBAAqBnmB,EAAAA;AACxC,aAAO3M,KAAK8xB,uBAAuBhI,IAAWtU,EAAAA;IAChD;IAEA4jB,2BAA2B7K,IAAU9vB,IAAM+F,IAAAA;AACzC,YAAM0iB,KAAQlnB,KAAKm3B,mBAAmB5I,EAAAA,GAChC8K,KAAenS,GAAM4M,iBAAiBr1B,IAAM+F,EAAAA;AAClD,aAAOxE,KAAK82B,aAAa5P,IAAOmS,EAAAA;IAClC;IAEAC,wBAAwB9jB,IAAAA;AACtB,UAAI+gB;AACJ/gB,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,EAAAA,IAAkB9hB,IAAAA,EACpBxG,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqBI,EAAAA,GAEvC5yB,KAAW1E,KAAKwxB,kBAAkBhc,EAAAA;AAIxC,aAHe,MAAXxG,OACFunB,KAAS,CAAE,IAAIlD,IAAAA,IAEV,IAAIrzB,KAAK4O,YACdlK,GAAS8xB,UAAUlI,+BAA+B,IAAIL,GAAesI,EAAAA,GAASe,EAAAA,CAAAA;IAElF;IAEAiC,2BAA2B9lB,IAAejP,IAAOgR,IAAAA;AAC/C,YAAMgkB,KAAWx5B,KAAKy5B,sCAAsCjkB,EAAAA;AAC5D,UAAI9Q,KAAW80B,GAAS90B;AACxB8Q,MAAAA,KAAQgkB,GAAShkB;AACjB,YAAMkkB,KAAclmB,GAAeC,EAAAA;AAEnC,UAAIimB,GAAY95B,eAAe;AAC7B8E,QAAAA,KAAWA,GAASi1B,+BAA+BnkB,IAAO,EAAEokB,qBAAqBnmB,GAAAA,CAAAA;AACjF,cAAMomB,KAAYn1B,GAASo1B,sCAAsCtkB,EAAAA;AACjE9Q,QAAAA,KAAWm1B,GAAUn1B,UACrB8Q,KAAQqkB,GAAUrkB;MACpB;AACE9Q,QAAAA,KADSg1B,GAAYt5B,YACVsE,GAASq1B,6BAA6BvkB,EAAAA,IACxCkkB,GAAYv6B,WACVuF,GAASs1B,mCAAmCxkB,EAAAA,IAE5C9Q,GAASu1B,yBAAyBzkB,EAAAA;AAG/C,aAAO9Q,GAASktB,oBAAoBne,IAAejP,IAAOgR,EAAAA;IAC5D;IAEAmkB,+BAA+BnkB,IAAAA;AAAqB,UAAdjN,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAA,EAC1CmxB,WAAEA,GAAAA,IAAcx2B;AAcpB,aAbAA,KAAK+4B,iBAAiBvjB,IAAO,SAAS0R,IAAO8R,IAAWjnB,IAAAA;AACtD,cAAMmoB,KAAoBhT,GAAMG,iBAAAA;AAC3B6S,QAAAA,MAGA1mB,GAAe0mB,EAAAA,EAAmBt6B,iBAGnCs6B,OAAsB3xB,GAAQqxB,wBAGlCpD,KAAYA,GAAU/H,kBAAkB1c,IAAO,MAAMmV,GAAMpG,gBAAgBoZ,EAAAA,CAAAA;MAC7E,CAAA,GACO,IAAIl6B,KAAK4O,YAAY4nB,EAAAA;IAC9B;IAEAwD,mCAAmCxkB,IAAAA;AACjC,UAAA,EAAIghB,WAAEA,GAAAA,IAAcx2B;AAWpB,aAVAA,KAAK+4B,iBAAiBvjB,IAAO,SAAS0R,IAAO8R,IAAWjnB,IAAAA;AACtD,cAAMmoB,KAAoBhT,GAAMG,iBAAAA;AAC3B6S,QAAAA,MAGA1mB,GAAe0mB,EAAAA,EAAmB/6B,aAGvCq3B,KAAYA,GAAU/H,kBAAkB1c,IAAO,MAAMmV,GAAMpG,gBAAgBoZ,EAAAA,CAAAA;MAC7E,CAAA,GACO,IAAIl6B,KAAK4O,YAAY4nB,EAAAA;IAC9B;IAEAuD,6BAA6BvkB,IAAAA;AAC3B,UAAA,EAAIghB,WAAEA,GAAAA,IAAcx2B;AAMpB,aALAA,KAAK+4B,iBAAiBvjB,IAAO,SAAS0R,IAAO8R,IAAWjnB,IAAAA;AAClDmV,QAAAA,GAAMmN,cAAAA,MACRmC,KAAYA,GAAU/H,kBAAkB1c,IAAO,MAAMmV,GAAMwM,sBAAAA,CAAAA;MAE/D,CAAA,GACO,IAAI1zB,KAAK4O,YAAY4nB,EAAAA;IAC9B;IAEAiD,sCAAsCjkB,IAAAA;AACpC,UAAI+Y;AACJ/Y,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,UAAA,CAAM8hB,IAAezG,EAAAA,IAAgBrb;AACrC,YAAM+hB,KAAgBv3B,KAAKk3B,qBAAqBI,EAAAA,GAC1C6C,KAAcn6B,KAAKk3B,qBAAqBrG,EAAAA;AAC9C,UAAInsB,KAAW1E;AAEf,YAAMo6B,KAAa11B,GAAS+xB,gBAAgBc,GAAcxlB,KAAAA;AAW1D,UAVAwlB,GAAcvoB,SAASorB,GAAWlF,qCAAqC,YAAYqC,GAAcvoB,MAAAA,GACrE,QAAxBuoB,GAAcvoB,WAChBuf,KAAW7pB,GAAS21B,qBAAqB9C,EAAAA,GACzC7yB,KAAWA,GAAS40B,wBAAwB,CAAE/K,IAAUA,KAAW,CAAA,CAAA,GACnE4L,GAAYpoB,SAAS,GACrBooB,GAAYnrB,UAAUtK,GAAS+xB,gBAAgBc,GAAcxlB,KAAAA,EAAOqY,UAAAA,GACpEmN,GAAcxlB,SAAS,IAEzBwlB,GAAcvoB,SAAS,GAEI,MAAvBmrB,GAAYnrB,UAAgBmrB,GAAYpoB,QAAQwlB,GAAcxlB;AAChEooB,QAAAA,GAAYpoB,SAAS,GACrBooB,GAAYnrB,SAAStK,GAAS+xB,gBAAgB0D,GAAYpoB,KAAAA,EAAO2V,sBAAAA;WAC5D;AACL,cAAM4S,KAAW51B,GAAS+xB,gBAAgB0D,GAAYpoB,KAAAA;AACiC,iBAAnFuoB,GAAS96B,KAAK6yB,iBAAiB,CAAE8H,GAAYnrB,SAAS,GAAGmrB,GAAYnrB,MAAAA,CAAAA,IACvEmrB,GAAYnrB,UAAU,IAEtBmrB,GAAYnrB,SAASsrB,GAASpF,qCAAqC,WAAWiF,GAAYnrB,MAAAA,GAExFmrB,GAAYnrB,WAAWsrB,GAAS5S,sBAAAA,MAClC6G,KAAW7pB,GAAS21B,qBAAqBF,EAAAA,GACzCz1B,KAAWA,GAAS40B,wBAAwB,CAAE/K,IAAUA,KAAW,CAAA,CAAA;MAEvE;AAMA,aAJA+I,KAAgB5yB,GAAS21B,qBAAqB9C,EAAAA,GAC9C1G,KAAcnsB,GAAS21B,qBAAqBF,EAAAA,GAGrC,EAAEz1B,UAAAA,IAAU8Q,OAFnBA,KAAQD,GAAe,CAAE+hB,IAAezG,EAAAA,CAAAA,EAAAA;IAG1C;IAEAiJ,sCAAsCtkB,IAAAA;AACpCA,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,UAAA,CAAM+Y,EAAAA,IAAa/Y;AACnB,YAAMnF,KAASrQ,KAAKqyB,iBAAiB7c,EAAAA,EAAOvG,MAAM,GAAA,EAAI;AACtD,UAAIvK,KAAW1E;AAOf,aALAqQ,GAAOnM,QAAQ,UAAU,SAASxD,IAAAA;AAChC6tB,QAAAA,MAAY7tB,GAAM4E,QAClBZ,KAAWA,GAAS40B,wBAAwB,CAAE/K,KAAW,GAAGA,EAAAA,CAAAA;MAC9D,CAAA,GAEO,EAAE7pB,UAAAA,IAAU8Q,OAAAA,GAAAA;IACrB;IAEAykB,yBAAyBzkB,IAAAA;AACvBA,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,IAAezG,EAAAA,IAAgBrb,IACjC4a,KAAapwB,KAAKk3B,qBAAqBI,EAAAA,EAAevlB,OACtDse,KAAWrwB,KAAKk3B,qBAAqBrG,EAAAA,EAAa9e;AACxD,aAAO,IAAI/R,KAAK4O,YAAY5O,KAAKw2B,UAAUrG,4BAA4BC,IAAYC,EAAAA,CAAAA;IACrF;IAEAwI,mBAAmBrjB,IAAAA;AACjBA,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAM+gB,KAASv2B,KAAKw2B,UAAU3H,yBAAyBrZ,EAAAA,EAAOqE,QAAAA;AAC9D,aAAO,IAAI7Z,KAAK4O,YAAY2nB,EAAAA;IAC9B;IAEAlE,iBAAiB7c,IAAAA;AACf,UAAI6a;AACJ,YAAMzf,KAAQ4E,KAAQD,GAAeC,EAAAA;AAKrC,aAJgB5E,GAAMA,GAAMtL,SAAS,OACjBtF,KAAKoqB,UAAAA,MACvBiG,KAAAA,KAEKrwB,KAAK64B,mBAAmBrjB,EAAAA,EAAOjH,SAAAA,EAAWU,MAAM,GAAGohB,EAAAA;IAC5D;IAEAoG,gBAAgB1kB,IAAAA;AACd,aAAO/R,KAAKw2B,UAAU5H,iBAAiB7c,EAAAA;IACzC;IAEAolB,mBAAmB5I,IAAAA;AACjB,YAAA,EAAMxc,OAAEA,GAAAA,IAAU/R,KAAKk3B,qBAAqB3I,EAAAA;AAC5C,aAAOvuB,KAAKy2B,gBAAgB1kB,EAAAA;IAC9B;IAEAmnB,eAAennB,IAAAA;AAAO,UAAAwoB;AACpB,aAAkCA,UAAlCA,KAAOv6B,KAAKy2B,gBAAgB1kB,EAAAA,MAAAA,WAAMwoB,KAAAA,SAA3BA,GAA6B/6B;IACtC;IAEAg7B,kBAAkBjM,IAAAA;AAChB,YAAA,EAAMxc,OAAEA,GAAAA,IAAU/R,KAAKk3B,qBAAqB3I,EAAAA;AAC5C,aAAOvuB,KAAKk5B,eAAennB,EAAAA;IAC7B;IAEAohB,mBAAmB5E,IAAAA;AACjB,YAAA,EAAMxc,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqB3I,EAAAA;AACpD,aAAOvuB,KAAKk5B,eAAennB,EAAAA,EAAOohB,mBAAmBnkB,EAAAA;IACvD;IAEAyrB,uBAAuBlM,IAAAA;AACrB,YAAA,EAAMxc,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqB3I,EAAAA;AACpD,aAAOvuB,KAAKk5B,eAAennB,EAAAA,EAAOsgB,iBAAiB,CAAErjB,IAAQA,KAAS,CAAA,CAAA;IACxE;IAEAob,YAAAA;AACE,aAAOpqB,KAAKw2B,UAAU5F,eAAAA;IACxB;IAEA1I,YAAAA;AACE,aAAOloB,KAAKw2B,UAAU3c,QAAAA;IACxB;IAEAge,gBAAAA;AACE,aAAO73B,KAAKw2B,UAAUlxB;IACxB;IAEAo1B,eAAAA;AACE,aAAO16B,KAAK26B;IACd;IAEA1B,UAAUluB,IAAAA;AACR,aAAO/K,KAAKw2B,UAAUtI,WAAWnjB,EAAAA;IACnC;IAEAguB,iBAAiBvjB,IAAOzK,IAAAA;AACtB,UAAImc,IAAO8R;AACXxjB,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,IAAezG,EAAAA,IAAgBrb,IACjC+hB,KAAgBv3B,KAAKk3B,qBAAqBI,EAAAA,GAC1C6C,KAAcn6B,KAAKk3B,qBAAqBrG,EAAAA;AAE9C,UAAI0G,GAAcxlB,UAAUooB,GAAYpoB;AAGtC,eAFAmV,KAAQlnB,KAAKy2B,gBAAgBc,GAAcxlB,KAAAA,GAC3CinB,KAAY,CAAEzB,GAAcvoB,QAAQmrB,GAAYnrB,MAAAA,GACzCjE,GAASmc,IAAO8R,IAAWzB,GAAcxlB,KAAAA;AAEhD,eAASA,KAAQwlB,GAAcxlB,OAAOA,MAASooB,GAAYpoB,OAAOA;AAEhE,YADAmV,KAAQlnB,KAAKy2B,gBAAgB1kB,EAAAA,GACzBmV,IAAO;AACT,kBAAQnV,IAAAA;YACN,KAAKwlB,GAAcxlB;AACjBinB,cAAAA,KAAY,CAAEzB,GAAcvoB,QAAQkY,GAAM1nB,KAAK4qB,UAAAA,CAAAA;AAC/C;YACF,KAAK+P,GAAYpoB;AACfinB,cAAAA,KAAY,CAAE,GAAGmB,GAAYnrB,MAAAA;AAC7B;YACF;AACEgqB,cAAAA,KAAY,CAAE,GAAG9R,GAAM1nB,KAAK4qB,UAAAA,CAAAA;UAAAA;AAEhCrf,UAAAA,GAASmc,IAAO8R,IAAWjnB,EAAAA;QAC7B;IAGN;IAEAogB,2BAA2B3c,IAAAA;AACzBA,MAAAA,KAAQD,GAAeC,EAAAA;AACvB,YAAA,CAAQ8hB,EAAAA,IAAkB9hB;AAC1B,UAAIG,GAAiBH,EAAAA;AACnB,eAAOxV,KAAK46B,8BAA8BtD,EAAAA;AACrC;AACL,cAAMhB,KAAiB,CAAA,GACjB5sB,KAAkB,CAAA;AASxB,eAPA1J,KAAK+4B,iBAAiBvjB,IAAO,SAAS0R,IAAO8R,IAAAA;AAC3C,cAAIA,GAAU,OAAOA,GAAU;AAE7B,mBADA1C,GAAe3sB,KAAKud,GAAM1nB,KAAK2yB,2BAA2B6G,EAAAA,CAAAA,GACnDtvB,GAAgBC,KAAKkxB,GAAmB3T,EAAAA,CAAAA;QAEnD,CAAA,GAEO/N,GAAKC,8BAA8Bkd,EAAAA,EACvC3c,MAAMR,GAAKC,8BAA8B1P,EAAAA,CAAAA,EACzCqQ,SAAAA;MACL;IACF;IAEA6gB,8BAA8BrM,IAAAA;AAC5B,UAAIhqB,IAAKC;AACT,YAAA,EAAMuN,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqB3I,EAAAA,GAC9CrH,KAAQlnB,KAAKy2B,gBAAgB1kB,EAAAA;AACnC,UAAA,CAAKmV;AACH,eAAO,CAAA;AAGT,YAAM4T,KAAmBD,GAAmB3T,EAAAA,GACtCtoB,KAAasoB,GAAM1nB,KAAKwyB,wBAAwBhjB,EAAAA,GAChD+rB,KAAiB7T,GAAM1nB,KAAKwyB,wBAAwBhjB,KAAS,CAAA,GAC7DgsB,KAAwBrnB,OAAOC,KAAKF,CAAAA,EAAuBuD,OAAQ1S,CAAAA,OAChEmP,EAAsBnP,IAAKuH,WAAAA;AAGpC,WAAKvH,MAAOw2B;AACVv2B,QAAAA,KAAQu2B,GAAex2B,MACnBC,OAAU5F,GAAW2F,OAAQy2B,GAAsB/wB,SAAS1F,EAAAA,OAC9Du2B,GAAiBv2B,MAAOC;AAI5B,aAAOs2B;IACT;IAEAG,oCAAoCxnB,IAAe8a,IAAAA;AACjD,YAAA,EAAMxc,OAAEA,IAAK/C,QAAEA,GAAAA,IAAWhP,KAAKk3B,qBAAqB3I,EAAAA,GAC9C/uB,KAAOQ,KAAKk5B,eAAennB,EAAAA,GAAAA,CACzBmpB,IAAaC,EAAAA,IAAcvrB,MAAMC,KAAKrQ,GAAK4yB,qCAAqC3e,IAAezE,EAAAA,CAAAA,GAEjG4G,KAAQ5V,KAAKq6B,qBAAqB,EAAEtoB,OAAAA,IAAO/C,QAAQksB,GAAAA,CAAAA,GACnDrlB,KAAM7V,KAAKq6B,qBAAqB,EAAEtoB,OAAAA,IAAO/C,QAAQmsB,GAAAA,CAAAA;AACvD,aAAO5lB,GAAe,CAAEK,IAAOC,EAAAA,CAAAA;IACjC;IAEA4hB,yBAAAA;AACE,UAAID,KAAsBx3B,KAAKy2B,gBAAgB,CAAA,EAAGhR,cAAAA;AAElD,eAAS2V,KAAa,GAAGA,KAAap7B,KAAK63B,cAAAA,GAAiBuD,MAAc;AACxE,cAAM1xB,KAAkB1J,KAAKy2B,gBAAgB2E,EAAAA,EAAY3V,cAAAA,GACnD4V,KAAqBz3B,KAAK03B,IAAI9D,GAAoBlyB,QAAQoE,GAAgBpE,MAAAA;AAEhFkyB,QAAAA,MAAsB,MAAA;AACpB,gBAAM3mB,KAAS,CAAA;AACf,mBAASkB,KAAQ,GAAGA,KAAQspB,MACtB3xB,GAAgBqI,QAAWylB,GAAoBzlB,KADLA;AAI9ClB,YAAAA,GAAOlH,KAAKD,GAAgBqI,GAAAA;AAE9B,iBAAOlB;QACR,GATqB;MAUxB;AAEA,aAAO2mB;IACT;IAEA3E,kBAAkBD,IAAAA;AAChB,iBAAWjmB,MAAc3M,KAAK0yB,eAAAA;AAC5B,YAAI/lB,GAAWxB,OAAOynB;AACpB,iBAAOjmB;IAGb;IAEA8lB,sBAAAA;AACE,UAAI8I,KAAmB,CAAA;AAEvB,aADAv7B,KAAKw2B,UAAUtI,WAAWnN,CAAAA,OAAAA;AAAA,YAAA,EAACvhB,MAAEA,GAAAA,IAAMuhB;AAAA,eAAKwa,KAAmBA,GAAiB93B,OAAOjE,GAAKizB,oBAAAA,CAAAA;MAAsB,CAAA,GACvG8I;IACT;IAEA7I,iBAAAA;AACE,aAAO1yB,KAAKyyB,oBAAAA,EAAsBniB,IAAKwR,CAAAA,OAAUA,GAAMnV,UAAAA;IACzD;IAEAmmB,qBAAqBnmB,IAAAA;AACnB,UAAI4hB,KAAW;AACf,YAAMrI,KAAWlmB,KAAKw2B,UAAU3c,QAAAA;AAChC,eAAS9H,KAAQ,GAAGA,KAAQmU,GAAS5gB,QAAQyM,MAAS;AACpD,cAAA,EAAMvS,MAAEA,GAAAA,IAAS0mB,GAASnU,KACpBinB,KAAYx5B,GAAKszB,qBAAqBnmB,EAAAA;AAC5C,YAAIqsB;AACF,iBAAOzjB,GAAe,CAAEgZ,KAAWyK,GAAU,IAAIzK,KAAWyK,GAAU,EAAA,CAAA;AAExEzK,QAAAA,MAAY/uB,GAAK4qB,UAAAA;MACnB;IACF;IAEAoR,6BAA6B7uB,IAAAA;AAC3B,YAAM6I,KAAQxV,KAAK8yB,qBAAqBnmB,EAAAA;AACxC,aAAO3M,KAAKq4B,uBAAuB7iB,EAAAA;IACrC;IAEAimB,gCAAgC9uB,IAAAA;AAC9B,iBAAWmV,MAAS9hB,KAAKyyB,oBAAAA;AACvB,YAAI3Q,GAAMnV,eAAeA;AACvB,iBAAOmV;IAGb;IAEA4Z,4BAA4BjoB,IAAAA;AAC1B,UAAI8a,KAAW;AACf,YAAMoN,KAAS,CAAA;AAUf,aARA37B,KAAKkoB,UAAAA,EAAYjf,QAASie,CAAAA,OAAAA;AACxB,cAAM5hB,KAAS4hB,GAAMkD,UAAAA;AACjBlD,QAAAA,GAAMtG,aAAanN,EAAAA,KACrBkoB,GAAOhyB,KAAK,CAAE4kB,IAAUA,KAAWjpB,EAAAA,CAAAA,GAErCipB,MAAYjpB;MAAM,CAAA,GAGbq2B;IACT;IAEAC,2BAA2BnoB,IAAAA;AAAmC,UAAA,EAApBooB,WAAEA,GAAAA,IAAWx2B,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA,GACpDkpB,KAAW,GACX/Y,KAAQ,CAAA;AACZ,YAAMmmB,KAAS,CAAA;AAsBf,aAZA37B,KAAK6mB,UAAAA,EAAY5d,QAAS6Y,CAAAA,OAAAA;AACxB,cAAMxc,KAASwc,GAAMsI,UAAAA;AAAAA,SATT,SAAStI,IAAAA;AACrB,iBAAI+Z,KACK/Z,GAAMzV,aAAaoH,EAAAA,MAAmBooB,KAEtC/Z,GAAMlB,aAAanN,EAAAA;QAAAA,GAMlBqO,EAAAA,MACJtM,GAAM,OAAO+Y,KACf/Y,GAAM,KAAK+Y,KAAWjpB,KAEtBq2B,GAAOhyB,KAAK6L,KAAQ,CAAE+Y,IAAUA,KAAWjpB,EAAAA,CAAAA,IAG/CipB,MAAYjpB;MAAM,CAAA,GAGbq2B;IACT;IAEAzE,qBAAqB3I,IAAAA;AACnB,YAAMuN,KAAW97B,KAAKw2B,UAAU9G,6BAA6B9rB,KAAKsL,IAAI,GAAGqf,EAAAA,CAAAA;AACzE,UAAsB,QAAlBuN,GAAS/pB;AACX,eAAO+pB;AACF;AACL,cAAMvF,KAASv2B,KAAKkoB,UAAAA;AACpB,eAAO,EAAEnW,OAAOwkB,GAAOjxB,SAAS,GAAG0J,QAAQunB,GAAOA,GAAOjxB,SAAS,GAAG8kB,UAAAA,EAAAA;MACvE;IACF;IAEAiQ,qBAAqByB,IAAAA;AACnB,aAAO97B,KAAKw2B,UAAU9F,6BAA6BoL,GAAS/pB,OAAO+pB,GAAS9sB,MAAAA;IAC9E;IAEA+sB,0BAA0BxN,IAAAA;AACxB,aAAOhZ,GAAevV,KAAKk3B,qBAAqB3I,EAAAA,CAAAA;IAClD;IAEA8J,uBAAuB7iB,IAAAA;AAErB,UAAA,EADAA,KAAQD,GAAeC,EAAAA;AACX;AAEZ,YAAA,CAAQ8hB,IAAezG,EAAAA,IAAgBjhB,MAAMC,KAAK2F,EAAAA,GAC5C+hB,KAAgBv3B,KAAKk3B,qBAAqBI,EAAAA,GAC1C6C,KAAcn6B,KAAKk3B,qBAAqBrG,EAAAA;AAC9C,aAAOtb,GAAe,CAAEgiB,IAAe4C,EAAAA,CAAAA;IACzC;IAEA6B,uBAAuBC,IAAAA;AACrB,UAAI/D;AACJ+D,MAAAA,KAAgB1mB,GAAe0mB,EAAAA;AAC/B,YAAMhE,KAAej4B,KAAKq6B,qBAAqB4B,GAAc,EAAA;AAI7D,aAHKtmB,GAAiBsmB,EAAAA,MACpB/D,KAAgBl4B,KAAKq6B,qBAAqB4B,GAAc,EAAA,IAEnD1mB,GAAe,CAAE0iB,IAAcC,EAAAA,CAAAA;IACxC;IAEA3oB,UAAU7K,IAAAA;AACR,aAAO1E,KAAKw2B,UAAUjnB,UAAU7K,QAAAA,KAAAA,SAAAA,GAAU8xB,SAAAA;IAC5C;IAEA0F,WAAAA;AACE,aAAOl8B,KAAKkoB,UAAAA,EAAY5X,IAAK4W,CAAAA,OAAUA,GAAM1nB,IAAAA;IAC/C;IAEAqnB,YAAAA;AACE,YAAMD,KAAS,CAAA;AAMf,aAJAhX,MAAMC,KAAK7P,KAAKk8B,SAAAA,CAAAA,EAAYjzB,QAASzJ,CAAAA,OAAAA;AACnConB,QAAAA,GAAOjd,KAAAA,GAAQiG,MAAMC,KAAKrQ,GAAKqnB,UAAAA,KAAe,CAAA,CAAA,CAAA;MAAI,CAAA,GAG7CD;IACT;IAEA/L,aAAAA;AACE,aAAO7a,KAAKkoB,UAAAA,EAAYzkB,OAAOzD,KAAKk8B,SAAAA,CAAAA,EAAYz4B,OAAOzD,KAAK6mB,UAAAA,CAAAA;IAC9D;IAEAsV,yBAAAA;AACE,YAAM5F,KAAS,CAAA;AAEf,aADAv2B,KAAKw2B,UAAUtI,WAAYhH,CAAAA,OAAUqP,GAAO5sB,KAAKud,GAAMsM,aAAatM,GAAM1nB,KAAK4zB,mBAAAA,CAAAA,CAAAA,CAAAA,GACxE,IAAIpzB,KAAK4O,YAAY2nB,EAAAA;IAC9B;IAEAhoB,WAAAA;AACE,aAAOvO,KAAKw2B,UAAUjoB,SAAAA;IACxB;IAEAiB,SAAAA;AACE,aAAOxP,KAAKw2B,UAAUhnB,OAAAA;IACxB;IAEAoe,YAAAA;AACE,aAAOzc,KAAKO,UAAU1R,KAAKw2B,UAAU3c,QAAAA,EAAUvJ,IAAK4W,CAAAA,OAAU/V,KAAKpS,MAAMmoB,GAAM1nB,KAAKouB,UAAAA,CAAAA,CAAAA,CAAAA;IACtF;EAAA;AAGF,MAAMiN,KAAqB,SAAS3T,IAAAA;AAClC,UAAMtoB,KAAa,CAAA,GACb6U,KAAgByT,GAAMG,iBAAAA;AAI5B,WAHI5T,OACF7U,GAAW6U,MAAAA,OAEN7U;EACT;AAPA,MC9uBMw9B,KAAiB,SAAC/rB,IAAAA;AAA4B,QAApBzR,KAAUyG,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAG3C,WAAO,EAAEgL,QADTA,KAASkI,GAAgBlI,EAAAA,GACRzR,YAAAA,IAAYoM,MAFhB,SAAA;EAGf;AD0uBA,MC9tBMqxB,KAAyBA,CAACv8B,IAASrB,OAAAA;AACvC,QAAA;AACE,aAAO0S,KAAKpS,MAAMe,GAAQuM,aAAY,aAAA5I,OAAchF,EAAAA,CAAAA,CAAAA;IACrD,SAAQoU,IAAP;AACA,aAAO,CAAA;IACT;EAAA;AAgBa,MAAMypB,KAAN,cAAyBlvB,EAAAA;IACtC,OAAA,MAAa3I,IAAM8D,IAAAA;AACjB,YAAMkD,KAAS,IAAIzL,KAAKyE,IAAM8D,EAAAA;AAE9B,aADAkD,GAAO1M,MAAAA,GACA0M;IACT;IAEAmD,YAAYnK,IAAAA;AAAiC,UAAA,EAA3B83B,kBAAEA,GAAAA,IAAkBl3B,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AACvCwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKyE,OAAOA,IACZzE,KAAKu8B,mBAAmBA,IACxBv8B,KAAKu2B,SAAS,CAAA,GACdv2B,KAAKw8B,gBAAgB,CAAA,GACrBx8B,KAAKy8B,oBAAoB,CAAA;IAC3B;IAEAC,cAAAA;AACE,aAAOtG,GAASllB,SAASlR,KAAKu2B,MAAAA;IAChC;IAIAx3B,QAAAA;AACE,UAAA;AACEiB,aAAK28B,sBAAAA,GACLrd,GAAcgD,QAAQtiB,KAAK48B,kBAAkB58B,KAAKyE,IAAAA;AAClD,cAAM6b,KAAS7Y,EAASzH,KAAK48B,kBAAkB,EAAEh1B,aAAai1B,GAAAA,CAAAA;AAC9D,eAAOvc,GAAOE,SAAAA;AACZxgB,eAAK88B,YAAYxc,GAAOG,WAAAA;AAE1B,eAAOzgB,KAAK+8B,uCAAAA;MACd,UAAU;AACR/8B,aAAKg9B,sBAAAA;MACP;IACF;IAEAL,wBAAAA;AACE,aAAI38B,KAAKu8B,oBACPv8B,KAAK48B,mBAAmB58B,KAAKu8B,iBAAiBzf,UAAAA,KAAU,GACxD9c,KAAK48B,iBAAiB9b,gBAAgB,IAAA,GACtC9gB,KAAK48B,iBAAiBj0B,aAAa,sBAAsB,EAAA,GACzD3I,KAAK48B,iBAAiBh0B,MAAMq0B,UAAU,QAC/Bj9B,KAAKu8B,iBAAiBx8B,WAAWqU,aAAapU,KAAK48B,kBAAkB58B,KAAKu8B,iBAAiBW,WAAAA,MAElGl9B,KAAK48B,mBAAmBv0B,EAAY,EAAEvJ,SAAS,OAAO8J,OAAO,EAAEq0B,SAAS,OAAA,EAAA,CAAA,GACjEv4B,SAAS6G,KAAKhC,YAAYvJ,KAAK48B,gBAAAA;IAE1C;IAEAI,wBAAAA;AACE,aAAO11B,EAAWtH,KAAK48B,gBAAAA;IACzB;IAEAE,YAAYp2B,IAAAA;AACV,cAAQA,GAAKD,UAAAA;QACX,KAAKG,KAAK6D;AACR,cAAA,CAAKzK,KAAKm9B,wBAAwBz2B,EAAAA;AAEhC,mBADA1G,KAAKo9B,uBAAuB12B,EAAAA,GACrB1G,KAAKq9B,gBAAgB32B,EAAAA;AAE9B;QACF,KAAKE,KAAKC;AAER,iBADA7G,KAAKs9B,sBAAsB52B,EAAAA,GACpB1G,KAAKu9B,eAAe72B,EAAAA;MAAAA;IAEjC;IAEA02B,uBAAuB12B,IAAAA;AACrB,YAAM5G,KAAU4G,GAAK3G;AACrB,UAAID,OAAYE,KAAKw9B,uBAAuBx9B,KAAKy9B,eAAe/2B,GAAKW,eAAAA;AACnE,eAAOrH,KAAK09B,2BAA2B,IAAA;AAClC,UAAI59B,OAAYE,KAAK48B,oBAAoB58B,KAAKy9B,eAAe39B,EAAAA,GAAU;AAAA,YAAA69B;AAC5E,cAAM/+B,KAAaoB,KAAK49B,mBAAmB99B,EAAAA,GACrCP,KAAiBS,KAAK69B,uBAAuB/9B,EAAAA;AAC9C8R,WAAehT,IAAAA,UAAU++B,KAAE39B,KAAK89B,iBAAAA,WAAYH,KAAAA,SAAjBA,GAAmB/+B,UAAAA,MACjDoB,KAAK89B,eAAe99B,KAAK+9B,oCAAoCn/B,IAAYkB,IAASP,EAAAA,GAClFS,KAAKw9B,sBAAsB19B;MAE/B;IACF;IAEAw9B,sBAAsBx9B,IAAAA;AACpB,YAAMk+B,KAAwBh+B,KAAKy9B,eAAe39B,EAAAA,GAC5Cm+B,KAA8Bh3B,EAAoBjH,KAAKw9B,qBAAqB19B,EAAAA;AAElF,UAAIk+B,MAAAA,CAA0Bh+B,KAAKy9B,eAAe39B,GAAQgK,UAAAA,GAAAA;AACxD,YAAA,CAAK9J,KAAKm9B,wBAAwBr9B,GAAQgK,UAAAA,KAAAA,CAAgB9J,KAAKy9B,eAAe39B,GAAQimB,iBAAAA,GAAoB;AACxG,gBAAMnnB,KAAaoB,KAAK49B,mBAAmB99B,EAAAA,GACrCP,KAAiBS,KAAK69B,uBAAuB/9B,EAAAA;AACnD,cAAIA,GAAQgK,YAAY;AACtB,gBAAMm0B,MAA+BrsB,GAAehT,IAAYoB,KAAK89B,aAAal/B,UAAAA;AAIhF,qBAAOoB,KAAK09B,2BAA2B,IAAA;AAHvC19B,iBAAK89B,eAAe99B,KAAK+9B,oCAAoCn/B,IAAYkB,IAASP,EAAAA,GAClFS,KAAKw9B,sBAAsB19B;UAI/B;QACF;MAAA,WACSE,KAAKw9B,uBAAAA,CAAwBS,MAAAA,CAAgCD,IAAuB;AAC7F,cAAME,KAAqBl+B,KAAKm+B,uBAAuBr+B,EAAAA;AACvD,YAAIo+B;AACF,iBAAOl+B,KAAKs9B,sBAAsBY,EAAAA;AAElCl+B,aAAK89B,eAAe99B,KAAKo+B,iBAAAA,GACzBp+B,KAAKw9B,sBAAsB;MAE/B;IACF;IAEAW,uBAAuBr+B,IAAAA;AACrB,UAAA,EAAIu+B,eAAEA,GAAAA,IAAkBv+B;AACxB,aAAOu+B,MAAiBA,OAAkBr+B,KAAK48B,oBAAkB;AAC/D,YAAI58B,KAAKy9B,eAAeY,EAAAA,KAAkBr+B,KAAKw8B,cAAcvyB,SAASo0B,EAAAA;AACpE,iBAAOA;AAEPA,QAAAA,KAAgBA,GAAcA;MAElC;AACA,aAAO;IACT;IAEAhB,gBAAgB32B,IAAAA;AACd,UAAI2J,KAAS3J,GAAKmC;AACuC,UAAAy1B;AAApDC,SAAkC73B,GAAK3G,UAAAA,MAC1CsQ,KAASoI,GAA0BpI,EAAAA,GAC/BmuB,GAA6CF,UAArBA,KAAC53B,GAAKW,oBAAAA,WAAei3B,KAAAA,SAApBA,GAAsBl1B,WAAAA,MACjDiH,KAASouB,GAA4BpuB,EAAAA;AAGzC,aAAOrQ,KAAK09B,2BAA2BrtB,IAAQrQ,KAAK0+B,kBAAkBh4B,GAAK3G,UAAAA,CAAAA;IAC7E;IAEAw9B,eAAez9B,IAAAA;AACb,UAAIlB;AACJ,UAAI2L,EAAwBzK,EAAAA,GAAU;AAEpC,YADAlB,KAAay9B,GAAuBv8B,IAAS,YAAA,GACzC6T,OAAOC,KAAKhV,EAAAA,EAAY0G,QAAQ;AAClC,gBAAMgxB,KAAiBt2B,KAAK0+B,kBAAkB5+B,EAAAA;AAC9CE,eAAK2+B,+BAA+B//B,IAAY03B,EAAAA,GAEhDx2B,GAAQ8f,YAAY;QACtB;AACA,eAAO5f,KAAKy8B,kBAAkB9yB,KAAK7J,EAAAA;MACrC;AACE,cAAQhB,EAAQgB,EAAAA,GAAAA;QACd,KAAK;AAIH,iBAHKE,KAAK4+B,UAAU9+B,EAAAA,KAAaE,KAAKy9B,eAAe39B,GAAQo9B,WAAAA,KAC3Dl9B,KAAK09B,2BAA2B,MAAM19B,KAAK0+B,kBAAkB5+B,EAAAA,CAAAA,GAExDE,KAAKy8B,kBAAkB9yB,KAAK7J,EAAAA;QACrC,KAAK;AACHlB,UAAAA,KAAa,EAAEgE,KAAK9C,GAAQuM,aAAa,KAAA,GAAQ6e,aAAa,QAAA;AAC9D,gBAAMvd,MArKY7N,CAAAA,OAAAA;AAC1B,kBAAMolB,KAAQplB,GAAQuM,aAAa,OAAA,GAC7B+Y,KAAStlB,GAAQuM,aAAa,QAAA,GAC9BwyB,KAAa,CAAA;AAOnB,mBANI3Z,OACF2Z,GAAW3Z,QAAQtkB,SAASskB,IAAO,EAAA,IAEjCE,OACFyZ,GAAWzZ,SAASxkB,SAASwkB,IAAQ,EAAA,IAEhCyZ;UAAU,GA2JyB/+B,EAAAA;AAClC,qBAAWyE,MAAOoJ,IAAQ;AACxB,kBAAMnJ,KAAQmJ,GAAOpJ;AACrB3F,YAAAA,GAAW2F,MAAOC;UACpB;AAEA,iBADAxE,KAAK2+B,+BAA+B//B,IAAYoB,KAAK0+B,kBAAkB5+B,EAAAA,CAAAA,GAChEE,KAAKy8B,kBAAkB9yB,KAAK7J,EAAAA;QACrC,KAAK;AACH,cAAIE,KAAK8+B,oBAAoBh/B,EAAAA;AAC3B,mBAAOE,KAAK09B,2BAA2BhqB,EAAc9H,iBAAAA;AAEvD;QACF,KAAK;AACH,cAAI5L,KAAK8+B,oBAAoBh/B,EAAAA;AAC3B,mBAAOE,KAAK09B,2BAA2BhqB,EAAc/H,kBAAAA;MAAAA;IAK/D;IAIAoyB,oCAAoCn/B,IAAYkB,IAAAA;AAA8B,UAArBP,KAAc8F,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACxErF,WAAKw8B,cAAc7yB,KAAK7J,EAAAA;AACxB,YAAMonB,KA3MiB,WAAA;AAEzB,eAAO,EAAE1nB,MADI,CAAA,GACEZ,YAFqByG,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAEZ9F,gBAF8B8F,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,EAAA;MAG9D,EAwMqCzG,IAAYW,EAAAA;AAE7C,aADAS,KAAKu2B,OAAO5sB,KAAKud,EAAAA,GACVA;IACT;IAEAkX,mBAAAA;AACE,aAAOp+B,KAAK+9B,oCAAoC,CAAA,GAAI,IAAA;IACtD;IAEAL,2BAA2BrtB,IAAQzR,IAAAA;AACjC,aAAOoB,KAAK++B,YAAY3C,GAAe/rB,IAAQzR,EAAAA,CAAAA;IACjD;IAEA+/B,+BAA+BhyB,IAAY/N,IAAAA;AACzC,aAAOoB,KAAK++B,YA9NW,SAACpyB,IAAAA;AAE1B,eAAO,EAAEA,YAAAA,IAAY/N,YAF2ByG,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAElB2F,MADpB,aAAA;MAEf,EA2N+C2B,IAAY/N,EAAAA,CAAAA;IACzD;IAEAmgC,YAAYjd,IAAAA;AAIV,aAH2B,MAAvB9hB,KAAKu2B,OAAOjxB,UACdtF,KAAKo+B,iBAAAA,GAEAp+B,KAAKu2B,OAAOv2B,KAAKu2B,OAAOjxB,SAAS,GAAG9F,KAAKmK,KAAKmY,EAAAA;IACvD;IAEAkd,0BAA0B3uB,IAAQ0B,IAAAA;AAChC,YAAA,EAAMvS,MAAEA,GAAAA,IAASQ,KAAKu2B,OAAOxkB,KACvB+P,KAAQtiB,GAAKA,GAAK8F,SAAS;AAEjC,UAAoB,cAAhBwc,QAAAA,KAAAA,SAAAA,GAAO9W;AAGT,eAAOxL,GAAKmK,KAAKyyB,GAAe/rB,EAAAA,CAAAA;AAFhCyR,MAAAA,GAAMzR,UAAUA;IAIpB;IAEA4uB,2BAA2B5uB,IAAQ0B,IAAAA;AACjC,YAAA,EAAMvS,MAAEA,GAAAA,IAASQ,KAAKu2B,OAAOxkB,KACvB+P,KAAQtiB,GAAK;AAEnB,UAAoB,cAAhBsiB,QAAAA,KAAAA,SAAAA,GAAO9W;AAGT,eAAOxL,GAAK0/B,QAAQ9C,GAAe/rB,EAAAA,CAAAA;AAFnCyR,MAAAA,GAAMzR,SAASA,KAASyR,GAAMzR;IAIlC;IAIAquB,kBAAkB5+B,IAAAA;AAChB,UAAI0E;AACJ,YAAM5F,KAAa,CAAA;AACnB,iBAAWkrB,MAAapW,GAAuB;AAC7C,cAAMyrB,KAAazrB,EAAsBoW;AACzC,YACEqV,GAAWrgC,WACXgH,EAA2BhG,IAAS,EAClCkF,kBAAkBm6B,GAAWrgC,SAC7B6H,WAAW3G,KAAK48B,iBAAAA,CAAAA;AAGlBh+B,UAAAA,GAAWkrB,MAAAA;iBACFqV,GAAW1zB,QAAAA;AAEpB,cADAjH,KAAQ26B,GAAW1zB,OAAO3L,EAAAA,GACtB0E,IAAO;AACT,gBAAI46B,KAAAA;AACJ,uBAAWC,MAAgBr/B,KAAKs/B,0BAA0Bx/B,EAAAA;AACxD,kBAAIq/B,GAAW1zB,OAAO4zB,EAAAA,MAAkB76B,IAAO;AAC7C46B,gBAAAA,KAAAA;AACA;cACF;AAEGA,YAAAA,OACHxgC,GAAWkrB,MAAatlB;UAE5B;QAAA;AACS26B,UAAAA,GAAW5Y,kBACpB/hB,KAAQ1E,GAAQ8I,MAAMu2B,GAAW5Y,gBAC7B/hB,OACF5F,GAAWkrB,MAAatlB;MAG9B;AAEA,UAAI+F,EAAwBzK,EAAAA,GAAU;AACpC,cAAM6N,KAAS0uB,GAAuBv8B,IAAS,YAAA;AAC/C,mBAAWyE,MAAOoJ;AAChBnJ,UAAAA,KAAQmJ,GAAOpJ,KACf3F,GAAW2F,MAAOC;MAEtB;AAEA,aAAO5F;IACT;IAEAg/B,mBAAmB99B,IAAAA;AACjB,YAAMlB,KAAa,CAAA;AACnB,aAAOkB,MAAWA,OAAYE,KAAK48B,oBAAkB;AACnD,mBAAW9S,MAAapW,GAAwB;AAC9C,gBAAM6rB,KAAa7rB,EAAuBoW;AAEK,cAAA0V;AAD/C,cAAA,UAAID,GAAWxgC;AACb,gBAAID,EAAQgB,EAAAA,MAAay/B,GAAWzgC;AAAAA,eACf,UAAf0gC,KAAAD,GAAW1/B,SAAAA,WAAI2/B,MAAfA,GAAAz5B,KAAAw5B,IAAkBz/B,EAAAA,KAAAA,CAAay/B,GAAW1/B,UAC5CjB,GAAW+K,KAAKmgB,EAAAA,GACZyV,GAAW3/B,iBACbhB,GAAW+K,KAAK41B,GAAW3/B,aAAAA;;QAKrC;AACAE,QAAAA,KAAUA,GAAQC;MACpB;AACA,aAAOnB,GAAW6gC,QAAAA;IACpB;IAEA5B,uBAAuB/9B,IAAAA;AACrB,YAAMlB,KAAa,CAAA,GACb86B,KAAc/lB,OAAO8F,OAAO/F,CAAAA,EAAwBsH,KAAK0kB,CAAAA,OAAYA,GAAS5gC,YAAYA,EAAQgB,EAAAA,CAAAA;AASxG,eAR0B45B,QAAAA,KAAAA,SAAAA,GAAan6B,mBAAkB,CAAA,GAEvC0J,QAAS6gB,CAAAA,OAAAA;AACrBhqB,QAAAA,GAAQ8gB,aAAakJ,EAAAA,MACvBlrB,GAAWkrB,MAAahqB,GAAQuM,aAAayd,EAAAA;MAC/C,CAAA,GAGKlrB;IACT;IAEA0gC,0BAA0Bx/B,IAAAA;AACxB,YAAM6/B,KAAY,CAAA;AAClB,aAAO7/B,MAAWA,OAAYE,KAAK48B,oBAAkB;AACnD,cAAMt0B,KAAMxJ,EAAQgB,EAAAA;AAChB2J,UAAAA,EAAmBQ,SAAS3B,EAAAA,KAC9Bq3B,GAAUh2B,KAAK7J,EAAAA,GAEjBA,KAAUA,GAAQC;MACpB;AACA,aAAO4/B;IACT;IAIAlC,eAAe39B,IAAAA;AACb,WAAIA,QAAAA,KAAAA,SAAAA,GAAS2G,cAAaG,KAAKC,gBAAAA,CAC3B0D,EAAwBzK,EAAAA,KAAAA,CACxBgG,EAA2BhG,IAAS,EAAEkF,kBAAkB,MAAM2B,WAAW3G,KAAK48B,iBAAAA,CAAAA;AAElF,eAAOnzB,EAAAA,EAAmBQ,SAASnL,EAAQgB,EAAAA,CAAAA,KACI,YAA7CiM,OAAOC,iBAAiBlM,EAAAA,EAASm9B;IACrC;IAEAE,wBAAwBz2B,IAAAA;AACtB,WAAIA,QAAAA,KAAAA,SAAAA,GAAMD,cAAaG,KAAK6D;AAAW;AACvC,UAAA,CAAKm1B,GAA+Bl5B,GAAKmC,IAAAA;AAAO;AAChD,YAAA,EAAM9I,YAAEA,IAAUsH,iBAAEA,IAAe61B,aAAEA,GAAAA,IAAgBx2B;AACrD,aAAIm5B,GAA0B9/B,GAAWsH,eAAAA,KAAAA,CAAqBrH,KAAKy9B,eAAe19B,GAAWsH,eAAAA,KACzFk3B,GAAkCx+B,EAAAA,IAAAA,SADtC,CAEQsH,MAAmBrH,KAAKy9B,eAAep2B,EAAAA,KAAAA,CAAqB61B,MAAel9B,KAAKy9B,eAAeP,EAAAA;IACzG;IAEA0B,UAAU9+B,IAAAA;AACR,aAA4B,SAArBhB,EAAQgB,EAAAA,KAAqBE,KAAKy9B,eAAe39B,GAAQC,UAAAA,KAAeD,GAAQC,WAAWwoB,cAAczoB;IAClH;IAEAg/B,oBAAoBh/B,IAAAA;AAClB,UAAI4T,EAAchI,uBAAuB;AAAA,YAAAo0B;AACvC,cAAMxrB,KAAiC,UAA1BwrB,KAAGhgC,GAAQuH,oBAAAA,WAAey4B,KAAAA,SAAvBA,GAAyB12B;AACzC,eAAOkL,MAAW,KAAKzU,KAAKyU,EAAAA;MAC9B;AACE,aAAOxU,GAAQuH;IAEnB;IAIA01B,yCAAAA;AACE,YAAMgD,KAAgB//B,KAAKggC,+BAAAA;AAE3B,eAASjuB,KAAQ,GAAGA,KAAQ/R,KAAKu2B,OAAOjxB,QAAQyM,MAAS;AACvD,cAAMkuB,KAASjgC,KAAKkgC,+BAA+BnuB,EAAAA;AAC/CkuB,QAAAA,OACEA,GAAOE,MAA0B,IAApBJ,GAAcI,OAC7BngC,KAAKi/B,2BAA2B,MAAMltB,EAAAA,GAGpCkuB,GAAOG,SAAgC,IAAvBL,GAAcK,UAChCpgC,KAAKg/B,0BAA0B,MAAMjtB,EAAAA;MAG3C;IACF;IAEAmuB,+BAA+BnuB,IAAAA;AAC7B,YAAMjS,KAAUE,KAAKw8B,cAAczqB;AACnC,UAAIjS,MACEA,GAAQsJ,eAAAA,CACLK,EAAAA,EAAmBQ,SAASnL,EAAQgB,EAAAA,CAAAA,KAAAA,CAAcE,KAAKy8B,kBAAkBxyB,SAASnK,EAAAA;AACrF,eAAOugC,GAAsBvgC,EAAAA;IAIrC;IAEAkgC,iCAAAA;AACE,YAAMlgC,KAAUuI,EAAYqL,EAAuB7U,QAAQC,OAAAA;AAE3D,aADAkB,KAAK48B,iBAAiBrzB,YAAYzJ,EAAAA,GAC3BugC,GAAsBvgC,EAAAA;IAC/B;EAAA;AAKF,MAAMy+B,KAAoC,SAASz+B,IAAAA;AACjD,UAAA,EAAMwgC,YAAEA,GAAAA,IAAev0B,OAAOC,iBAAiBlM,EAAAA;AAC/C,WAAO,CAAE,OAAO,YAAY,UAAA,EAAamK,SAASq2B,EAAAA;EACpD;AAHA,MAKMT,KAA6Bn5B,CAAAA,OAASA,MAAAA,CAAS83B,GAAyB93B,GAAK0C,WAAAA;AALnF,MAOMi3B,KAAwB,SAASvgC,IAAAA;AACrC,UAAM8I,KAAQmD,OAAOC,iBAAiBlM,EAAAA;AACtC,QAAsB,YAAlB8I,GAAMq0B;AACR,aAAO,EAAEkD,KAAKv/B,SAASgI,GAAM23B,SAAAA,GAAYH,QAAQx/B,SAASgI,GAAM43B,YAAAA,EAAAA;EAEpE;AAZA,MAcM3D,KAAa,SAASn2B,IAAAA;AAC1B,WAAsB,YAAlB5H,EAAQ4H,EAAAA,IACHqB,WAAW04B,gBAEX14B,WAAW24B;EAEtB;AApBA,MAwBMjC,KAA+BpuB,CAAAA,OAAWA,GAAOnM,QAAQ,IAAIiK,OAAAA,IAAM1K,OAAK+U,GAA2BE,QAAAA,GAAAA,CAAAA,GAAY,EAAA;AAxBrH,MA0BMknB,KAAkCvvB,CAAAA,OAAW,IAAIlC,OAAAA,IAAM1K,OAAK+U,GAA2BE,QAAU,IAAA,CAAA,EAAE7Y,KAAKwQ,EAAAA;AA1B9G,MA4BMmuB,KAA4BnuB,CAAAA,OAAW,MAAMxQ,KAAKwQ,EAAAA;AA5BxD,MCzbMswB,KAA+B,CACnC,mBACA,gBACA,uBACA,qBACA,yBACA,UAAA;ADmbF,MCjbMC,KAAgC;ADibtC,MChbMC,KAA4B,IAAAp9B,OAAOm9B,IAAgC,GAAA;ADgbzE,MC9aME,KAAsB,IAAI3yB,OAAO,gBAAgB,GAAA;AD8avD,MC5aM4yB,KAAc,EAClB,oBAAoB,SAASC,IAAAA;AAC3B,QAAIt8B;AACJ,QAAIs8B,cAAwB5K;AAC1B1xB,MAAAA,KAAWs8B;SACN;AAAA,UAAA,EAAIA,cAAwBC;AAGjC,cAAM,IAAIjzB,MAAM,uBAAA;AAFhBtJ,MAAAA,KAAW43B,GAAWv9B,MAAMiiC,GAAaphB,SAAAA,EAAW8c,YAAAA;IAGtD;AAEA,WAAOh4B,GAASy3B,uBAAAA,EAAyB1qB,aAAAA;EAC1C,GAED,aAAa,SAASuvB,IAAAA;AACpB,QAAIlhC;AACJ,QAAIkhC,cAAwB5K;AAC1Bt2B,MAAAA,KAAU8nB,GAAaC,OAAOmZ,EAAAA;SACzB;AAAA,UAAA,EAAIA,cAAwBC;AAGjC,cAAM,IAAIjzB,MAAM,uBAAA;AAFhBlO,MAAAA,KAAUkhC,GAAalkB,UAAAA,IAAU;IAGnC;AA0BA,WAvBAlN,MAAMC,KAAK/P,GAAQmhB,iBAvCe,6BAAA,CAAA,EAuCkChY,QAASi4B,CAAAA,OAAAA;AAC3E55B,QAAW45B,EAAAA;IAAG,CAAA,GAIhBP,GAA6B13B,QAAS6gB,CAAAA,OAAAA;AACpCla,YAAMC,KAAK/P,GAAQmhB,iBAAgBxd,IAAAA,OAAKqmB,IAAAA,GAAAA,CAAAA,CAAAA,EAAe7gB,QAASi4B,CAAAA,OAAAA;AAC9DA,QAAAA,GAAGpgB,gBAAgBgJ,EAAAA;MAAU,CAAA;IAC7B,CAAA,GAIJla,MAAMC,KAAK/P,GAAQmhB,iBAAiB4f,EAAAA,CAAAA,EAA+B53B,QAASi4B,CAAAA,OAAAA;AAC1E,UAAA;AACE,cAAMtiC,KAAauS,KAAKpS,MAAMmiC,GAAG70B,aAAau0B,EAAAA,CAAAA;AAC9CM,QAAAA,GAAGpgB,gBAAgB8f,EAAAA;AACnB,mBAAWniC,MAAQG,IAAY;AAC7B,gBAAM4F,KAAQ5F,GAAWH;AACzByiC,UAAAA,GAAGv4B,aAAalK,IAAM+F,EAAAA;QACxB;MACF,SAASqO,IAAP;MAAe;IAAA,CAAA,GAGZ/S,GAAQ8f,UAAU1b,QAAQ48B,IAAqB,EAAA;EACxD,EAAA;AAAA,MAAA,KAAA,OAAA,OAAA,EAAA,WAAA,KAAA,CAAA;ACrEa,MAAMK,KAAN,cAAgC/zB,EAAAA;IAC7CwB,YAAYwyB,IAAmBz0B,IAAAA;AAC7BkC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKohC,oBAAoBA,IACzBphC,KAAK2M,aAAaA,IAClB3M,KAAKmL,KAAKnL,KAAK2M,WAAWxB,IAC1BnL,KAAKrB,OAAOqB,KAAK2M,WAAWhO;IAC9B;IAEA6D,SAAAA;AACE,aAAOxC,KAAKohC,kBAAkBC,2BAA2BrhC,KAAK2M,UAAAA;IAChE;EAAA;AAGFw0B,KAAkB5kB,YAAY,yBAAA,GAC9B4kB,GAAkB5kB,YAAY,yBAAA,GAC9B4kB,GAAkB5kB,YAAY,yBAAA,GAC9B4kB,GAAkB5kB,YAAY,0BAAA,GAC9B4kB,GAAkB5kB,YAAY,0BAAA,GAC9B4kB,GAAkB5kB,YAAY,sBAAA,GAC9B4kB,GAAkB5kB,YAAY,0BAAA,GAC9B4kB,GAAkB5kB,YAAY,mBAAA,GAC9B4kB,GAAkB5kB,YAAY,oBAAA,GAC9B4kB,GAAkB5kB,YAAY,wBAAA,GAC9B4kB,GAAkB5kB,YAAY,wBAAA,GAC9B4kB,GAAkB5kB,YAAY,iCAAA,GAC9B4kB,GAAkB5kB,YAAY,yBAAA,GAC9B4kB,GAAkB5kB,YAAY,2BAAA,GAC9B4kB,GAAkB5kB,YAAY,oBAAA,GAC9B4kB,GAAkB5kB,YAAY,oBAAA,GAC9B4kB,GAAkB5kB,YAAY,wBAAA,GAC9B4kB,GAAkB5kB,YAAY,8BAAA,GAC9B4kB,GAAkB5kB,YAAY,8BAAA;AChCf,MAAM+kB,KAAN,cAAgCl0B,EAAAA;IAC7CwB,cAAAA;AAA8B,UAAlBvQ,KAAWgH,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACxBwJ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKuhC,qBAAqB,CAAA,GAC1B3xB,MAAMC,KAAKxR,EAAAA,EAAa4K,QAAS0D,CAAAA,OAAAA;AAC/B3M,aAAKwhC,iBAAiB70B,EAAAA;MAAW,CAAA;IAErC;IAEA+lB,iBAAAA;AACE,YAAM7hB,KAAS,CAAA;AACf,iBAAW1F,MAAMnL,KAAKuhC,oBAAoB;AACxC,cAAM50B,KAAa3M,KAAKuhC,mBAAmBp2B;AAC3C0F,QAAAA,GAAOlH,KAAKgD,EAAAA;MACd;AACA,aAAOkE;IACT;IAEA2wB,iBAAiB70B,IAAAA;AAIf,aAHK3M,KAAKuhC,mBAAmB50B,GAAWxB,QACtCnL,KAAKuhC,mBAAmB50B,GAAWxB,MAAM,IAAIg2B,GAAkBnhC,MAAM2M,EAAAA,IAEhE3M,KAAKuhC,mBAAmB50B,GAAWxB;IAC5C;IAEAs2B,oBAAoB90B,IAAAA;AAClB,aAAOA,GAAWxB,MAAMnL,KAAKuhC;IAC/B;IAEAF,2BAA2B10B,IAAAA;AACiB,UAAA+e,IAAAC;AAA1C,UAAI3rB,KAAKyhC,oBAAoB90B,EAAAA;AAC3B,eAAoB+e,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAAgD,UAAhDC,KAAbD,GAAegW,mDAAAA,WAA8C/V,KAAAA,SAA7DA,GAAA5lB,KAAA2lB,IAAgE/e,EAAAA;IAE3E;IAEAg1B,mBAAmBh1B,IAAAA;AACjB,YAAMi1B,KAAoB5hC,KAAKuhC,mBAAmB50B,GAAWxB;AAE7D,aAAA,OADOnL,KAAKuhC,mBAAmB50B,GAAWxB,KACnCy2B;IACT;EAAA;AC1Ca,MAAMC,KAAN,MAAMA;IACnBjzB,YAAYkzB,IAAAA;AACV9hC,WAAK8hC,cAAcA,IACnB9hC,KAAK0E,WAAW1E,KAAK8hC,YAAYp9B;AACjC,YAAMq9B,KAAgB/hC,KAAK8hC,YAAYE,iBAAAA;AACvChiC,WAAKs3B,gBAAgByK,GAAc,IACnC/hC,KAAK6wB,cAAckR,GAAc,IAEjC/hC,KAAKu3B,gBAAgBv3B,KAAK0E,SAASwyB,qBAAqBl3B,KAAKs3B,aAAAA,GAC7Dt3B,KAAKm6B,cAAcn6B,KAAK0E,SAASwyB,qBAAqBl3B,KAAK6wB,WAAAA,GAE3D7wB,KAAKknB,QAAQlnB,KAAK0E,SAAS+xB,gBAAgBz2B,KAAKm6B,YAAYpoB,KAAAA,GAC5D/R,KAAKg1B,iBAAiBh1B,KAAKknB,MAAM8N,eAAAA,GACjCh1B,KAAKiiC,oBAAoBjiC,KAAKknB,MAAM1nB,KAAK8yB,oBAAoBtyB,KAAKm6B,YAAYnrB,SAAS,CAAA,GACvFhP,KAAKkiC,gBAAgBliC,KAAKknB,MAAM1nB,KAAK8yB,oBAAoBtyB,KAAKm6B,YAAYnrB,MAAAA;IAC5E;IAEAmzB,yBAAAA;AACE,aAAIniC,KAAKknB,MAAMmN,cAAAA,KAAmBr0B,KAAKknB,MAAM2N,WAAAA,KAAAA,CAAiB70B,KAAKknB,MAAMpN,QAAAA,IAClC,MAA9B9Z,KAAKu3B,cAAcvoB,SAEnBhP,KAAKg1B,kBAAyC,SAAvBh1B,KAAKkiC;IAEvC;IAEAE,4BAAAA;AACE,aACEpiC,KAAKknB,MAAMmN,cAAAA,KAAAA,CACVr0B,KAAKknB,MAAM2N,WAAAA,MACX70B,KAAKg1B,kBAAyC,SAAvBh1B,KAAKkiC,iBAAqD,SAA3BliC,KAAKiiC;IAEhE;IAEAI,0BAAAA;AACE,aAAOriC,KAAKknB,MAAMmN,cAAAA,KAAmBr0B,KAAKknB,MAAM2N,WAAAA,KAAgB70B,KAAKknB,MAAMpN,QAAAA;IAC7E;IAEAwoB,wBAAAA;AACE,aAAOtiC,KAAKknB,MAAM2N,WAAAA,KAA8C,MAA9B70B,KAAKu3B,cAAcvoB,UAAAA,CAAiBhP,KAAKknB,MAAMpN,QAAAA;IACnF;IAEAyoB,iCAAAA;AACE,aAAOviC,KAAKknB,MAAMmN,cAAAA,KAAAA,CAAoBr0B,KAAKknB,MAAM2N,WAAAA,KAAgB70B,KAAKknB,MAAMpN,QAAAA;IAC9E;EAAA;ACjBa,MAAM0oB,KAAN,cAA0Bp1B,EAAAA;IACvCwB,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK0E,WAAW,IAAI0xB,MACpBp2B,KAAK3B,cAAc,CAAA,GACnB2B,KAAKyiC,oBAAoB,CAAA,GACzBziC,KAAK0iC,WAAW;IAClB;IAEA1a,YAAYtjB,IAAAA;AAC8B,UAAAgnB,IAAAiX;AAAxC,UAAA,CAAKj+B,GAAS6K,UAAUvP,KAAK0E,QAAAA;AAI3B,eAHA1E,KAAK0E,WAAWA,IAChB1E,KAAK4iC,mBAAAA,GACL5iC,KAAK0iC,YACehX,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAA8B,UAA9BiX,KAAbjX,GAAemX,iCAAAA,WAA4BF,KAAAA,SAA3CA,GAAA58B,KAAA2lB,IAA8ChnB,EAAAA;IAEzD;IAIAo+B,cAAAA;AACE,aAAO,EACLp+B,UAAU1E,KAAK0E,UACfq9B,eAAe/hC,KAAKgiC,iBAAAA,EAAAA;IAExB;IAEAe,aAAYhiB,IAAAA;AAA8B,UAAA6L,IAAAoW,IAAAC,IAAAC;AAAA,UAAA,EAA7Bx+B,UAAEA,IAAQq9B,eAAEA,GAAAA,IAAehhB;AAItC,aAAA,UAHA6L,KAAAA,KAAKhB,aAAAA,WAAQgB,MAA6B,UAA7BoW,KAAbpW,GAAeuW,gCAAAA,WAA2BH,MAA1CA,GAAAj9B,KAAA6mB,EAAAA,GACA5sB,KAAKgoB,YAAwB,QAAZtjB,KAAmBA,KAAW,IAAI0xB,IAAAA,GACnDp2B,KAAKojC,aAA8B,QAAjBrB,KAAwBA,KAAgB,CAAE,GAAG,CAAA,CAAA,GAC3CkB,UAApBA,KAAOjjC,KAAK4rB,aAAAA,WAAQqX,MAAAA,UAAAC,KAAbD,GAAeI,+BAAAA,WAA0BH,KAAAA,SAAzCA,GAAAn9B,KAAAk9B,EAAAA;IACT;IAIAK,WAAW9jC,IAAAA;AAAqD,UAAA,EAA/C+jC,gBAAEA,GAAAA,IAAgBl+B,UAAAC,SAAA,KAAA,WAAAD,UAAAE,KAAAF,UAAG,KAAA,EAAEk+B,gBAAAA,KAAgB;AACtD,YAAMxB,KAAgB/hC,KAAKgiC,iBAAAA;AAC3BhiC,WAAKgoB,YAAYhoB,KAAK0E,SAASszB,kBAAkBx4B,IAAMuiC,EAAAA,CAAAA;AAEvD,YAAMzK,KAAgByK,GAAc,IAC9BlR,KAAcyG,KAAgB93B,GAAK4qB,UAAAA;AAKzC,aAHImZ,MACFvjC,KAAKojC,aAAavS,EAAAA,GAEb7wB,KAAKwjC,iCAAiC,CAAElM,IAAezG,EAAAA,CAAAA;IAChE;IAEA4S,cAAAA;AAAiC,UAArBvc,KAAK7hB,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAA,KAAG,IAAIguB;AACtB,YAAM3uB,KAAW,IAAI0xB,GAAS,CAAElP,EAAAA,CAAAA;AAChC,aAAOlnB,KAAK0jC,eAAeh/B,EAAAA;IAC7B;IAEAg/B,iBAAAA;AAA0C,UAA3Bh/B,KAAQW,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAA,KAAG,IAAI+wB;AAC5B,YAAM2L,KAAgB/hC,KAAKgiC,iBAAAA;AAC3BhiC,WAAKgoB,YAAYhoB,KAAK0E,SAASuyB,sBAAsBvyB,IAAUq9B,EAAAA,CAAAA;AAE/D,YAAMzK,KAAgByK,GAAc,IAC9BlR,KAAcyG,KAAgB5yB,GAAS0lB,UAAAA;AAG7C,aADApqB,KAAKojC,aAAavS,EAAAA,GACX7wB,KAAKwjC,iCAAiC,CAAElM,IAAezG,EAAAA,CAAAA;IAChE;IAEA8S,aAAatzB,IAAQ9H,IAAAA;AACnB,YAAM3J,KAAaoB,KAAK4jC,yBAAAA,GAClBpkC,KAAOuxB,GAAKsE,4BAA4BhlB,IAAQzR,EAAAA;AACtD,aAAOoB,KAAKsjC,WAAW9jC,IAAM+I,EAAAA;IAC/B;IAEAs7B,mBAAAA;AACE,YAAM9B,KAAgB/hC,KAAKgiC,iBAAAA;AAC3BhiC,WAAKgoB,YAAYhoB,KAAK0E,SAAS40B,wBAAwByI,EAAAA,CAAAA;AAEvD,YAAMzK,KAAgByK,GAAc,IAC9BlR,KAAcyG,KAAgB;AAGpC,aADAt3B,KAAKojC,aAAavS,EAAAA,GACX7wB,KAAKwjC,iCAAiC,CAAElM,IAAezG,EAAAA,CAAAA;IAChE;IAEAiT,kBAAAA;AACE,YAAMC,KAAY,IAAIlC,GAAmB7hC,IAAAA;AAEzC,UAAI+jC,GAAU1B,wBAAAA;AAEZ,eADAriC,KAAKgkC,kBAAAA,GACEhkC,KAAKojC,aAAaW,GAAUzM,aAAAA;AAC9B,UAAIyM,GAAUzB,sBAAAA,GAAyB;AAC5C,cAAM59B,KAAW,IAAI0xB,GAAS,CAAE2N,GAAU7c,MAAMuM,gBAAAA,CAAAA,CAAAA;AAChD,eAAOzzB,KAAK0jC,eAAeh/B,EAAAA;MAC7B;AAAO,aAAIq/B,GAAU5B,uBAAAA,IACZniC,KAAK6jC,iBAAAA,IACHE,GAAUxB,+BAAAA,IACZviC,KAAKikC,yBAAAA,IACHF,GAAU3B,0BAAAA,IACZpiC,KAAKkkC,oBAAoBH,EAAAA,IAEzB/jC,KAAK2jC,aAAa,IAAA;IAE7B;IAEAQ,WAAW1/B,IAAAA;AACT,YAAMC,KAAW43B,GAAWv9B,MAAM0F,EAAAA,EAAMi4B,YAAAA,GAClCqF,KAAgB/hC,KAAKgiC,iBAAAA;AAE3BhiC,WAAKgoB,YAAYhoB,KAAK0E,SAAS0yB,qBAAqB1yB,IAAUq9B,EAAAA,CAAAA;AAE9D,YAAMzK,KAAgByK,GAAc,IAC9BlR,KAAcyG,KAAgB5yB,GAAS0lB,UAAAA,IAAc;AAG3D,aADApqB,KAAKojC,aAAavS,EAAAA,GACX7wB,KAAKwjC,iCAAiC,CAAElM,IAAezG,EAAAA,CAAAA;IAChE;IAEAuT,YAAY3/B,IAAAA;AACV,YAAMC,KAAW43B,GAAWv9B,MAAM0F,EAAAA,EAAMi4B,YAAAA,EAAc/F,6BAA6B32B,KAAK0E,QAAAA,GAClFu3B,KAAgBj8B,KAAKqkC,iBAAiB,EAAEr6B,QAAAA,MAAQ,CAAA,GAChD+3B,KAAgB/hC,KAAK0E,SAASs3B,uBAAuBC,EAAAA;AAE3D,aADAj8B,KAAKgoB,YAAYtjB,EAAAA,GACV1E,KAAKojC,aAAarB,EAAAA;IAC3B;IAEAuC,WAAW3lC,IAAAA;AACT,aAAOqB,KAAKukC,YAAY,CAAE5lC,EAAAA,CAAAA;IAC5B;IAEA4lC,YAAYl5B,IAAAA;AACV,YAAMhN,KAAc,CAAA;AASpB,aAPAuR,MAAMC,KAAKxE,EAAAA,EAAOpC,QAAStK,CAAAA,OAAAA;AAAS,YAAA6lC;AAClC,YAAiBA,UAAjBA,KAAIxkC,KAAK4rB,aAAAA,WAAQ4Y,MAAbA,GAAeC,4BAA4B9lC,EAAAA,GAAO;AACpD,gBAAMgO,KAAake,GAAW6Z,kBAAkB/lC,EAAAA;AAChDN,UAAAA,GAAYsL,KAAKgD,EAAAA;QACnB;MAAA,CAAA,GAGK3M,KAAK2kC,kBAAkBtmC,EAAAA;IAChC;IAEAumC,iBAAiBj4B,IAAAA;AACf,aAAO3M,KAAK2kC,kBAAkB,CAAEh4B,EAAAA,CAAAA;IAClC;IAEAg4B,kBAAkBtmC,IAAAA;AAChB,UAAImB,KAAO,IAAIuxB;AAef,aAbAnhB,MAAMC,KAAKxR,EAAAA,EAAa4K,QAAS0D,CAAAA,OAAAA;AAAe,YAAAwX;AAC9C,cAAMnZ,KAAO2B,GAAW8W,QAAAA,GAClBllB,KAAuC4lB,UAA3BA,KAAGzQ,EAAmB1I,QAAAA,WAAKmZ,KAAAA,SAAxBA,GAA0B5lB,cAEzCK,KAAaoB,KAAK4jC,yBAAAA;AACpBrlC,QAAAA,OACFK,GAAWL,eAAeA;AAG5B,cAAMsmC,KAAiB9T,GAAK+T,gCAAgCn4B,IAAY/N,EAAAA;AACxEY,QAAAA,KAAOA,GAAK8xB,WAAWuT,EAAAA;MAAe,CAAA,GAGjC7kC,KAAKsjC,WAAW9jC,EAAAA;IACzB;IAEAulC,gCAAgC5P,IAAAA;AAC9B,YAAM8G,KAAgBj8B,KAAKqkC,iBAAAA;AAC3B,UAAI1uB,GAAiBsmB,EAAAA,GAAgB;AACnC,YAAkB,eAAd9G,MAAwD,MAA5B8G,GAAc,GAAGjtB;AAC/C,iBAAA;AAEF,YAAIhP,KAAKglC,oCAAoC7P,EAAAA;AAC3C,iBAAA;MAEJ,WACM8G,GAAc,GAAGlqB,UAAUkqB,GAAc,GAAGlqB;AAC9C,eAAA;AAGJ,aAAA;IACF;IAEAkzB,kBAAkB9P,IAAAA;AAA4B,UACxCxoB,IAAYu4B,IAA2BC,IAAAA,EADhB7/B,QAAEA,GAAAA,IAAQD,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AAExC,YAAM42B,KAAgBj8B,KAAKqkC,iBAAAA;AAC3B,UAAI7uB,KAAQxV,KAAKgiC,iBAAAA;AACjB,YAAMoD,KAAuBzvB,GAAiBH,EAAAA;AAQ9C,UANI4vB,KACFF,KAA0C,eAAd/P,MAAwD,MAA5B8G,GAAc,GAAGjtB,SAEzEm2B,KAAuBlJ,GAAc,GAAGlqB,UAAUkqB,GAAc,GAAGlqB,OAGjEmzB,MACEllC,KAAKqlC,+BAAAA,GAAkC;AACzC,cAAMne,KAAQlnB,KAAKslC,SAAAA;AASnB,YAPIpe,GAAM2N,WAAAA,IACR70B,KAAKgkC,kBAAAA,IAELhkC,KAAKulC,4BAAAA,GAGPvlC,KAAKojC,aAAa5tB,GAAM,EAAA,GACpB0R,GAAMpN,QAAAA;AACR,iBAAA;MAEJ;AAUF,aAPIsrB,OACF5vB,KAAQxV,KAAKwlC,4BAA4BrQ,IAAW,EAAE7vB,QAAAA,GAAAA,CAAAA,GACpC,eAAd6vB,OACFxoB,KAAa3M,KAAKylC,qBAAqBjwB,EAAAA,KAIvC7I,MACF3M,KAAK0lC,eAAe/4B,EAAAA,GAAAA,UAGpB3M,KAAKgoB,YAAYhoB,KAAK0E,SAAS8sB,kBAAkBhc,EAAAA,CAAAA,GACjDxV,KAAKojC,aAAa5tB,GAAM,EAAA,GAAA,CACpB0vB,MAAAA,CAA6BC,MAAAA;IAIrC;IAEAQ,kBAAkBnwB,IAAAA;AAChB,YAAA,CAAQ+Y,EAAAA,IAAa3e,MAAMC,KAAK7P,KAAKgiC,iBAAAA,CAAAA;AAErC,aADAhiC,KAAKgoB,YAAYhoB,KAAK0E,SAASgtB,4BAA4Blc,IAAO+Y,EAAAA,CAAAA,GAC3DvuB,KAAKojC,aAAa7U,EAAAA;IAC3B;IAEAqX,iBAAiBj5B,IAAAA;AACf,YAAM6I,KAAQxV,KAAK0E,SAASouB,qBAAqBnmB,EAAAA;AACjD,UAAI6I;AAGF,eAFAxV,KAAK6lC,sBAAAA,GACL7lC,KAAKgoB,YAAYhoB,KAAK0E,SAAS8sB,kBAAkBhc,EAAAA,CAAAA,GAC1CxV,KAAKojC,aAAa5tB,GAAM,EAAA;IAEnC;IAEAyuB,2BAAAA;AACE,YAAA,CAAQ3M,IAAezG,EAAAA,IAAgBjhB,MAAMC,KAAK7P,KAAKgiC,iBAAAA,CAAAA,GACjD9a,KAAQlnB,KAAK0E,SAASyyB,mBAAmBtG,EAAAA;AAE/C,aADA7wB,KAAK8lC,uBAAuB5e,GAAMG,iBAAAA,CAAAA,GAC3BrnB,KAAKojC,aAAa9L,EAAAA;IAC3B;IAEAyO,oBAAAA;AAEE,aADA/lC,KAAKgmC,sBAAsBhmC,KAAKimC,YAAAA,GACzBjmC,KAAK2jC,aA9PI,GAAA;IA+PlB;IAEAuC,oBAAAA;AACE,UAAgC,QAA5BlmC,KAAKgmC;AAEP,eADAhmC,KAAKmmC,iBAAiB,CAAEnmC,KAAKgmC,qBAAqBhmC,KAAKgmC,sBAAsBI,CAAAA,CAAAA,GACtEpmC,KAAKgiC,iBAAAA;IAEhB;IAEAqE,oBAAAA;AACErmC,WAAKgmC,sBAAsB;IAC7B;IAIAM,oBAAoB7yB,IAAAA;AAClB,YAAMjP,KAAQxE,KAAKyiC,kBAAkBhvB;AACrC,aAAgB,QAATjP,MAAAA,UAAiBA;IAC1B;IAEA+hC,uBAAuB9yB,IAAAA;AACrB,YAAMjP,KAAAA,CAASxE,KAAKyiC,kBAAkBhvB;AACtC,aAAIjP,KACKxE,KAAKwmC,oBAAoB/yB,IAAejP,EAAAA,IAExCxE,KAAK8lC,uBAAuBryB,EAAAA;IAEvC;IAEAgzB,uBAAuBhzB,IAAAA;AACrB,aAAID,GAAeC,EAAAA,IACVzT,KAAK0mC,4BAA4BjzB,EAAAA,IAEjCzT,KAAK2mC,2BAA2BlzB,EAAAA;IAE3C;IAEAkzB,2BAA2BlzB,IAAAA;AACzB,YAAM/O,KAAW1E,KAAK4mC,oBAAAA;AACtB,UAAKliC,IAAL;AACA,mBAAWiI,MAAciD,MAAMC,KAAKnL,GAASguB,eAAAA,CAAAA;AAC3C,cAAA,CAAK/lB,GAAW0V,WAAAA;AACd,mBAAA;AAGJ,eAAA;MANe;IAOjB;IAEAqkB,4BAA4BjzB,IAAAA;AAC1B,YAAMyT,KAAQlnB,KAAKslC,SAAAA;AACnB,UAAKpe;AACL,eAAA,CAAQA,GAAM4N,gBAAAA;IAChB;IAEA0R,oBAAoB/yB,IAAejP,IAAAA;AACjC,aAAIgP,GAAeC,EAAAA,IACVzT,KAAK6mC,kBAAkBpzB,IAAejP,EAAAA,KAE7CxE,KAAK8mC,iBAAiBrzB,IAAejP,EAAAA,GACrCxE,KAAKyiC,kBAAkBhvB,MAAiBjP,IACjCxE,KAAK+mC,wCAAAA;IAEhB;IAEAC,0BAA0BzY,IAAU9a,IAAejP,IAAAA;AAAO,UAAA4iB;AACxD,YAAMF,KAAQlnB,KAAK0E,SAASyyB,mBAAmB5I,EAAAA,GACzC0Y,KAAgE,UAA3C7f,KAAG5T,GAAe0T,GAAMG,iBAAAA,CAAAA,MAAAA,WAAmBD,KAAAA,SAAxCA,GAA0C7nB;AAExE,UAAI2nB,MAAAA,QAAS+f,MAAAA,GAAuBh9B,SAASwJ,EAAAA,GAAgB;AAC3D,cAAMyzB,KAAclnC,KAAK0E,SAAS00B,2BAA2B7K,IAAU9a,IAAejP,EAAAA;AACtFxE,aAAKgoB,YAAYkf,EAAAA;MACnB;IACF;IAEAJ,iBAAiBrzB,IAAejP,IAAAA;AAC9B,YAAMu9B,KAAgB/hC,KAAKgiC,iBAAAA;AAC3B,UAAA,CAAKD;AAAe;AAEpB,YAAA,CAAQzK,IAAezG,EAAAA,IAAgBjhB,MAAMC,KAAKkyB,EAAAA;AAClD,UAAIzK,OAAkBzG;AAMpB,eAAO7wB,KAAKgoB,YAAYhoB,KAAK0E,SAASktB,oBAAoBne,IAAejP,IAAOu9B,EAAAA,CAAAA;AALhF,UAAsB,WAAlBtuB,IAA0B;AAC5B,cAAMjU,KAAOuxB,GAAKsE,4BAA4B7wB,IAAO,EAAE2H,MAAM3H,GAAAA,CAAAA;AAC7D,eAAOxE,KAAKsjC,WAAW9jC,EAAAA;MACzB;IAIJ;IAEAqnC,kBAAkBpzB,IAAejP,IAAAA;AAC/B,YAAMu9B,KAAgB/hC,KAAKgiC,iBAAAA;AAC3B,UAAIhiC,KAAKymC,uBAAuBhzB,EAAAA;AAE9B,eADAzT,KAAKgoB,YAAYhoB,KAAK0E,SAAS60B,2BAA2B9lB,IAAejP,IAAOu9B,EAAAA,CAAAA,GACzE/hC,KAAKojC,aAAarB,EAAAA;IAE7B;IAEA+D,uBAAuBryB,IAAAA;AACrB,aAAID,GAAeC,EAAAA,KACjBzT,KAAKmnC,qBAAqB1zB,EAAAA,GACnBzT,KAAKonC,wBAAAA,MAEZpnC,KAAKqnC,oBAAoB5zB,EAAAA,GAAAA,OAClBzT,KAAKyiC,kBAAkBhvB,KACvBzT,KAAK+mC,wCAAAA;IAEhB;IAEAM,oBAAoB5zB,IAAAA;AAClB,YAAMsuB,KAAgB/hC,KAAKgiC,iBAAAA;AAC3B,UAAKD;AACL,eAAO/hC,KAAKgoB,YAAYhoB,KAAK0E,SAASotB,uBAAuBre,IAAesuB,EAAAA,CAAAA;IAC9E;IAEAoF,qBAAqB1zB,IAAAA;AACnB,YAAMsuB,KAAgB/hC,KAAKgiC,iBAAAA;AAC3B,UAAKD;AACL,eAAO/hC,KAAKgoB,YAAYhoB,KAAK0E,SAASotB,uBAAuBre,IAAesuB,EAAAA,CAAAA;IAC9E;IAEAuF,0BAAAA;AAA0B,UAAAC;AACxB,cAAsB,UAAfA,KAAAvnC,KAAKslC,SAAAA,MAAAA,WAAUiC,KAAAA,SAAfA,GAAiB/S,gBAAAA,KAAoB;IAC9C;IAEAgT,0BAAAA;AAA0B,UAAAzS;AACxB,YAAM7N,KAAQlnB,KAAKslC,SAAAA;AACnB,UAAKpe,IAAL;AACA,YAAA,UAAA6N,KAAIvhB,GAAe0T,GAAMoN,yBAAAA,CAAAA,MAAAA,WAA2BS,MAAAA,CAAhDA,GAAkDn1B;AAMpD,iBAAOsnB,GAAMsN,gBAAAA,IAAoB;AANkC;AACnE,gBAAMiT,KAAgBznC,KAAK0nC,iBAAAA;AAC3B,cAAID;AACF,mBrCzYuB,WAAA;AAAA,kBAAS31B,KAACzM,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAAE,qBAAKuM,IAAlBvM,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAgC4J,MAAM,GAAG6C,GAAExM,MAAAA,GAASwM,EAAAA;YAAE,EqCyY3D21B,GAAc7S,sBAAAA,GAAyB1N,GAAM0N,sBAAAA,CAAAA;QAExE;MANY;IASd;IAEAH,uBAAAA;AACE,YAAMvN,KAAQlnB,KAAKslC,SAAAA;AACnB,UAAKpe;AACL,eAAOlnB,KAAKgoB,YAAYhoB,KAAK0E,SAASoyB,aAAa5P,IAAOA,GAAMuN,qBAAAA,CAAAA,CAAAA;IAClE;IAEAC,uBAAAA;AACE,YAAMxN,KAAQlnB,KAAKslC,SAAAA;AACnB,UAAKpe;AACL,eAAOlnB,KAAKgoB,YAAYhoB,KAAK0E,SAASoyB,aAAa5P,IAAOA,GAAMwN,qBAAAA,CAAAA,CAAAA;IAClE;IAEA2Q,iCAAAA;AAAiC,UAAAsC;AAC/B,cAAsB,UAAfA,KAAA3nC,KAAKslC,SAAAA,MAAAA,WAAUqC,KAAAA,SAAfA,GAAiBzT,kBAAAA,KAAsB;IAChD;IAEAqR,8BAAAA;AAA8B,UAAAqC;AAC5B,YAAM9d,KAA2B,UAAlB8d,KAAG5nC,KAAKslC,SAAAA,MAAAA,WAAUsC,KAAAA,SAAfA,GAAiBvgB,iBAAAA;AACnC,UAAIyC;AACF,eAAO9pB,KAAK8lC,uBAAuBhc,EAAAA;IAEvC;IAEAka,oBAAAA;AACE,UAAA,CAAM1M,EAAAA,IAAkB1nB,MAAMC,KAAK7P,KAAKgiC,iBAAAA,CAAAA;AACxC,YAAA,EAAMjwB,OAAEA,GAAAA,IAAU/R,KAAK0E,SAASwyB,qBAAqBI,EAAAA;AACrD,UAAIjH,KAAWte;AACf,YAAM81B,KAAiB7nC,KAAKslC,SAAAA,EAAWpR,kBAAAA;AAEvC,UAAIhN,KAAQlnB,KAAK0E,SAAS+xB,gBAAgBpG,KAAW,CAAA;AACrD,aAAOnJ,MACAA,GAAM2N,WAAAA,KAAAA,EAAgB3N,GAAMgN,kBAAAA,KAAuB2T;AAGxDxX,QAAAA,MACAnJ,KAAQlnB,KAAK0E,SAAS+xB,gBAAgBpG,KAAW,CAAA;AAGnDiH,MAAAA,KAAgBt3B,KAAK0E,SAAS21B,qBAAqB,EAAEtoB,OAAAA,IAAO/C,QAAQ,EAAA,CAAA;AACpE,YAAM6hB,KAAc7wB,KAAK0E,SAAS21B,qBAAqB,EAAEtoB,OAAOse,IAAUrhB,QAAQ,EAAA,CAAA;AAClF,aAAOhP,KAAKgoB,YAAYhoB,KAAK0E,SAASi1B,+BAA+B,CAAErC,IAAezG,EAAAA,CAAAA,CAAAA;IACxF;IAEAuW,0BAAAA;AACE,YAAMrF,KAAgB/hC,KAAKgiC,iBAAiB,EAAE8F,YAAAA,KAAY,CAAA;AAC1D,UAAI/F,IAAe;AACjB,cAAMU,KAAoBziC,KAAK0E,SAASytB,2BAA2B4P,EAAAA;AAUnE,YARAnyB,MAAMC,KAAKwD,GAAAA,CAAAA,EAAwBpK,QAASwK,CAAAA,OAAAA;AACrCgvB,UAAAA,GAAkBhvB,OAChBzT,KAAKymC,uBAAuBhzB,EAAAA,MAC/BgvB,GAAkBhvB,MAAAA;QAEtB,CAAA,GAAA,CAGG6B,GAAgBmtB,IAAmBziC,KAAKyiC,iBAAAA;AAE3C,iBADAziC,KAAKyiC,oBAAoBA,IAClBziC,KAAK+mC,wCAAAA;MAEhB;IACF;IAEAgB,uBAAAA;AACE,aAAO1jC,EAAO0B,KAAK,CAAE,GAAE/F,KAAKyiC,iBAAAA;IAC9B;IAEAmB,2BAAAA;AACE,YAAMhlC,KAAa,CAAA;AACnB,iBAAW2F,MAAOvE,KAAKyiC,mBAAmB;AACxC,cAAMj+B,KAAQxE,KAAKyiC,kBAAkBl+B;AAAAA,kBACjCC,MACEqP,GAActP,EAAAA,MAChB3F,GAAW2F,MAAOC;MAGxB;AACA,aAAO5F;IACT;IAIAopC,kBAAAA;AACE,aAAOhoC,KAAKwmC,oBAAoB,UAAA,IAAU;IAC5C;IAEAyB,gBAAAA;AACE,aAAOjoC,KAAK8lC,uBAAuB,QAAA;IACrC;IAEAoC,qBAAAA;AACE,aAAOloC,KAAKsmC,oBAAoB,QAAA;IAClC;IAEAlD,aAAarB,IAAAA;AAAe,UAAAoG;AAC1B,YAAMlM,KAAgBj8B,KAAK0E,SAAS2zB,uBAAuB0J,EAAAA;AAC3D,aAAoB,UAApBoG,KAAOnoC,KAAK4rB,aAAAA,WAAQuc,KAAAA,SAAbA,GAAeC,sDAAsDnM,EAAAA;IAC9E;IAEA+F,mBAAAA;AACE,YAAM/F,KAAgBj8B,KAAKqkC,iBAAAA;AAC3B,UAAIpI;AACF,eAAOj8B,KAAK0E,SAASs3B,uBAAuBC,EAAAA;IAEhD;IAEAkK,iBAAiBpE,IAAAA;AACf,YAAM9F,KAAgBj8B,KAAK0E,SAAS2zB,uBAAuB0J,EAAAA;AAC3D,aAAO/hC,KAAKqoC,oBAAAA,EAAsBC,iBAAiBrM,EAAAA;IACrD;IAEAgK,cAAAA;AACE,YAAMhK,KAAgBj8B,KAAKqkC,iBAAAA;AAC3B,UAAIpI;AACF,eAAOj8B,KAAK0E,SAAS21B,qBAAqB4B,GAAc,EAAA;IAE5D;IAEAoI,iBAAiB97B,IAAAA;AACf,aAAIvI,KAAKuoC,sBACAvoC,KAAKuoC,sBAELvoC,KAAKqoC,oBAAAA,EAAsBhE,iBAAiB97B,EAAAA,KAAYgN,GAAe,EAAExD,OAAO,GAAG/C,QAAQ,EAAA,CAAA;IAEtG;IAEAw5B,wBAAwBvM,IAAe9mB,IAAAA;AACrC,UAAItE;AACJ7Q,WAAKuoC,sBAAsBtM;AAC3B,UAAA;AACEprB,QAAAA,KAASsE,GAAAA;MACX,UAAU;AACRnV,aAAKuoC,sBAAsB;MAC7B;AACA,aAAO13B;IACT;IAEA43B,gBAAgBjzB,IAAOL,IAAAA;AACrB,YAAM8mB,KAAgBj8B,KAAK0E,SAAS2zB,uBAAuB7iB,EAAAA;AAC3D,aAAOxV,KAAKwoC,wBAAwBvM,IAAe9mB,EAAAA;IACrD;IAEAuzB,mBAAmB7wB,IAAU1C,IAAAA;AAC3B,YAAM8mB,KAAgBj8B,KAAK2oC,gCAAgC9wB,IAAU,EAAE7N,QAAAA,MAAQ,CAAA;AAC/E,aAAOhK,KAAKwoC,wBAAwBvM,IAAe9mB,EAAAA;IACrD;IAEAqwB,4BAA4BrQ,IAAAA;AAA4B,UAAA,EAAjB7vB,QAAEA,GAAAA,IAAQD,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA,GAAA,CAC5CiyB,IAAezG,EAAAA,IAAgBjhB,MAAMC,KAAK7P,KAAKgiC,iBAAAA,CAAAA;AAcrD,aAbkB,eAAd7M,KACE7vB,KACFgyB,MAAiBhyB,KAEjBgyB,KAAgBt3B,KAAK4oC,iCAAiCtR,IAAAA,EAAgB,IAGpEhyB,KACFurB,MAAevrB,KAEfurB,KAAc7wB,KAAK4oC,iCAAiC/X,IAAa,CAAA,GAG9Dtb,GAAe,CAAE+hB,IAAezG,EAAAA,CAAAA;IACzC;IAEAmU,oCAAoC7P,IAAAA;AAClC,UAAIn1B,KAAK6oC;AACP,eAAA;AAEF,YAAMrzB,KAAQxV,KAAKwlC,4BAA4BrQ,EAAAA;AAC/C,aAA2C,QAApCn1B,KAAKylC,qBAAqBjwB,EAAAA;IACnC;IAEAszB,sBAAsB3T,IAAAA;AACpB,UAAI4T,IAAmBvzB;AACvB,UAAIxV,KAAK6oC;AACPrzB,QAAAA,KAAQxV,KAAK0E,SAASouB,qBAAqB9yB,KAAK6oC,iBAAAA;WAC3C;AACL,cAAM9G,KAAgB/hC,KAAKgiC,iBAAAA;AAC3BxsB,QAAAA,KAAQxV,KAAKwlC,4BAA4BrQ,EAAAA,GACzC4T,KAAAA,CAAqBhzB,GAAegsB,IAAevsB,EAAAA;MACrD;AAQA,UANkB,eAAd2f,KACFn1B,KAAKmmC,iBAAiB3wB,GAAM,EAAA,IAE5BxV,KAAKmmC,iBAAiB3wB,GAAM,EAAA,GAG1BuzB,IAAmB;AACrB,cAAMp8B,KAAa3M,KAAKylC,qBAAqBjwB,EAAAA;AAC7C,YAAI7I;AACF,iBAAO3M,KAAK0lC,eAAe/4B,EAAAA;MAE/B;IACF;IAEAq8B,2BAA2B7T,IAAAA;AAA4B,UAAA,EAAjB7vB,QAAEA,GAAAA,IAAQD,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AACjD,YAAMmQ,KAAQxV,KAAKwlC,4BAA4BrQ,IAAW,EAAE7vB,QAAAA,GAAAA,CAAAA;AAC5D,aAAOtF,KAAKmmC,iBAAiB3wB,EAAAA;IAC/B;IAEAyzB,4BAAAA;AACE,UAAIjpC,KAAKsmC,oBAAoB,MAAA;AAC3B,eAAOtmC,KAAKkpC,qCAAqC,MAAA;IAErD;IAEAA,qCAAqCz1B,IAAAA;AACnC,YAAM8a,KAAWvuB,KAAKimC,YAAAA,GAChBzwB,KAAQxV,KAAK0E,SAASu2B,oCAAoCxnB,IAAe8a,EAAAA;AAC/E,aAAOvuB,KAAKmmC,iBAAiB3wB,EAAAA;IAC/B;IAEA2zB,+BAAAA;AAA+B,UAAAC;AAC7B,cAAoCA,UAA7BA,KAAIppC,KAACqpC,uBAAAA,MAAAA,WAAwBD,KAAAA,SAA7BA,GAA+B9jC,UAAS;IACjD;IAEAgkC,4BAAAA;AACE,aAAOtpC,KAAK6oC,qBAAqB7oC,KAAKupC,uBAAuBvpC,KAAKimC,YAAAA,CAAAA;IACpE;IAEAsD,uBAAuBhb,IAAAA;AACrB,YAAMuN,KAAW97B,KAAK0E,SAASwyB,qBAAqB3I,EAAAA;AACpD,UAAIuN;AACF,eAAO97B,KAAKwpC,uBAAuB1N,EAAAA;IAEvC;IAEA2N,qBAAqBlb,IAAAA;AAAU,UAAAmb;AAC7B,aAAA,UAAAA,KAAO1pC,KAAK0E,SAASyuB,mBAAmB5E,EAAAA,MAAAA,WAASmb,KAAAA,SAA1CA,GAA4Cxf,aAAAA;IACrD;IAEA0c,sBAAAA;AACE,YAAM7E,KAAgB/hC,KAAKgiC,iBAAAA;AAC3B,UAAID;AACF,eAAO/hC,KAAK0E,SAASm0B,mBAAmBkJ,EAAAA;IAE5C;IAEAsH,yBAAAA;AAAyB,UAAAM;AACvB,aAAiCA,UAAjCA,KAAO3pC,KAAK4mC,oBAAAA,MAAAA,WAAqB+C,KAAAA,SAA1BA,GAA4BjX,eAAAA;IACrC;IAIAA,iBAAAA;AACE,aAAO1yB,KAAK3B,YAAY4Q,MAAM,CAAA;IAChC;IAEA2zB,qBAAAA;AACE,YAAMvkC,KAAc2B,KAAK0E,SAASguB,eAAAA,GAAAA,EAC5BkX,OAAEA,IAAKC,SAAEA,GAAAA,IrCpoBiB,WAAA;AAAuC,YAA9BC,KAAQzkC,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA,GAAI0kC,KAAQ1kC,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACrE,cAAMukC,KAAQ,CAAA,GACRC,KAAU,CAAA,GAEVG,KAAiB,oBAAIC;AAE3BH,QAAAA,GAAS7gC,QAASzE,CAAAA,OAAAA;AAChBwlC,UAAAA,GAAe7gC,IAAI3E,EAAAA;QAAM,CAAA;AAG3B,cAAM0lC,KAAgB,oBAAID;AAe1B,eAbAF,GAAS9gC,QAASzE,CAAAA,OAAAA;AAChB0lC,UAAAA,GAAc/gC,IAAI3E,EAAAA,GACbwlC,GAAep3B,IAAIpO,EAAAA,KACtBolC,GAAMjgC,KAAKnF,EAAAA;QACb,CAAA,GAGFslC,GAAS7gC,QAASzE,CAAAA,OAAAA;AACX0lC,UAAAA,GAAct3B,IAAIpO,EAAAA,KACrBqlC,GAAQlgC,KAAKnF,EAAAA;QACf,CAAA,GAGK,EAAEolC,OAAAA,IAAOC,SAAAA,GAAAA;MAClB,EqC0mBoD7pC,KAAK3B,aAAaA,EAAAA;AAQlE,aAPA2B,KAAK3B,cAAcA,IAEnBuR,MAAMC,KAAKg6B,EAAAA,EAAS5gC,QAAS0D,CAAAA,OAAAA;AAAe,YAAAw9B,IAAAC;AAC1Cz9B,QAAAA,GAAWif,WAAW,MAAA,UACtBue,KAAAA,KAAKve,aAAAA,WAAQue,MAAgCC,UAAhCA,KAAbD,GAAeE,mCAAAA,WAA8BD,MAA7CA,GAAArkC,KAAAokC,IAAgDx9B,EAAAA;MAAW,CAAA,IAGtD,MAAA;AACL,cAAMkE,KAAS,CAAA;AAOf,eALAjB,MAAMC,KAAK+5B,EAAAA,EAAO3gC,QAAS0D,CAAAA,OAAAA;AAAe,cAAA29B,IAAAC;AACxC59B,UAAAA,GAAWif,WAAW5rB,MACtB6Q,GAAOlH,KAAkB,UAAd2gC,KAACtqC,KAAK4rB,aAAAA,WAAQ0e,MAA6B,UAA7BC,KAAbD,GAAeE,gCAAAA,WAA2BD,KAAAA,SAA1CA,GAAAxkC,KAAAukC,IAA6C39B,EAAAA,CAAAA;QAAY,CAAA,GAGhEkE;MACR,GATM;IAUT;IAIA0U,8BAA8B5Y,IAAAA;AAAY,UAAA89B,IAAAC;AAExC,aADA1qC,KAAK0iC,YACe+H,UAApBA,KAAOzqC,KAAK4rB,aAAAA,WAAQ6e,MAA8B,UAA9BC,KAAbD,GAAeE,iCAAAA,WAA4BD,KAAAA,SAA3CA,GAAA3kC,KAAA0kC,IAA8C99B,EAAAA;IACvD;IAEAmgB,8BAA8BngB,IAAAA;AAAY,UAAAi+B,IAAAC;AAExC,aADA7qC,KAAK0iC,YACekI,UAApBA,KAAO5qC,KAAK4rB,aAAAA,WAAQgf,MAA0C,UAA1CC,KAAbD,GAAeE,6CAAAA,WAAwCD,KAAAA,SAAvDA,GAAA9kC,KAAA6kC,IAA0Dj+B,EAAAA;IACnE;IAIA+4B,eAAe/4B,IAAYpE,IAAAA;AAAS,UAAAwiC,IAAAC;AAClC,UAAIr+B,OAAe3M,KAAK6oC;AAGxB,eAFA7oC,KAAK6lC,sBAAAA,GACL7lC,KAAK6oC,oBAAoBl8B,IACLo+B,UAApBA,KAAO/qC,KAAK4rB,aAAAA,WAAQmf,MAAsCC,UAAtCA,KAAbD,GAAeE,yCAAAA,WAAoCD,KAAAA,SAAnDA,GAAAjlC,KAAAglC,IAAsD/qC,KAAK6oC,mBAAmBtgC,EAAAA;IACvF;IAEAs9B,wBAAAA;AAAwB,UAAAqF,IAAAC;AACjBnrC,WAAK6oC,sBACG,UAAbqC,KAAIlrC,KAAC4rB,aAAAA,WAAQsf,MAAAA,UAAAC,KAAbD,GAAeE,wCAAAA,WAAmCD,MAAlDA,GAAAplC,KAAAmlC,IAAqDlrC,KAAK6oC,iBAAAA,GAC1D7oC,KAAK6oC,oBAAoB;IAC3B;IAEA7V,8BAA8Bp0B,IAAY+N,IAAAA;AACxC,aAAO3M,KAAKgoB,YAAYhoB,KAAK0E,SAASsuB,8BAA8Bp0B,IAAY+N,EAAAA,CAAAA;IAClF;IAEAwsB,6BAA6BrP,IAAWnd,IAAAA;AACtC,aAAO3M,KAAKgoB,YAAYhoB,KAAK0E,SAASy0B,6BAA6BrP,IAAWnd,EAAAA,CAAAA;IAChF;IAIAu3B,oBAAoBH,IAAAA;AAClB,UAAA,EAAIr/B,UAAEA,GAAAA,IAAaq/B;AACnB,YAAA,EAAM7c,OAAEA,GAAAA,IAAU6c;AAClB,UAAIxV,KAAWwV,GAAUzM,eACrB9hB,KAAQ,CAAE+Y,KAAW,GAAGA,EAAAA;AAExBrH,MAAAA,GAAMQ,sBAAAA,MAA4Bqc,GAAUxM,cAAcvoB,UACxDkY,GAAM8N,eAAAA,KAAgD,SAA5B+O,GAAU7B,gBACtC3T,MAAY,IAEZ7pB,KAAWA,GAAS8sB,kBAAkBhc,EAAAA,GAExCA,KAAQ,CAAE+Y,IAAUA,EAAAA,KACiB,SAA5BwV,GAAU7B,gBACiB,SAAhC6B,GAAU9B,oBACZzsB,KAAQ,CAAE+Y,KAAW,GAAGA,KAAW,CAAA,KAEnC/Y,KAAQ,CAAE+Y,IAAUA,KAAW,CAAA,GAC/BA,MAAY,KAELwV,GAAUxM,cAAcvoB,SAAS,KAAM,MAChDuf,MAAY;AAGd,YAAM2Y,KAAc,IAAI9Q,GAAS,CAAElP,GAAM8M,oBAAAA,EAAsBP,gBAAAA,CAAAA,CAAAA;AAE/D,aADAzzB,KAAKgoB,YAAYtjB,GAASuyB,sBAAsBiQ,IAAa1xB,EAAAA,CAAAA,GACtDxV,KAAKojC,aAAa7U,EAAAA;IAC3B;IAEAmZ,mBAAAA;AACE,YAAMzL,KAAgBj8B,KAAKqkC,iBAAAA;AAC3B,UAAIpI,IAAe;AACjB,cAAA,EAAMlqB,OAAEA,GAAAA,IAAUkqB,GAAc;AAChC,YAAIlqB,KAAQ;AACV,iBAAO/R,KAAK0E,SAAS+xB,gBAAgB1kB,KAAQ,CAAA;MAEjD;IACF;IAEAuzB,WAAAA;AACE,YAAMrJ,KAAgBj8B,KAAKqkC,iBAAAA;AAC3B,UAAIpI;AACF,eAAOj8B,KAAK0E,SAAS+xB,gBAAgBwF,GAAc,GAAGlqB,KAAAA;IAE1D;IAEA0zB,qBAAqBjwB,IAAAA;AACnB,YAAM9Q,KAAW1E,KAAK0E,SAASm0B,mBAAmBrjB,EAAAA;AAClD,UAAI9Q,GAAS6J,SAAAA,MAAAA,GAAU9K,OlDnwBiB,UkDmwBmB,IAAA;AACzD,eAAOiB,GAASguB,eAAAA,EAAiB;IAErC;IAEAqU,0CAAAA;AAA0C,UAAAsE,IAAAC;AACxC,aAAA,UAAAD,KAAOrrC,KAAK4rB,aAAAA,WAAQyf,MAAuCC,UAAvCA,KAAbD,GAAeE,0CAAAA,WAAqCD,KAAAA,SAApDA,GAAAvlC,KAAAslC,IAAuDrrC,KAAKyiC,iBAAAA;IACrE;IAEAe,iCAAiChuB,IAAAA;AAAO,UAAAg2B,IAAAC;AACtC,aAAoBD,UAApBA,KAAOxrC,KAAK4rB,aAAAA,WAAQ4f,MAAuC,UAAvCC,KAAbD,GAAeE,0CAAAA,WAAqCD,KAAAA,SAApDA,GAAA1lC,KAAAylC,IAAuDh2B,EAAAA;IAChE;IAEAozB,iCAAiCra,IAAUvf,IAAAA;AACzC,YAAM28B,KAAc3rC,KAAK0E,SAASiN,cAAAA,GAC5Bi6B,KAAgBD,GAAYx8B,qBAAqBof,EAAAA;AACvD,aAAOod,GAAY58B,mBAAmB68B,KAAgB58B,EAAAA;IACxD;EAAA;AAGFwzB,KAAYjmB,YAAY,qCAAA,GACxBimB,GAAYjmB,YAAY,sDAAA,GACxBimB,GAAYjmB,YAAY,uDAAA,GACxBimB,GAAYjmB,YAAY,8CAAA,GACxBimB,GAAYjmB,YAAY,2CAAA,GACxBimB,GAAYjmB,YAAY,+BAAA;AC5xBT,MAAMsvB,KAAN,cAA0Bz+B,EAAAA;IACvCwB,YAAYkzB,IAAAA;AACVjzB,YAAAA,GAASxJ,SAAAA,GACTrF,KAAK8hC,cAAcA,IACnB9hC,KAAK8rC,cAAc,CAAA,GACnB9rC,KAAK+rC,cAAc,CAAA;IACrB;IAEAC,gBAAgBC,IAAAA;AAA+C,UAAA,EAAlCtmB,SAAEA,IAAOumB,gBAAEA,GAAAA,IAAgB7mC,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AACzD,YAAM8mC,KAAgBnsC,KAAK8rC,YAAY78B,MAAAA,EAAO,EAAG;AAEjD,UAAA,CAAKi9B,MAAAA,CAAmBE,GAA8BD,IAAeF,IAAatmB,EAAAA,GAAU;AAC1F,cAAM0mB,KAAYrsC,KAAKssC,YAAY,EAAEL,aAAAA,IAAatmB,SAAAA,GAAAA,CAAAA;AAClD3lB,aAAK8rC,YAAYniC,KAAK0iC,EAAAA,GACtBrsC,KAAK+rC,cAAc,CAAA;MACrB;IACF;IAEArpC,OAAAA;AACE,YAAM2pC,KAAYrsC,KAAK8rC,YAAYS,IAAAA;AACnC,UAAIF,IAAW;AACb,cAAMG,KAAYxsC,KAAKssC,YAAYD,EAAAA;AAEnC,eADArsC,KAAK+rC,YAAYpiC,KAAK6iC,EAAAA,GACfxsC,KAAK8hC,YAAYiB,aAAasJ,GAAUI,QAAAA;MACjD;IACF;IAEAlqC,OAAAA;AACE,YAAMiqC,KAAYxsC,KAAK+rC,YAAYQ,IAAAA;AACnC,UAAIC,IAAW;AACb,cAAMH,KAAYrsC,KAAKssC,YAAYE,EAAAA;AAEnC,eADAxsC,KAAK8rC,YAAYniC,KAAK0iC,EAAAA,GACfrsC,KAAK8hC,YAAYiB,aAAayJ,GAAUC,QAAAA;MACjD;IACF;IAEAC,UAAAA;AACE,aAAO1sC,KAAK8rC,YAAYxmC,SAAS;IACnC;IAEAqnC,UAAAA;AACE,aAAO3sC,KAAK+rC,YAAYzmC,SAAS;IACnC;IAIAgnC,cAAAA;AAA2C,UAAA,EAA/BL,aAAEA,IAAWtmB,SAAEA,GAAAA,IAAStgB,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AACrC,aAAO,EACL4mC,aAAaA,QAAAA,KAAAA,SAAAA,GAAa19B,SAAAA,GAC1BoX,SAASxU,KAAKO,UAAUiU,EAAAA,GACxB8mB,UAAUzsC,KAAK8hC,YAAYgB,YAAAA,EAAAA;IAE/B;EAAA;AAGF,MAAMsJ,KAAgCA,CAACQ,IAAOX,IAAatmB,QACzDinB,QAAAA,KAAAA,SAAAA,GAAOX,kBAAgBA,QAAAA,KAAAA,SAAAA,GAAa19B,SAAAA,OAAcq+B,QAAAA,KAAAA,SAAAA,GAAOjnB,aAAYxU,KAAKO,UAAUiU,EAAAA;AADtF,MCzDMknB,KAAuB;AAId,MAAMC,KAAN,MAAMA;IACnBl+B,YAAY69B,IAAAA;AACVzsC,WAAK0E,WAAW+nC,GAAS/nC,UACzB1E,KAAK+hC,gBAAgB0K,GAAS1K;IAChC;IAEA7lB,UAAAA;AAEE,aADAlc,KAAKmnC,qBAAAA,GACEnnC,KAAK+sC,oBAAAA;IACd;IAEAjK,cAAAA;AACE,aAAO,EAAEp+B,UAAU1E,KAAK0E,UAAUq9B,eAAe/hC,KAAK+hC,cAAAA;IACxD;IAIAoF,uBAAAA;AACE,aAAOnnC,KAAKgtC,mBAAAA,EAAqB18B,IAAKkF,CAAAA,OAAUxV,KAAK0E,WAAW1E,KAAK0E,SAASotB,uBAAuB+a,IAAsBr3B,EAAAA,CAAAA;IAC7H;IAEAu3B,sBAAAA;AACE,UAAI/9B,KAAS;AAEbhP,WAAKitC,mBAAAA,EAAqBhkC,QAASuM,CAAAA,OAAAA;AAC7BA,QAAAA,GAAM,KAAKA,GAAM,KAAK,MACxBA,GAAM,MAAMxG,IACZwG,GAAM,MAAMxG,IAE2C,SAAnDhP,KAAK0E,SAAS+1B,uBAAuBjlB,GAAM,EAAA,MAC7CxV,KAAK0E,WAAW1E,KAAK0E,SAAS40B,wBAAwB9jB,GAAM,EAAA,GACxDA,GAAM,KAAKxV,KAAK+hC,cAAc,MAChC/hC,KAAKktC,yBAAAA,GAEP13B,GAAM,MACNxG,OAGe,MAAbwG,GAAM,MACmD,SAAvDxV,KAAK0E,SAAS+1B,uBAAuBjlB,GAAM,KAAK,CAAA,MAClDxV,KAAK0E,WAAW1E,KAAK0E,SAAS40B,wBAAwB9jB,GAAM,EAAA,GACxDA,GAAM,KAAKxV,KAAK+hC,cAAc,MAChC/hC,KAAKktC,yBAAAA,GAEP13B,GAAM,MACNxG,OAIJhP,KAAK0E,WAAW1E,KAAK0E,SAAS60B,2BAA2BsT,IAAAA,MAA4Br3B,EAAAA;MACvF,CAAA;IAEJ;IAEAw3B,qBAAAA;AACE,aAAOhtC,KAAK0E,SAASg3B,4BAA4BmR,EAAAA;IACnD;IAEAI,qBAAAA;AACE,aAAOjtC,KAAK0E,SAASk3B,2BA9DG,gBA8D6C,EAAEC,WA7D9C,UAAA,CAAA;IA8D3B;IAEAqR,2BAAAA;AACEltC,WAAK+hC,cAAc,MAAM,GACzB/hC,KAAK+hC,cAAc,MAAM;IAC3B;EAAA;ACnEK,MAAMoL,KAA0B,SAASV,IAAAA;AAC9C,UAAMx1B,KAAS,IAAI61B,GAAOL,EAAAA;AAE1B,WADAx1B,GAAOiF,QAAAA,GACAjF,GAAO6rB,YAAAA;EAChB;AAJO,MCGDsK,KAAkB,CAAED,EAAAA;AAEX,MAAME,KAAN,MAAMA;IACnBz+B,YAAYkzB,IAAa/qB,IAAkBjX,IAAAA;AACzCE,WAAKukC,cAAcvkC,KAAKukC,YAAY7tB,KAAK1W,IAAAA,GACzCA,KAAK8hC,cAAcA,IACnB9hC,KAAK+W,mBAAmBA,IACxB/W,KAAKF,UAAUA,IACfE,KAAKstC,cAAc,IAAIzB,GAAY7rC,KAAK8hC,WAAAA,GACxC9hC,KAAKutC,UAAUH,GAAgBn+B,MAAM,CAAA;IACvC;IAEAu+B,aAAa9oC,IAAAA;AACX,aAAO1E,KAAK+iC,aAAa,EAAEr+B,UAAAA,IAAUq9B,eAAe,CAAE,GAAG,CAAA,EAAA,CAAA;IAC3D;IAEA0L,WAAAA;AAAoB,UAAXhpC,KAAIY,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG;AACd,YAAMX,KAAW43B,GAAWv9B,MAAM0F,IAAM,EAAE83B,kBAAkBv8B,KAAKF,QAAAA,CAAAA,EAAW48B,YAAAA;AAC5E,aAAO18B,KAAKwtC,aAAa9oC,EAAAA;IAC3B;IAEAgpC,SAAQ3sB,IAAAA;AAA8B,UAAA,EAA7Brc,UAAEA,IAAQq9B,eAAEA,GAAAA,IAAehhB;AAElC,aADArc,KAAW0xB,GAASllB,SAASxM,EAAAA,GACtB1E,KAAK+iC,aAAa,EAAEr+B,UAAAA,IAAUq9B,eAAAA,GAAAA,CAAAA;IACvC;IAEAgB,aAAa0J,IAAAA;AAEX,aADAzsC,KAAKstC,cAAc,IAAIzB,GAAY7rC,KAAK8hC,WAAAA,GACjC9hC,KAAK8hC,YAAYiB,aAAa0J,EAAAA;IACvC;IAEA/P,cAAAA;AACE,aAAO18B,KAAK8hC,YAAYp9B;IAC1B;IAEAkiC,sBAAAA;AACE,aAAO5mC,KAAK8hC,YAAY8E,oBAAAA;IAC1B;IAEA9D,cAAAA;AACE,aAAO9iC,KAAK8hC,YAAYgB,YAAAA;IAC1B;IAEAtzB,SAAAA;AACE,aAAOxP,KAAK8iC,YAAAA;IACd;IAIAmC,kBAAkB9P,IAAAA;AAChB,aAAOn1B,KAAK8hC,YAAYmD,kBAAkB9P,EAAAA;IAC5C;IAEAyP,iBAAiBj4B,IAAAA;AACf,aAAO3M,KAAK8hC,YAAY8C,iBAAiBj4B,EAAAA;IAC3C;IAEAg4B,kBAAkBtmC,IAAAA;AAChB,aAAO2B,KAAK8hC,YAAY6C,kBAAkBtmC,EAAAA;IAC5C;IAEAqlC,eAAeh/B,IAAAA;AACb,aAAO1E,KAAK8hC,YAAY4B,eAAeh/B,EAAAA;IACzC;IAEA4/B,WAAW3lC,IAAAA;AACT,aAAOqB,KAAK8hC,YAAYwC,WAAW3lC,EAAAA;IACrC;IAEA4lC,YAAYl5B,IAAAA;AACV,aAAOrL,KAAK8hC,YAAYyC,YAAYl5B,EAAAA;IACtC;IAEA84B,WAAW1/B,IAAAA;AACT,aAAOzE,KAAK8hC,YAAYqC,WAAW1/B,EAAAA;IACrC;IAEAk/B,aAAatzB,IAAAA;AACX,aAAOrQ,KAAK8hC,YAAY6B,aAAatzB,EAAAA;IACvC;IAEAizB,WAAW9jC,IAAAA;AACT,aAAOQ,KAAK8hC,YAAYwB,WAAW9jC,EAAAA;IACrC;IAEAskC,kBAAAA;AACE,aAAO9jC,KAAK8hC,YAAYgC,gBAAAA;IAC1B;IAIA9B,mBAAAA;AACE,aAAOhiC,KAAK8hC,YAAYE,iBAAAA;IAC1B;IAEAiE,cAAAA;AACE,aAAOjmC,KAAK8hC,YAAYmE,YAAAA;IAC1B;IAEA0H,wBAAwBpf,IAAAA;AACtB,YAAM0N,KAAgBj8B,KAAK08B,YAAAA,EAAcrE,uBAAuB,CAAE9J,IAAUA,KAAW,CAAA,CAAA;AACvF,aAAOvuB,KAAK+W,iBAAiB62B,6BAA6B3R,EAAAA;IAC5D;IAEA+M,2BAA2B7T,IAAAA;AACzB,aAAOn1B,KAAK8hC,YAAYkH,2BAA2B7T,EAAAA;IACrD;IAEA2T,sBAAsB3T,IAAAA;AACpB,aAAOn1B,KAAK8hC,YAAYgH,sBAAsB3T,EAAAA;IAChD;IAEAgR,iBAAiBpE,IAAAA;AACf,aAAO/hC,KAAK8hC,YAAYqE,iBAAiBpE,EAAAA;IAC3C;IAIA8L,kBAAkBpvC,IAAAA;AAAoB,UAAd+F,KAAAA,EAAKa,UAAAC,SAAA,KAAA,WAAAD,UAAA,OAAAA,UAAA;AAC3B,aAAOrF,KAAK8hC,YAAY0E,oBAAoB/nC,IAAM+F,EAAAA;IACpD;IAEAspC,kBAAkBrvC,IAAAA;AAChB,aAAOuB,KAAK8hC,YAAYwE,oBAAoB7nC,EAAAA;IAC9C;IAEAsvC,qBAAqBtvC,IAAAA;AACnB,aAAOuB,KAAK8hC,YAAY2E,uBAAuBhoC,EAAAA;IACjD;IAEAuvC,oBAAoBvvC,IAAAA;AAClB,aAAOuB,KAAK8hC,YAAYgE,uBAAuBrnC,EAAAA;IACjD;IAGAuoC,0BAA0BzY,IAAU9vB,IAAM+F,IAAAA;AACxCxE,WAAK8hC,YAAYkF,0BAA0BzY,IAAU9vB,IAAM+F,EAAAA;IAC7D;IAIA8iC,0BAAAA;AACE,aAAOtnC,KAAK8hC,YAAYwF,wBAAAA;IAC1B;IAEAE,0BAAAA;AACE,aAAOxnC,KAAK8hC,YAAY0F,wBAAAA;IAC1B;IAEA/S,uBAAAA;AACE,UAAIz0B,KAAKsnC,wBAAAA;AACP,eAAOtnC,KAAK8hC,YAAYrN,qBAAAA;IAE5B;IAEAC,uBAAAA;AACE,UAAI10B,KAAKwnC,wBAAAA;AACP,eAAOxnC,KAAK8hC,YAAYpN,qBAAAA;IAE5B;IAIAiY,UAAAA;AACE,aAAO3sC,KAAKstC,YAAYX,QAAAA;IAC1B;IAEAD,UAAAA;AACE,aAAO1sC,KAAKstC,YAAYZ,QAAAA;IAC1B;IAEAV,gBAAgBC,IAAAA;AAA+C,UAAA,EAAlCtmB,SAAEA,IAAOumB,gBAAEA,GAAAA,IAAgB7mC,UAAAC,SAAAD,KAAAA,WAAAA,UAAAE,KAAAF,UAAG,KAAA,CAAA;AACzD,aAAOrF,KAAKstC,YAAYtB,gBAAgBC,IAAa,EAAEtmB,SAAAA,IAASumB,gBAAAA,GAAAA,CAAAA;IAClE;IAEA3pC,OAAAA;AACE,UAAIvC,KAAK2sC,QAAAA;AACP,eAAO3sC,KAAKstC,YAAY/qC,KAAAA;IAE5B;IAEAG,OAAAA;AACE,UAAI1C,KAAK0sC,QAAAA;AACP,eAAO1sC,KAAKstC,YAAY5qC,KAAAA;IAE5B;EAAA;AC5Ka,MAAMurC,KAAN,MAAMA;IACnBr/B,YAAY9O,IAAAA;AACVE,WAAKF,UAAUA;IACjB;IAEAouC,mCAAmCC,IAAWn/B,IAAAA;AAAuC,UAAA,EAA/BhF,QAAEA,GAAAA,IAAQ3E,UAAAC,SAAA,KAAA,WAAAD,UAAAE,KAAAF,UAAG,KAAA,EAAE2E,QAAAA,KAAQ,GACvE5C,KAAa,GACbgnC,KAAAA;AACJ,YAAMtS,KAAW,EAAE/pB,OAAO,GAAG/C,QAAQ,EAAA,GAC/Bq/B,KAAoBruC,KAAKsuC,mCAAmCH,EAAAA;AAE9DE,MAAAA,OACFF,KAAYE,GAAkBtuC,YAC9BiP,KAAS9H,EAAqBmnC,EAAAA;AAGhC,YAAM/tB,KAAS7Y,EAASzH,KAAKF,SAAS,EAAE8H,aAAa2mC,GAAAA,CAAAA;AAErD,aAAOjuB,GAAOE,SAAAA,KAAY;AACxB,cAAM9Z,KAAO4Z,GAAOG;AAEpB,YAAI/Z,OAASynC,MAAa9jC,EAAe8jC,EAAAA,GAAY;AAC9C/jC,YAAmB1D,EAAAA,MACtBo1B,GAAS9sB,UAAUA;AAErB;QACF;AACE,YAAItI,GAAK3G,eAAeouC,IAAAA;AACtB,cAAI/mC,SAAiB4H;AACnB;QAAA,WAEG,CAAK/H,EAAoBknC,IAAWznC,EAAAA,KACrCU,KAAa;AACf;AAIA2C,UAAiBrD,IAAM,EAAEsD,QAAAA,GAAAA,CAAAA,KACvBokC,MACFtS,GAAS/pB,SAEX+pB,GAAS9sB,SAAS,GAClBo/B,KAAAA,QAEAtS,GAAS9sB,UAAUw/B,GAAW9nC,EAAAA;MAGpC;AAEA,aAAOo1B;IACT;IAEA2S,mCAAmC3S,IAAAA;AACjC,UAAIqS,IAAWn/B;AACf,UAAuB,MAAnB8sB,GAAS/pB,SAAmC,MAApB+pB,GAAS9sB,QAAc;AAIjD,aAHAm/B,KAAYnuC,KAAKF,SACjBkP,KAAS,GAEFm/B,GAAUrkC;AAEf,cADAqkC,KAAYA,GAAUrkC,YAClBF,EAAqBukC,EAAAA,GAAY;AACnCn/B,YAAAA,KAAS;AACT;UACF;AAGF,eAAO,CAAEm/B,IAAWn/B,EAAAA;MACtB;AAEA,UAAA,CAAMtI,IAAMgoC,EAAAA,IAAe1uC,KAAK2uC,8BAA8B7S,EAAAA;AAC9D,UAAKp1B,IAAL;AAEA,YAAI2D,EAAe3D,EAAAA;AACQ,gBAArB8nC,GAAW9nC,EAAAA,KACbynC,KAAYznC,GAAK3G,WAAWA,YAC5BiP,KAAS9H,EAAqBR,GAAK3G,UAAAA,GAC/BqK,EAAmB1D,IAAM,EAAEjI,MAAM,QAAA,CAAA,KACnCuQ,SAGFm/B,KAAYznC,IACZsI,KAAS8sB,GAAS9sB,SAAS0/B;aAExB;AAGL,cAFAP,KAAYznC,GAAK3G,YAAAA,CAEZgK,EAAiBrD,GAAKW,eAAAA,KAAAA,CACpBuC,EAAqBukC,EAAAA;AACxB,mBAAOznC,OAASynC,GAAU5lB,cACxB7hB,KAAOynC,IACPA,KAAYA,GAAUpuC,YAAAA,CAClB6J,EAAqBukC,EAAAA;AAAAA;AAO/Bn/B,UAAAA,KAAS9H,EAAqBR,EAAAA,GACN,MAApBo1B,GAAS9sB,UACXA;QAEJ;AAEA,eAAO,CAAEm/B,IAAWn/B,EAAAA;MAlCT;IAmCb;IAEA2/B,8BAA8B7S,IAAAA;AAC5B,UAAIp1B,IAAMgoC,IACN1/B,KAAS;AAEb,iBAAWyR,MAAezgB,KAAK4uC,4BAA4B9S,GAAS/pB,KAAAA,GAAQ;AAC1E,cAAMzM,KAASkpC,GAAW/tB,EAAAA;AAE1B,YAAIqb,GAAS9sB,UAAUA,KAAS1J;AAC9B,cAAI+E,EAAeoW,EAAAA,GAAAA;AAGjB,gBAFA/Z,KAAO+Z,IACPiuB,KAAa1/B,IACT8sB,GAAS9sB,WAAW0/B,MAActkC,EAAmB1D,EAAAA;AACvD;UAAA;AAEQA,YAAAA,OACVA,KAAO+Z,IACPiuB,KAAa1/B;AAKjB,YADAA,MAAU1J,IACN0J,KAAS8sB,GAAS9sB;AACpB;MAEJ;AAEA,aAAO,CAAEtI,IAAMgoC,EAAAA;IACjB;IAIAJ,mCAAmC5nC,IAAAA;AACjC,aAAOA,MAAQA,OAAS1G,KAAKF,WAAS;AACpC,YAAIyK,EAAwB7D,EAAAA;AAC1B,iBAAOA;AAETA,QAAAA,KAAOA,GAAK3G;MACd;IACF;IAEA6uC,4BAA4B78B,IAAAA;AAC1B,YAAM6K,KAAQ,CAAA,GACR0D,KAAS7Y,EAASzH,KAAKF,SAAS,EAAE8H,aAAainC,GAAAA,CAAAA;AACrD,UAAIC,KAAAA;AAEJ,aAAOxuB,GAAOE,SAAAA,KAAY;AACxB,cAAM9Z,KAAO4Z,GAAOG;AAElB,YAAI2a;AADN,YAAIvxB,EAAwBnD,EAAAA,GAAAA;AAQ1B,cANkB,QAAd00B,KACFA,OAEAA,KAAa,GAGXA,OAAerpB;AACjB+8B,YAAAA,KAAAA;mBACSA;AACT;QAAA;AAEOA,UAAAA,MACTlyB,GAAMjT,KAAKjD,EAAAA;MAEf;AAEA,aAAOkW;IACT;EAAA;AAGF,MAAM4xB,KAAa,SAAS9nC,IAAAA;AAC1B,QAAIA,GAAKD,aAAaG,KAAK6D,WAAW;AACpC,UAAIL,EAAmB1D,EAAAA;AACrB,eAAO;AAGP,aADeA,GAAK0C,YACN9D;IAElB;AAAO,WAAsB,SAAlBxG,EAAQ4H,EAAAA,KAAkB6D,EAAwB7D,EAAAA,IACpD,IAEA;EAEX;AAbA,MAeMmoC,KAAyB,SAASnoC,IAAAA;AACtC,WAAIqoC,GAAqBroC,EAAAA,MAAUqB,WAAW24B,gBACrC6N,GAAyB7nC,EAAAA,IAEzBqB,WAAW04B;EAEtB;AArBA,MAuBMsO,KAAuB,SAASroC,IAAAA;AACpC,WAAI8D,EAAoB9D,EAAAA,IACfqB,WAAW04B,gBAEX14B,WAAW24B;EAEtB;AA7BA,MA+BM6N,KAA2B,SAAS7nC,IAAAA;AACxC,WAAI6D,EAAwB7D,GAAK3G,UAAAA,IACxBgI,WAAW04B,gBAEX14B,WAAW24B;EAEtB;ACjOe,MAAMsO,KAAN,MAAMA;IACnBC,wBAAuBluB,IAAAA;AAAW,UAC5BlJ,IAAAA,EADkBq3B,GAAEA,IAACC,GAAEA,GAAAA,IAAGpuB;AAE9B,UAAIrc,SAAS0qC,wBAAwB;AACnC,cAAA,EAAMC,YAAEA,IAAUrgC,QAAEA,GAAAA,IAAWtK,SAAS0qC,uBAAuBF,IAAGC,EAAAA;AAGlE,eAFAt3B,KAAWnT,SAAS4qC,YAAAA,GACpBz3B,GAAS03B,SAASF,IAAYrgC,EAAAA,GACvB6I;MACT;AAAO,UAAInT,SAAS8qC;AAClB,eAAO9qC,SAAS8qC,oBAAoBN,IAAGC,EAAAA;AAClC,UAAIzqC,SAAS6G,KAAKkkC,iBAAiB;AACxC,cAAMC,KAAmB/3B,GAAAA;AACzB,YAAA;AAGE,gBAAMqhB,KAAYt0B,SAAS6G,KAAKkkC,gBAAAA;AAChCzW,UAAAA,GAAU2W,YAAYT,IAAGC,EAAAA,GACzBnW,GAAU4W,OAAAA;QACZ,SAAS/8B,IAAP;QAAe;AAGjB,eAFAgF,KAAWF,GAAAA,GACXK,GAAY03B,EAAAA,GACL73B;MACT;IACF;IAEAg4B,0BAA0Bh4B,IAAAA;AACxB,YAAMjH,KAAQhB,MAAMC,KAAKgI,GAASi4B,eAAAA,CAAAA;AAIlC,aAAO,CAHOl/B,GAAM,IACRA,GAAMA,GAAMtL,SAAS,EAAA;IAGnC;EAAA;ACjBa,MAAMyqC,KAAN,cAA+B3iC,EAAAA;IAC5CwB,YAAY9O,IAAAA;AACV+O,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKgwC,eAAehwC,KAAKgwC,aAAat5B,KAAK1W,IAAAA,GAC3CA,KAAKoX,qBAAqBpX,KAAKoX,mBAAmBV,KAAK1W,IAAAA,GACvDA,KAAKF,UAAUA,IACfE,KAAKiwC,iBAAiB,IAAIhC,GAAejuC,KAAKF,OAAAA,GAC9CE,KAAKkwC,cAAc,IAAIlB,MACvBhvC,KAAKmwC,YAAY,GACjBtrC,EAAY,aAAa,EAAEE,WAAW/E,KAAKF,SAASmF,cAAcjF,KAAKgwC,aAAAA,CAAAA;IACzE;IAEA3L,mBAAAA;AAA+B,UAAd97B,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACzB,aAAA,UAAIkD,GAAQyB,SACHhK,KAAK2oC,gCAAgChxB,GAAAA,CAAAA,IACnCpP,GAAQu/B,aACV9nC,KAAKowC,uBACHpwC,KAAKqwC,sBACPrwC,KAAKqwC,sBAELrwC,KAAKowC;IAEhB;IAEA9H,iBAAiBrM,IAAAA;AACf,UAAIj8B,KAAKqwC;AAAqB;AAC9BpU,MAAAA,KAAgB1mB,GAAe0mB,EAAAA;AAE/B,YAAMpkB,KAAW7X,KAAKswC,gCAAgCrU,EAAAA;AAClDpkB,MAAAA,OACFG,GAAYH,EAAAA,GACZ7X,KAAKuwC,2BAA2BtU,EAAAA;IAEpC;IAEAuU,+BAA+BC,IAAAA;AAC7BA,MAAAA,KAAal7B,GAAek7B,EAAAA;AAC5B,YAAMlZ,KAAgBv3B,KAAK0wC,mBAAmBD,GAAW,EAAA,GACnDtW,KAAcn6B,KAAK0wC,mBAAmBD,GAAW,EAAA;AACvDzwC,WAAKsoC,iBAAiB,CAAE/Q,IAAe4C,EAAAA,CAAAA;IACzC;IAEAyT,6BAA6B3R,IAAAA;AAC3B,YAAMpkB,KAAW7X,KAAKswC,gCAAgCrU,EAAAA;AACtD,UAAIpkB;AACF,eAAO7X,KAAK6vC,0BAA0Bh4B,EAAAA,EAAU;IAEpD;IAEA2xB,uBAAuB1N,IAAAA;AACrB,YAAMp1B,KAAOkJ,MAAMC,KAAK7P,KAAK2uC,8BAA8B7S,EAAAA,CAAAA,EAAW;AACtE,aAAO1xB,EAAmB1D,EAAAA;IAC5B;IAEAiqC,OAAAA;AAC2B,WAArB3wC,KAAKmwC,gBACPnwC,KAAKuwC,2BAAAA,GACLvwC,KAAKqwC,sBAAsBrwC,KAAKqkC,iBAAAA;IAEpC;IAEAuM,SAAAA;AACE,UAAyB,KAAA,EAAnB5wC,KAAKmwC,WAAiB;AAC1B,cAAA,EAAME,qBAAEA,GAAAA,IAAwBrwC;AAEhC,YADAA,KAAKqwC,sBAAsB,MACA,QAAvBA;AACF,iBAAOrwC,KAAKsoC,iBAAiB+H,EAAAA;MAEjC;IACF;IAEAQ,iBAAAA;AAAiB,UAAAj5B;AACf,aAAwB,UAAxBA,KAAOL,GAAAA,MAAAA,WAAiBK,KAAAA,SAAjBA,GAAmBK,gBAAAA;IAC5B;IAEAmtB,uBAAAA;AAAuB,UAAA0L;AACrB,aAAA,UAAoBA,UAAbA,KAAAn5B,GAAAA,MAAAA,WAAam5B,KAAAA,SAAbA,GAAeC;IACxB;IAEAC,sBAAAA;AACE,aAAA,CAAQhxC,KAAKolC,qBAAAA;IACf;IAEAuD,gCAAgC9wB,IAAUtP,IAAAA;AACxC,UAAgB,QAAZsP,MAAAA,CAAqB7X,KAAKixC,sBAAsBp5B,EAAAA;AAAW;AAE/D,YAAMjC,KAAQ5V,KAAKkuC,mCAAmCr2B,GAASO,gBAAgBP,GAASqjB,aAAa3yB,EAAAA;AACrG,UAAA,CAAKqN;AAAO;AAEZ,YAAMC,KAAMgC,GAASk5B,YAAAA,SAEjB/wC,KAAKkuC,mCAAmCr2B,GAASQ,cAAcR,GAASsjB,WAAW5yB,EAAAA;AAEvF,aAAOgN,GAAe,CAAEK,IAAOC,EAAAA,CAAAA;IACjC;IAEAm6B,eAAAA;AACE,aAAOhwC,KAAKkxC,iBAAAA;IACd;IAEAA,mBAAAA;AACE,UAAIC;AACJnxC,WAAKoxC,SAAAA;AAEL,YAAMC,KAASA,MAAAA;AAQb,YAPArxC,KAAKoxC,SAAAA,OACLE,aAAaC,EAAAA,GAEb3hC,MAAMC,KAAKshC,EAAAA,EAAgBloC,QAASvD,CAAAA,OAAAA;AAClCA,UAAAA,GAAQE,QAAAA;QAAS,CAAA,GAGfqB,EAAoBvC,UAAU1E,KAAKF,OAAAA;AACrC,iBAAOE,KAAKoX,mBAAAA;MACd,GAGIm6B,KAAgBn8B,WAAWi8B,IAAQ,GAAA;AAEzCF,MAAAA,KAAiB,CAAE,aAAa,SAAA,EAAY7gC,IAAKxL,CAAAA,OAC/CD,EAAYC,IAAW,EAAEC,WAAWL,UAAUO,cAAcosC,GAAAA,CAAAA,CAAAA;IAEhE;IAEAj6B,qBAAAA;AACE,UAAA,CAAKpX,KAAKoxC,UAAAA,CAAWrqC,EAAqB/G,KAAKF,OAAAA;AAC7C,eAAOE,KAAKuwC,2BAAAA;IAEhB;IAEAA,2BAA2BtU,IAAAA;AAEwC,UAAAvQ,IAAA8lB;AADjE,WAAqB,QAAjBvV,KAAwBA,KAAgBA,KAAgBj8B,KAAK2oC,gCAAgChxB,GAAAA,CAAAA,MAAAA,CAC1F5B,GAAekmB,IAAej8B,KAAKowC,oBAAAA;AAEtC,eADApwC,KAAKowC,uBAAuBnU,IACR,UAApBvQ,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAAwB8lB,UAAxBA,KAAb9lB,GAAe+lB,2BAAAA,WAAsBD,KAAAA,SAArCA,GAAAzrC,KAAA2lB,IAAwC1rB,KAAKowC,qBAAqBnhC,MAAM,CAAA,CAAA;IAGrF;IAEAqhC,gCAAgCrU,IAAAA;AAC9B,YAAMyV,KAAa1xC,KAAKyuC,mCAAmCxS,GAAc,EAAA,GACnE0V,KAAWh8B,GAAiBsmB,EAAAA,IAC9ByV,KACA1xC,KAAKyuC,mCAAmCxS,GAAc,EAAA,KAAOyV;AAEjE,UAAkB,QAAdA,MAAkC,QAAZC,IAAkB;AAC1C,cAAM95B,KAAWnT,SAAS4qC,YAAAA;AAG1B,eAFAz3B,GAAS03B,SAAAA,GAAY3/B,MAAMC,KAAK6hC,MAAc,CAAA,CAAA,CAAA,GAC9C75B,GAAS+5B,OAAAA,GAAUhiC,MAAMC,KAAK8hC,MAAY,CAAA,CAAA,CAAA,GACnC95B;MACT;IACF;IAEA64B,mBAAmBmB,IAAAA;AACjB,YAAMh6B,KAAW7X,KAAKivC,wBAAwB4C,EAAAA;AAChC,UAAAC;AAAd,UAAIj6B;AACF,eAAqD,UAArDi6B,KAAO9xC,KAAK2oC,gCAAgC9wB,EAAAA,MAAAA,WAASi6B,KAAAA,SAA9CA,GAAiD;IAE5D;IAEAb,sBAAsBp5B,IAAAA;AACpB,aAAIA,GAASk5B,YACJ9pC,EAAoBjH,KAAKF,SAAS+X,GAASO,cAAAA,IAGhDnR,EAAoBjH,KAAKF,SAAS+X,GAASO,cAAAA,KAC3CnR,EAAoBjH,KAAKF,SAAS+X,GAASQ,YAAAA;IAGjD;EAAA;AAGF03B,KAAiBxzB,YAAY,mDAAA,GAC7BwzB,GAAiBxzB,YAAY,mDAAA,GAC7BwzB,GAAiBxzB,YAAY,8CAAA,GAC7BwzB,GAAiBxzB,YAAY,qCAAA,GAC7BwzB,GAAiBxzB,YAAY,uCAAA;AAAA,MAAA,KAAA,OAAA,OAAA,EAAA,WAAA,MAAA,YAAA,IAAA,mBAAA,IAAA,iBAAA,IAAA,OAAA,IAAA,aAAA,IAAA,UAAA,IAAA,QAAA,IAAA,YAAA,IAAA,eAAA,IAAA,oBAAA,IAAA,gBAAA,IAAA,mBAAA,IAAA,OAAA,IAAA,aAAA,IAAA,kBAAA,IAAA,gBAAA,IAAA,aAAA,IAAA,MAAA,IAAA,aAAA,GAAA,CAAA;AAAA,MAAA,KAAA,OAAA,OAAA,EAAA,WAAA,MAAA,YAAA,IAAA,gBAAA,IAAA,WAAA,IAAA,cAAA,IAAA,WAAA,IAAA,2BAAA,IAAA,UAAA,GAAA,CAAA;AC9L7B,MAAA,EAAMnZ,MAAEA,IAAIse,KAAEA,IAAKqwB,UAAAA,GAAAA,IAAar+B;AAAhC,MAEMs+B,KAAW,SAAS78B,IAAAA;AACxB,WAAO,WAAA;AACL,YAAM88B,KAAW98B,GAAGrH,MAAM9N,MAAMqF,SAAAA;AAChC4sC,MAAAA,GAASC,GAAAA,GACJlyC,KAAKmyC,UACRnyC,KAAKmyC,QAAQ,CAAA,IAEfnyC,KAAKmyC,MAAMxoC,KAAKsoC,GAASvvC,IAAAA;IAAAA;EAE7B;AAEe,MAAM0vC,KAAN,cAAyChlC,EAAAA;IACtDwB,YAAYiT,IAAiB/hB,IAASquC,IAAAA;AAAyB,UAAd5lC,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACzDwJ,YAAAA,GAASxJ,SAAAA,GAkDXilB,GAAAtqB,MAAA,sBAEqBgyC,GAAS,OACrB,EACLE,IAAIA,MAAAA;AACFlyC,aAAKF,QAAQgJ,QAAQ+Z,cAAAA;MAAkB,GAEzCngB,MAAMA,MAAAA,OAAa1C,KAAKF,QAAQgJ,QAAQ+Z,YAAAA,EAAAA,CAAAA,GAE1CyH,GAAAtqB,MAAA,cAEWgyC,GAAS,MAAA;AAQpB,cAAMlyC,KAAUuI,EAAY,EAC1BvJ,SAAS,OACTiK,WAAW2Y,GAAIvU,mBACftE,MAAM,EAAEga,aAAAA,KAAa,GACrBxZ,YAAYhB,EAAY,EACtBvJ,SAAS,OACTiK,WAAW,mBACXM,YAAYhB,EAAY,EACtBvJ,SAAS,QACTiK,WAAW,gDACXM,YAAYhB,EAAY,EACtBvJ,SAAS,UACTiK,WAAW,mCACXK,aAAahG,GAAKZ,QAClB5D,YAAY,EAAEyzC,OAAOjvC,GAAKZ,OAAAA,GAC1BqG,MAAM,EAAEypC,YAAY,SAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AA+C5B,eAzCItyC,KAAK2M,WAAWqZ,cAAAA,KAOlBlmB,GAAQyJ,YACNlB,EAAY,EACVvJ,SAAS,OACTiK,WAAW2Y,GAAI3U,6BACf1D,YAAYhB,EAAY,EACtBvJ,SAAS,QACTiK,WAAW2Y,GAAI5U,oBACfzD,YAAY,CACVhB,EAAY,EACVvJ,SAAS,QACTiK,WAAW2Y,GAAI1U,gBACf5D,aAAapJ,KAAK2M,WAAWwW,YAAAA,GAC7BvkB,YAAY,EAAEyzC,OAAOryC,KAAK2M,WAAWwW,YAAAA,EAAAA,EAAAA,CAAAA,GAEvC9a,EAAY,EACVvJ,SAAS,QACTiK,WAAW2Y,GAAIxU,gBACf9D,aAAapJ,KAAK2M,WAAWyW,qBAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAQzCve,EAAY,SAAS,EAAEE,WAAWjF,IAASmF,cAAcjF,KAAKuyC,gBAAAA,CAAAA,GAC9D1tC,EAAY,SAAS,EACnBE,WAAWjF,IACXkF,kBAAkB,sBAClBC,cAAcjF,KAAKwyC,qBAAAA,CAAAA,GAGrBtsC,EAAa,kCAAkC,EAAEnB,WAAW/E,KAAKF,SAASlB,YAAY,EAAE4N,SAAS1M,IAAS6M,YAAY3M,KAAK2M,WAAAA,EAAAA,CAAAA,GAEpH,EACLulC,IAAIA,MAAMlyC,KAAKF,QAAQyJ,YAAYzJ,EAAAA,GACnC4C,MAAMA,MAAM4E,EAAWxH,EAAAA,EAAAA;MACxB,CAAA,CAAA,GACDwqB,GAAAtqB,MAAA,wBAEqBgyC,GAAS,MAAA;AAC9B,cAAMS,KAAWpqC,EAAY,EAC3BvJ,SAAS,YACTiK,WAAW2Y,GAAI7U,yBACfjO,YAAY,EAAE8zC,aAAatvC,GAAKnB,mBAAAA,GAChC4G,MAAM,EAAEga,aAAAA,KAAa,EAAA,CAAA;AAEvB4vB,QAAAA,GAASjuC,QAAQxE,KAAK6hB,gBAAgBmB,WAAAA;AAEtC,cAAM2vB,KAAgBF,GAAS31B,UAAAA;AAC/B61B,QAAAA,GAAczpC,UAAUC,IAAI,uBAAA,GAC5BwpC,GAAcC,WAAAA;AAEd,cAAMC,KAAa,WAAA;AACjBF,UAAAA,GAAcnuC,QAAQiuC,GAASjuC,OAC/BiuC,GAAS7pC,MAAMwc,SAASutB,GAAcG,eAAe;QAAA;AAGvDjuC,UAAY,SAAS,EAAEE,WAAW0tC,IAAUxtC,cAAc4tC,GAAAA,CAAAA,GAC1DhuC,EAAY,SAAS,EAAEE,WAAW0tC,IAAUxtC,cAAcjF,KAAK+yC,gBAAAA,CAAAA,GAC/DluC,EAAY,WAAW,EAAEE,WAAW0tC,IAAUxtC,cAAcjF,KAAKgzC,kBAAAA,CAAAA,GACjEnuC,EAAY,UAAU,EAAEE,WAAW0tC,IAAUxtC,cAAcjF,KAAKizC,iBAAAA,CAAAA,GAChEpuC,EAAY,QAAQ,EAAEE,WAAW0tC,IAAUxtC,cAAcjF,KAAKkzC,eAAAA,CAAAA;AAE9D,cAAMnwB,KAAa/iB,KAAKF,QAAQyU,cAAc,YAAA,GACxC4+B,KAAoBpwB,GAAWjG,UAAAA;AAErC,eAAO,EACLo1B,IAAIA,MAAAA;AAOF,cANAnvB,GAAWna,MAAMq0B,UAAU,QAC3BkW,GAAkB5pC,YAAYkpC,EAAAA,GAC9BU,GAAkB5pC,YAAYopC,EAAAA,GAC9BQ,GAAkBjqC,UAAUC,IAAG,GAAA1F,OAAIie,GAAI9U,mBAAiB,WAAA,CAAA,GACxDmW,GAAWsb,cAAcjqB,aAAa++B,IAAmBpwB,EAAAA,GACzD8vB,GAAAA,GACI7yC,KAAKuI,QAAQ6qC;AACf,mBAAOl+B,GAAM,MAAMu9B,GAASY,MAAAA,CAAAA;QAC9B,GAEF3wC,OAAAA;AACE4E,YAAW6rC,EAAAA,GACXpwB,GAAWna,MAAMq0B,UAAU;QAC7B,EAAA;MACD,CAAA,CAAA,GAnLDj9B,KAAKuyC,kBAAkBvyC,KAAKuyC,gBAAgB77B,KAAK1W,IAAAA,GACjDA,KAAKwyC,uBAAuBxyC,KAAKwyC,qBAAqB97B,KAAK1W,IAAAA,GAC3DA,KAAKgzC,oBAAoBhzC,KAAKgzC,kBAAkBt8B,KAAK1W,IAAAA,GACrDA,KAAK+yC,kBAAkB/yC,KAAK+yC,gBAAgBr8B,KAAK1W,IAAAA,GACjDA,KAAKizC,mBAAmBjzC,KAAKizC,iBAAiBv8B,KAAK1W,IAAAA,GACnDA,KAAKkzC,iBAAiBlzC,KAAKkzC,eAAex8B,KAAK1W,IAAAA,GAC/CA,KAAK6hB,kBAAkBA,IACvB7hB,KAAKF,UAAUA,IACfE,KAAKmuC,YAAYA,IACjBnuC,KAAKuI,UAAUA,IACfvI,KAAK2M,aAAa3M,KAAK6hB,gBAAgBlV,YACT,QAA1B7N,EAAQkB,KAAKF,OAAAA,MACfE,KAAKF,UAAUE,KAAKF,QAAQgK,aAE9B9J,KAAKszC,QAAAA;IACP;IAEAA,UAAAA;AACEtzC,WAAKuzC,mBAAAA,GACLvzC,KAAKwzC,WAAAA,GACDxzC,KAAK2M,WAAWqZ,cAAAA,KAClBhmB,KAAKyzC,qBAAAA;IAET;IAEAC,YAAAA;AAAY,UAAAhoB;AACV,UAAIhpB,KAAO1C,KAAKmyC,MAAM5F,IAAAA;AAEtB,WADAvsC,KAAK2zC,mBAAAA,GACEjxC;AACLA,QAAAA,GAAAA,GACAA,KAAO1C,KAAKmyC,MAAM5F,IAAAA;AAEP7gB,gBAAbA,KAAA1rB,KAAK4rB,aAAAA,WAAQF,MAAbA,GAAekoB,6BAA6B5zC,IAAAA;IAC9C;IAIA2zC,qBAAAA;AACE,UAA2B,QAAvB3zC,KAAK6zC,gBAAwB;AAC/B,cAAMr1C,KAAUwB,KAAK6zC;AAER,YAAAjnB,IAAAC,IAENoW,IAAA6Q;AAFP,YADA9zC,KAAK6zC,iBAAiB,MAClBr1C;AAAAA,oBACFouB,KAAAA,KAAKhB,aAAAA,WAAQgB,MAA2D,UAA3DC,KAAbD,GAAemnB,8DAAAA,WAAyDlnB,MAAxEA,GAAA9mB,KAAA6mB,IAA2E,EAAEpuB,SAAAA,GAAAA,GAAWwB,KAAK2M,UAAAA;;AAEhF,oBAAbs2B,KAAIjjC,KAAC4rB,aAAAA,WAAQqX,MAA0D,UAA1D6Q,KAAb7Q,GAAe+Q,6DAAAA,WAAwDF,MAAvEA,GAAA/tC,KAAAk9B,IAA0E,WAAWjjC,KAAK2M,UAAAA;MAE9F;IACF;IAyIA4lC,gBAAgB5sC,IAAAA;AAEd,aADAA,GAAMR,eAAAA,GACCQ,GAAMsuC,gBAAAA;IACf;IAEAzB,qBAAqB7sC,IAAAA;AAAO,UAAA6+B;AAE1B,UACO,aAFQ7+B,GAAME,OAAOwG,aAAa,kBAAA;AAGrC,eAAoBm4B,UAApBA,KAAOxkC,KAAK4rB,aAAAA,WAAQ4Y,KAAAA,SAAbA,GAAe0P,8CAA8Cl0C,KAAK2M,UAAAA;IAE/E;IAEAqmC,kBAAkBrtC,IAAAA;AAC0B,UAAAwiC,IAAAgM;AAA1C,UAAgC,aAA5BpC,GAASpsC,GAAMyuC;AAGjB,eAFAzuC,GAAMR,eAAAA,GACNnF,KAAK2zC,mBAAAA,GAAAA,UACLxL,KAAOnoC,KAAK4rB,aAAAA,WAAQuc,MAAiDgM,UAAjDA,KAAbhM,GAAekM,oDAAAA,WAA+CF,KAAAA,SAA9DA,GAAApuC,KAAAoiC,IAAiEnoC,KAAK2M,UAAAA;IAEjF;IAEAomC,gBAAgBptC,IAAAA;AACd3F,WAAK6zC,iBAAiBluC,GAAME,OAAOrB,MAAMN,QAAQ,OAAO,GAAA,EAAK8O,KAAAA;IAC/D;IAEAigC,iBAAiBttC,IAAAA;AACf,aAAO3F,KAAK2zC,mBAAAA;IACd;IAEAT,eAAevtC,IAAAA;AACb,aAAO3F,KAAK2zC,mBAAAA;IACd;EAAA;ACtOa,MAAMW,KAAN,cAAoClnC,EAAAA;IACjDwB,YAAY9O,IAASgiC,IAAAA;AACnBjzB,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKu0C,WAAWv0C,KAAKu0C,SAAS79B,KAAK1W,IAAAA,GACnCA,KAAKw0C,UAAUx0C,KAAKw0C,QAAQ99B,KAAK1W,IAAAA,GACjCA,KAAKy0C,qBAAqBz0C,KAAKy0C,mBAAmB/9B,KAAK1W,IAAAA,GAEvDA,KAAKF,UAAUA,IACfE,KAAK8hC,cAAcA,IACnB9hC,KAAK00C,eAAe,IAAI9sB,GAAa5nB,KAAK8hC,YAAYp9B,UAAU,EAAE5E,SAASE,KAAKF,QAAAA,CAAAA,GAEhF+E,EAAY,SAAS,EAAEE,WAAW/E,KAAKF,SAASmF,cAAcjF,KAAKu0C,SAAAA,CAAAA,GACnE1vC,EAAY,QAAQ,EAAEE,WAAW/E,KAAKF,SAASmF,cAAcjF,KAAKw0C,QAAAA,CAAAA,GAClE3vC,EAAY,SAAS,EACnBE,WAAW/E,KAAKF,SAChBkF,kBAAkB,4BAClBG,gBAAAA,KAAgB,CAAA,GAElBN,EAAY,aAAa,EACvBE,WAAW/E,KAAKF,SAChBkF,kBAAkB5G,GAClB6G,cAAcjF,KAAKy0C,mBAAAA,CAAAA,GAErB5vC,EAAY,SAAS,EAAEE,WAAW/E,KAAKF,SAASkF,kBAAgBvB,IAAAA,OAAMrF,CAAAA,GAAsB+G,gBAAAA,KAAgB,CAAA;IAC9G;IAEAovC,SAAS5uC,IAAAA;AAAO,UAAAgvC;AACd,YAAMz4B,KAAUA,MAAAA;AACK,YAAAwP,IAAAiX;AAAnB,YAAA,CAAK3iC,KAAK40C;AAER,iBADA50C,KAAK40C,UAAAA,MACelpB,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAAAA,UAAAiX,KAAbjX,GAAempB,kCAAAA,WAA6BlS,KAAAA,SAA5CA,GAAA58B,KAAA2lB,EAAAA;MACT;AAGF,cAAA,UAAOipB,KAAA30C,KAAK80C,gBAAAA,WAAWH,KAAAA,SAAhBA,GAAkBvnB,KAAKlR,EAAAA,MAAYA,GAAAA;IAC5C;IAEAs4B,QAAQ7uC,IAAAA;AACN3F,WAAK80C,cAAc,IAAI/4B,QAASC,CAAAA,OACvB9G,GAAM,MAAA;AAC8B,YAAA0X,IAAAoW;AAApCj8B,UAAqB/G,KAAKF,OAAAA,MAC7BE,KAAK40C,UAAU,MAAA,UACfhoB,KAAAA,KAAKhB,aAAAA,WAAQgB,MAA8B,UAA9BoW,KAAbpW,GAAemoB,iCAAAA,WAA4B/R,MAA3CA,GAAAj9B,KAAA6mB,EAAAA;AAGF,eADA5sB,KAAK80C,cAAc,MACZ94B,GAAAA;MAAS,CAAA,CAAA;IAGtB;IAEAy4B,mBAAmB9uC,IAAOE,IAAAA;AAAQ,UAAAo9B,IAAAC;AAChC,YAAMv2B,KAAa3M,KAAKg1C,yBAAyBnvC,EAAAA,GAC3CutC,KAAAA,CAAAA,CAAgBttC,EAA2BH,GAAME,QAAQ,EAAEb,kBAAkB,aAAA,CAAA;AACnF,aAAoBi+B,UAApBA,KAAOjjC,KAAK4rB,aAAAA,WAAQqX,MAA0C,UAA1CC,KAAbD,GAAegS,6CAAAA,WAAwC/R,KAAAA,SAAvDA,GAAAn9B,KAAAk9B,IAA0Dt2B,IAAY,EAAEymC,aAAAA,GAAAA,CAAAA;IACjF;IAEA8B,yBAAAA;AACE,aAAIl1C,KAAKm1C,oBAAAA,IACAn1C,KAAK00C,aAAazsB,gBAElBjoB,KAAKF;IAEhB;IAEA+nB,SAAAA;AAAS,UAAAsiB,IAAAC,IAO0D5F,IAAA4Q,IAAAjN,IAAAkN;AAAAA,OAN7Dr1C,KAAK0iC,aAAa1iC,KAAK8hC,YAAYY,aACrC1iC,KAAK00C,aAAa1sB,YAAYhoB,KAAK8hC,YAAYp9B,QAAAA,GAC/C1E,KAAK00C,aAAa7sB,OAAAA,GAClB7nB,KAAK0iC,WAAW1iC,KAAK8hC,YAAYY,WAG/B1iC,KAAKs1C,oBAAAA,KAAAA,CAA0Bt1C,KAAK00C,aAAavsB,SAAAA,OAAAA,UACnDqc,KAAAA,KAAK5Y,aAAAA,WAAQ4Y,MAA2C,UAA3C4Q,KAAb5Q,GAAe+Q,8CAAAA,WAAyCH,MAAxDA,GAAArvC,KAAAy+B,EAAAA,GACAxkC,KAAK00C,aAAa5sB,KAAAA,GAAAA,UAClBqgB,KAAAA,KAAKvc,aAAAA,WAAQuc,MAA0C,UAA1CkN,KAAblN,GAAeqN,6CAAAA,WAAwCH,MAAvDA,GAAAtvC,KAAAoiC,EAAAA;AAGF,aAAoBgC,UAApBA,KAAOnqC,KAAK4rB,aAAAA,WAAQue,MAAAA,UAAAC,KAAbD,GAAesL,mCAAAA,WAA8BrL,KAAAA,SAA7CA,GAAArkC,KAAAokC,EAAAA;IACT;IAEAuL,sBAAsB/nC,IAAAA;AAEpB,aADA3N,KAAKkd,wBAAwBvP,EAAAA,GACtB3N,KAAK6nB,OAAAA;IACd;IAEA3K,wBAAwBvP,IAAAA;AACtB,aAAO3N,KAAK00C,aAAax3B,wBAAwBvP,EAAAA;IACnD;IAEAwQ,uBAAAA;AACE,aAAOne,KAAK00C,aAAav2B,qBAAAA;IAC3B;IAEAG,oBAAAA;AACE,aAAOte,KAAK00C,aAAap2B,kBAAAA;IAC3B;IAEAC,qBAAAA;AACE,aAAOve,KAAK00C,aAAan2B,mBAAAA;IAC3B;IAEAo3B,mBAAAA;AACE,aAAO31C,KAAK00C,aAAah2B,0BAAAA;IAC3B;IAIAy2B,sBAAAA;AACE,aAAA,CAAA,CAASn1C,KAAK41C;IAChB;IAEAC,qCAAqClpC,IAAYpE,IAAAA;AAAS,UAAAutC;AACxD,WAAyB,UAArBA,KAAI91C,KAAC41C,qBAAAA,WAAgBE,KAAAA,SAArBA,GAAuBnpC,gBAAeA;AAAY;AACtD,YAAM7M,KAAUE,KAAK00C,aAAaz2B,qBAAqBtR,EAAAA;AACvD,UAAA,CAAK7M;AAAS;AAEdE,WAAK+1C,0BAAAA;AACL,YAAMl0B,KAAkB7hB,KAAK8hC,YAAYp9B,SAAS+2B,gCAAgC9uB,EAAAA;AAClF3M,WAAK41C,mBAAmB,IAAIxD,GAA2BvwB,IAAiB/hB,IAASE,KAAKF,SAASyI,EAAAA,GAC/FvI,KAAK41C,iBAAiBhqB,WAAW5rB;IACnC;IAEA+1C,4BAAAA;AAA4B,UAAAC;AAC1B,aAA4B,UAA5BA,KAAOh2C,KAAK41C,qBAAAA,WAAgBI,KAAAA,SAArBA,GAAuBtC,UAAAA;IAChC;IAIAE,+BAAAA;AAEE,aADA5zC,KAAK41C,mBAAmB,MACjB51C,KAAK6nB,OAAAA;IACd;IAEAksB,0DAA0Dn1C,IAAY+N,IAAAA;AAAY,UAAA29B,IAAAC;AAEhF,aAAA,UADAD,KAAAA,KAAK1e,aAAAA,WAAQ0e,MAA2CC,UAA3CA,KAAbD,GAAe2L,8CAAAA,WAAyC1L,MAAxDA,GAAAxkC,KAAAukC,IAA2D39B,EAAAA,GACpD3M,KAAK8hC,YAAY9O,8BAA8Bp0B,IAAY+N,EAAAA;IACpE;IAEAqnC,yDAAyDlqB,IAAWnd,IAAAA;AAAY,UAAA89B,IAAAC;AAE9E,aAAA,UADAD,KAAAA,KAAK7e,aAAAA,WAAQ6e,MAA2CC,UAA3CA,KAAbD,GAAewL,8CAAAA,WAAyCvL,MAAxDA,GAAA3kC,KAAA0kC,IAA2D99B,EAAAA,GACpD3M,KAAK8hC,YAAY3I,6BAA6BrP,IAAWnd,EAAAA;IAClE;IAEAunC,8CAA8CvnC,IAAAA;AAAY,UAAAi+B,IAAAC;AACxD,aAAoBD,UAApBA,KAAO5qC,KAAK4rB,aAAAA,WAAQgf,MAAoD,UAApDC,KAAbD,GAAesL,uDAAAA,WAAkDrL,KAAAA,SAAjEA,GAAA9kC,KAAA6kC,IAAoEj+B,EAAAA;IAC7E;IAEA0nC,gDAAgD1nC,IAAAA;AAAY,UAAAo+B,IAAAC;AAC1D,aAAoBD,UAApBA,KAAO/qC,KAAK4rB,aAAAA,WAAQmf,MAAsD,UAAtDC,KAAbD,GAAeoL,yDAAAA,WAAoDnL,KAAAA,SAAnEA,GAAAjlC,KAAAglC,IAAsEp+B,EAAAA;IAC/E;IAIA2oC,sBAAAA;AACE,aAAA,CAAQt1C,KAAKm1C,oBAAAA;IACf;IAEAH,yBAAyBl1C,IAAAA;AACvB,aAAOE,KAAK8hC,YAAYp9B,SAASmuB,kBAAkBjyB,SAASd,GAAQgJ,QAAQib,QAAQ,EAAA,CAAA;IACtF;EAAA;ACnKa,MAAMqyB,KAAN,cAAyBhpC,EAAAA;EAAAA;ACQxC,MAAMipC,KAAuB;AAA7B,MACMC,KAAe,IAAA7yC,OAAO4yC,IAAuB,GAAA;AADnD,MAGM9tC,KAAU,EACd3J,YAAAA,MACA23C,WAAAA,MACAC,eAAAA,MACAC,uBAAAA,MACAC,SAAAA,KAAS;AAGI,MAAMC,KAAN,cAA+BvpC,EAAAA;IAC5CwB,YAAY9O,IAAAA;AACV+O,YAAM/O,EAAAA,GACNE,KAAK42C,YAAY52C,KAAK42C,UAAUlgC,KAAK1W,IAAAA,GACrCA,KAAKF,UAAUA,IACfE,KAAK62C,WAAW,IAAI9qC,OAAO4qC,iBAAiB32C,KAAK42C,SAAAA,GACjD52C,KAAK4V,MAAAA;IACP;IAEAA,QAAAA;AAEE,aADA5V,KAAKqX,MAAAA,GACErX,KAAK62C,SAASC,QAAQ92C,KAAKF,SAASyI,EAAAA;IAC7C;IAEAsO,OAAAA;AACE,aAAO7W,KAAK62C,SAASE,WAAAA;IACvB;IAEAH,UAAUI,IAAAA;AAGmB,UAAAtrB,IAAAurB;AAA3B,UAFAj3C,KAAKg3C,UAAUrtC,KAAAA,GAAQiG,MAAMC,KAAK7P,KAAKk3C,yBAAyBF,EAAAA,KAAc,CAAA,CAAA,CAAA,GAE1Eh3C,KAAKg3C,UAAU1xC;AAEjB,eADa,UAAbomB,KAAI1rB,KAAC4rB,aAAAA,WAAQF,MAAkB,UAAlBurB,KAAbvrB,GAAeyrB,qBAAAA,WAAgBF,MAA/BA,GAAAlxC,KAAA2lB,IAAkC1rB,KAAKo3C,mBAAAA,CAAAA,GAChCp3C,KAAKqX,MAAAA;IAEhB;IAIAA,QAAAA;AACErX,WAAKg3C,YAAY,CAAA;IACnB;IAEAE,yBAAyBF,IAAAA;AACvB,aAAOA,GAAU//B,OAAQogC,CAAAA,OAChBr3C,KAAKs3C,sBAAsBD,EAAAA,CAAAA;IAEtC;IAEAC,sBAAsBD,IAAAA;AACpB,UAAIr3C,KAAKu3C,cAAcF,GAASxxC,MAAAA;AAC9B,eAAA;AAEF,iBAAWa,MAAQkJ,MAAMC,KAAK7P,KAAKw3C,wBAAwBH,EAAAA,CAAAA;AACzD,YAAIr3C,KAAKy3C,kBAAkB/wC,EAAAA;AAAO,iBAAA;AAEpC,aAAA;IACF;IAEA+wC,kBAAkB/wC,IAAAA;AAChB,aAAOA,OAAS1G,KAAKF,WAAAA,CAAYE,KAAKu3C,cAAc7wC,EAAAA,KAAAA,CAAU8D,EAAoB9D,EAAAA;IACpF;IAEA6wC,cAAc7wC,IAAAA;AACZ,aAAOZ,EAA2BY,IAAM,EAAE1B,kBAAkBsxC,GAAAA,CAAAA;IAC9D;IAEAkB,wBAAwBH,IAAAA;AACtB,YAAMz6B,KAAQ,CAAA;AACd,cAAQy6B,GAASrsC,MAAAA;QACf,KAAK;AACCqsC,UAAAA,GAAS5jC,kBAAkB4iC,MAC7Bz5B,GAAMjT,KAAK0tC,GAASxxC,MAAAA;AAEtB;QACF,KAAK;AAEH+W,UAAAA,GAAMjT,KAAK0tC,GAASxxC,OAAO9F,UAAAA,GAC3B6c,GAAMjT,KAAK0tC,GAASxxC,MAAAA;AACpB;QACF,KAAK;AAEH+W,UAAAA,GAAMjT,KAAAA,GAAQiG,MAAMC,KAAKwnC,GAASK,cAAc,CAAA,CAAA,CAAA,GAChD96B,GAAMjT,KAAAA,GAAQiG,MAAMC,KAAKwnC,GAASM,gBAAgB,CAAA,CAAA,CAAA;MAAA;AAGtD,aAAO/6B;IACT;IAEAw6B,qBAAAA;AACE,aAAOp3C,KAAK43C,uBAAAA;IACd;IAEAA,yBAAAA;AACE,YAAA,EAAMC,WAAEA,IAASC,WAAEA,GAAAA,IAAc93C,KAAK+3C,gCAAAA,GAChCC,KAAch4C,KAAKi4C,4BAAAA;AAEzBroC,YAAMC,KAAKmoC,GAAYH,SAAAA,EAAW5uC,QAASivC,CAAAA,OAAAA;AACpCtoC,cAAMC,KAAKgoC,EAAAA,EAAW5tC,SAASiuC,EAAAA,KAClCL,GAAUluC,KAAKuuC,EAAAA;MACjB,CAAA,GAGFJ,GAAUnuC,KAAAA,GAAQiG,MAAMC,KAAKmoC,GAAYF,aAAa,CAAA,CAAA,CAAA;AAEtD,YAAMK,KAAU,CAAA,GAEVvO,KAAQiO,GAAU9mC,KAAK,EAAA;AACzB64B,MAAAA,OACFuO,GAAQC,YAAYxO;AAGtB,YAAMyO,KAAUP,GAAU/mC,KAAK,EAAA;AAK/B,aAJIsnC,OACFF,GAAQG,cAAcD,KAGjBF;IACT;IAEAI,mBAAmBvtC,IAAAA;AACjB,aAAO4E,MAAMC,KAAK7P,KAAKg3C,SAAAA,EAAW//B,OAAQogC,CAAAA,OAAaA,GAASrsC,SAASA,EAAAA;IAC3E;IAEAitC,8BAAAA;AACE,UAAIG,IAAWI;AACf,YAAMd,KAAa,CAAA,GACbC,KAAe,CAAA;AAErB/nC,YAAMC,KAAK7P,KAAKu4C,mBAAmB,WAAA,CAAA,EAActvC,QAASouC,CAAAA,OAAAA;AACxDK,QAAAA,GAAW/tC,KAAAA,GAAQiG,MAAMC,KAAKwnC,GAASK,cAAc,CAAA,CAAA,CAAA,GACrDC,GAAahuC,KAAAA,GAAQiG,MAAMC,KAAKwnC,GAASM,gBAAgB,CAAA,CAAA,CAAA;MAAI,CAAA;AAIvC,YAAtBD,GAAWpyC,UAAwC,MAAxBqyC,GAAaryC,UAAgBuE,EAAwB8tC,GAAa,EAAA,KAG7FS,KAAY,CAAA,GACZI,KAAc,CAAE,IAAA,MAEhBJ,KAAYK,GAAgBf,EAAAA,GAC5Bc,KAAcC,GAAgBd,EAAAA;AAGhC,YAAME,KAAYO,GAAUnhC,OAAO,CAACzX,IAAMuS,OAAUvS,OAASg5C,GAAYzmC,GAAAA,EAAQzB,IAAIiI,EAAAA,GAC/Eu/B,KAAYU,GAAYvhC,OAAO,CAACzX,IAAMuS,OAAUvS,OAAS44C,GAAUrmC,GAAAA,EAAQzB,IAAIiI,EAAAA;AAErF,aAAO,EAAEs/B,WAAAA,IAAWC,WAAAA,GAAAA;IACtB;IAEAC,kCAAAA;AACE,UAAInO,IAAOC;AACX,YAAM6O,KAAqB14C,KAAKu4C,mBAAmB,eAAA;AAEnD,UAAIG,GAAmBpzC,QAAQ;AAC7B,cAAMqzC,KAAgBD,GAAmB,IACvCE,KAAcF,GAAmBA,GAAmBpzC,SAAS,IAIzDuzC,KvCxJyB,SAASC,IAAWC,IAAAA;AACvD,cAAInP,IAAOC;AAUX,iBATAiP,KAAY1qC,EAAYC,IAAIyqC,EAAAA,IAC5BC,KAAY3qC,EAAYC,IAAI0qC,EAAAA,GAEdzzC,SAASwzC,GAAUxzC,SAAAA,CAC7BukC,IAASD,EAAAA,IAAUjxB,GAAuBmgC,IAAWC,EAAAA,IAAAA,CAErDnP,IAAOC,EAAAA,IAAYlxB,GAAuBogC,IAAWD,EAAAA,GAGlD,EAAElP,OAAAA,IAAOC,SAAAA,GAAAA;QAClB,EuC0IwBtxB,GAAgBogC,GAAcK,QAAAA,GAC9BzgC,GAAgBqgC,GAAY/yC,OAAOgD,IAAAA,CAAAA;AAErD+gC,QAAAA,KAAQiP,GAAWjP,OACnBC,KAAUgP,GAAWhP;MACvB;AAEA,aAAO,EACLgO,WAAWjO,KAAQ,CAAEA,EAAAA,IAAU,CAAA,GAC/BkO,WAAWjO,KAAU,CAAEA,EAAAA,IAAY,CAAA,EAAA;IAEvC;EAAA;AAGF,MAAM4O,KAAkB,WAAA;AAAqB,QAAZ77B,KAAKvX,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACvC,UAAM7F,KAAO,CAAA;AACb,eAAWkH,MAAQkJ,MAAMC,KAAK+M,EAAAA;AAC5B,cAAQlW,GAAKD,UAAAA;QACX,KAAKG,KAAK6D;AACRjL,UAAAA,GAAKmK,KAAKjD,GAAKmC,IAAAA;AACf;QACF,KAAKjC,KAAKC;AACc,mBAAlB/H,EAAQ4H,EAAAA,IACVlH,GAAKmK,KAAK,IAAA,IAEVnK,GAAKmK,KAAAA,GAAQiG,MAAMC,KAAK4oC,GAAgB/xC,GAAK2C,UAAAA,KAAe,CAAA,CAAA,CAAA;MAAA;AAKpE,WAAO7J;EACT;ACrMe,MAAMy5C,KAAN,cAAwC59B,GAAAA;IACrDzM,YAAYjQ,IAAAA;AACVkQ,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKrB,OAAOA;IACd;IAEAud,QAAQnR,IAAAA;AACN,YAAMmuC,KAAS,IAAIC;AAYnB,aAVAD,GAAOtuB,UAAU,MAAM7f,GAAAA,KAAS,GAEhCmuC,GAAOzuB,SAAS,MAAA;AACdyuB,QAAAA,GAAOtuB,UAAU;AACjB,YAAA;AACEsuB,UAAAA,GAAOE,MAAAA;QACT,SAASvmC,IAAP;QAAe;AACjB,eAAO9H,GAAAA,MAAe/K,KAAKrB,IAAAA;MAAK,GAG3Bu6C,GAAOG,kBAAkBr5C,KAAKrB,IAAAA;IACvC;EAAA;ACnBa,MAAM26C,KAAN,MAAMA;IACnB1qC,YAAY9O,IAAAA;AACVE,WAAKF,UAAUA;IACjB;IAEAy5C,aAAa5zC,IAAAA;AACX,aAAA,CAAA,CAAK+N,EAAe1S,mBAEpBhB,KAAKw5C,gBAAgBx5C,KAAK2F,OAC1B3F,KAAK2F,QAAQA,IAEb3F,KAAKy5C,mCAAAA,GACLz5C,KAAK05C,iCAAAA,GAEE15C,KAAK25C;IACd;IAQAF,qCAAAA;AACMz5C,WAAK45C,uCAAAA,KAA4CC,GAAoB75C,KAAKF,QAAQg6C,WAAW95C,KAAK2F,MAAMkD,IAAAA,MAC1G7I,KAAK25C,YAAAA,MACL35C,KAAK2F,MAAMR,eAAAA;IAEf;IAGAu0C,mCAAAA;AACM15C,WAAK25C,aAAsC,iBAAzB35C,KAAK2F,MAAMo0C,cAC/B/5C,KAAK25C,YAAAA;IAET;IAEAC,yCAAAA;AAAyC,UAAAI;AACvC,aAAOh6C,KAAKi6C,wBAAAA,KAA6Bj6C,KAAKk6C,oCAAAA,MAAwD,UAAfF,KAAIh6C,KAAC2F,MAAMkD,SAAAA,WAAImxC,KAAAA,SAAfA,GAAiB10C,UAAS;IACnH;IAEA20C,0BAAAA;AACE,aAA2B,kBAApBj6C,KAAK2F,MAAMqF,QAAmD,iBAAzBhL,KAAK2F,MAAMo0C;IACzD;IAEAG,sCAAAA;AAAsC,UAAAC,IAAAC;AACpC,aAAoC,eAAXD,UAAlBA,KAAAn6C,KAAKw5C,kBAAAA,WAAaW,KAAAA,SAAlBA,GAAoBnvC,SAAkD,oBAAV,UAAlBovC,KAAIp6C,KAACw5C,kBAAAA,WAAaY,KAAAA,SAAlBA,GAAoB71C;IACvE;EAAA;AAGF,MAAMs1C,KAAsBA,CAACQ,IAAOC,OAC3BC,GAAUF,EAAAA,MAAWE,GAAUD,EAAAA;AADxC,MAIME,KAA6B,IAAIrsC,OAAM1K,IAAAA,O/D1DD,U+D0DkC,GAAA,EAAAA,OAAIU,GAAgBV,GAAAA,EAAAA,OAAIW,GAAkB,QAAA,GAAU,GAAA;AAJlI,MAKMm2C,KAAa/6C,CAAAA,OAASA,GAAK0E,QAAQs2C,IAA4B,GAAA,EAAKxnC,KAAAA;ACtD3D,MAAMynC,KAAN,cAA8BrtC,EAAAA;IAI3CwB,YAAY9O,IAAAA;AACV+O,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKF,UAAUA,IACfE,KAAK06C,mBAAmB,IAAI/D,GAAiB32C,KAAKF,OAAAA,GAClDE,KAAK06C,iBAAiB9uB,WAAW5rB,MACjCA,KAAK26C,wBAAwB,IAAIrB,GAA6Bt5C,KAAKF,OAAAA;AACnE,iBAAWgF,MAAa9E,KAAK4O,YAAYgsC;AACvC/1C,UAAYC,IAAW,EAAEC,WAAW/E,KAAKF,SAASmF,cAAcjF,KAAK66C,WAAW/1C,EAAAA,EAAAA,CAAAA;IAEpF;IAEAqyC,iBAAiB2D,IAAAA;IAAkB;IAEnCC,6BAAAA;AACE,aAAO/6C,KAAK06C,iBAAiB7jC,KAAAA;IAC/B;IAEAmkC,4BAAAA;AACE,aAAOh7C,KAAK06C,iBAAiB9kC,MAAAA;IAC/B;IAEAqlC,gBAAAA;AAAgB,UAAAvvB,IAAAwvB;AACd,aAAoBxvB,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAAAA,UAAAwvB,KAAbxvB,GAAeyvB,oCAAAA,WAA+BD,KAAAA,SAA9CA,GAAAn1C,KAAA2lB,EAAAA;IACT;IAEA0vB,iBAAAA;AAAiB,UAAAxuB,IAAAyuB;AAEf,aAAA,UADAzuB,KAAAA,KAAKhB,aAAAA,WAAQgB,MAAkC,UAAlCyuB,KAAbzuB,GAAe0uB,qCAAAA,WAAgCD,MAA/CA,GAAAt1C,KAAA6mB,EAAAA,GACO5sB,KAAKi7C,cAAAA;IACd;IAEAr5C,YAAYyJ,IAAAA;AACV,YAAMkwC,KAAa3rC,MAAMC,KAAKxE,EAAAA,EAAOiF,IAAK3R,CAAAA,OAAS,IAAIs6C,GAA0Bt6C,EAAAA,CAAAA;AACjF,aAAOod,QAAQy/B,IAAID,EAAAA,EAAYnuB,KAAM/hB,CAAAA,OAAAA;AACnCrL,aAAKy7C,YAAY,WAAA;AAAW,cAAAxY,IAAAyY;AAG1B,iBAFa,UAAbzY,KAAIjjC,KAAC4rB,aAAAA,WAAQqX,MAAbA,GAAe0Y,+BAAAA,GACDD,UAAdA,KAAA17C,KAAK47C,cAAAA,WAASF,MAAdA,GAAgBnX,YAAYl5B,EAAAA,GACrBrL,KAAKi7C,cAAAA;QACd,CAAA;MAAE,CAAA;IAEN;IAIAJ,WAAW/1C,IAAAA;AACT,aAAQa,CAAAA,OAAAA;AACDA,QAAAA,GAAMk2C,oBACT77C,KAAKy7C,YAAY,MAAA;AACf,cAAA,CAAK10C,EAAqB/G,KAAKF,OAAAA,GAAU;AACvC,gBAAIE,KAAK26C,sBAAsBpB,aAAa5zC,EAAAA;AAAQ;AAEpD3F,iBAAK8E,YAAYA,IACjB9E,KAAK4O,YAAYgsC,OAAO91C,IAAWiB,KAAK/F,MAAM2F,EAAAA;UAChD;QAAA,CAAA;MAEJ;IAEJ;IAEA81C,YAAY1wC,IAAAA;AACV,UAAA;AAAI,YAAAy5B;AACW,kBAAbA,KAAIxkC,KAAC4rB,aAAAA,WAAQ4Y,MAAbA,GAAesX,+BAAAA,GACf/wC,GAAShF,KAAK/F,IAAAA;MAChB,UAAU;AAAA,YAAAmoC;AACK,kBAAbA,KAAInoC,KAAC4rB,aAAAA,WAAQuc,MAAbA,GAAe4T,8BAAAA;MACjB;IACF;IAEAC,eAAe7vC,IAAM3M,IAAAA;AACnB,YAAM4C,KAAOsC,SAAS8D,cAAc,GAAA;AAGpC,aAFApG,GAAK+J,OAAOA,IACZ/J,GAAKgH,cAAc5J,MAAc2M,IAC1B/J,GAAKud;IACd;EAAA;AAAA,MAAA;AACD2K,KA7EoBmwB,IAEH,UAAA,CAAA,CAAA;ACUlB,MAAA,EAAM5vC,SAAEA,IAAOknC,UAAEA,GAAAA,IAAar+B;AAC9B,MAAIuoC,KAAkB;AAEP,MAAMC,KAAN,cAAoCzB,GAAAA;IAmVjD7rC,cAAAA;AACEC,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKm8C,kBAAAA;IACP;IAEAC,kBAAAA;AAA8B,UAAdjE,KAAO9yC,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AACxBrF,WAAKq8C,aAAav3C,YAAY9E,KAAK8E;AACnC,iBAAWP,MAAO4zC,IAAS;AACzB,cAAM3zC,KAAQ2zC,GAAQ5zC;AACtBvE,aAAKq8C,aAAa93C,MAAOC;MAC3B;AACA,aAAOxE,KAAKq8C;IACd;IAEAF,oBAAAA;AACEn8C,WAAKq8C,eAAe,CAAA;IACtB;IAEAhlC,QAAAA;AAEE,aADArX,KAAKm8C,kBAAAA,GACE7kC,GAAwBD,MAAAA;IACjC;IAIA8/B,iBAAiB2D,IAAAA;AACS,UAAApvB,IAAAwvB;AAAxB,aAAIl7C,KAAKs8C,YAAAA,IACa5wB,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAAAA,UAAAwvB,KAAbxvB,GAAe6wB,0CAAAA,WAAqCrB,KAAAA,SAApDA,GAAAn1C,KAAA2lB,EAAAA,IAEA1rB,KAAKy7C,YAAY,WAAA;AAQtB,eAPIz7C,KAAKs3C,sBAAsBwD,EAAAA,MACzB96C,KAAKw8C,mBAAmB1B,EAAAA,IAC1B96C,KAAKi7C,cAAAA,IAELj7C,KAAKo7C,eAAAA,IAGFp7C,KAAKqX,MAAAA;MACd,CAAA;IAEJ;IAEAmlC,mBAAkBz7B,IAAAA;AAA6B,UAAA,EAA5Bq3B,WAAEA,IAASE,aAAEA,GAAAA,IAAav3B;AAC3C,UAAI/gB,KAAKq8C,aAAaI;AACpB,eAAA;AAGF,YAAMC,KACS,QAAbtE,KAAoBA,OAAcp4C,KAAKq8C,aAAajE,YAAAA,CAAap4C,KAAKq8C,aAAajE,WAC/EuE,KACW,QAAfrE,KAAsBt4C,KAAKq8C,aAAaO,YAAAA,CAAa58C,KAAKq8C,aAAaO,WAEnEC,KAA4B,CAAE,MAAM,KAAA,EAAQ5yC,SAASmuC,EAAAA,KAAAA,CAAesE,IACpEI,KAA4C,SAAhBxE,MAAAA,CAAyBqE;AAK3D,UAHEE,MAAAA,CAA8BC,MAC9BA,MAAAA,CAA8BD,IAEH;AAC3B,cAAMrnC,KAAQxV,KAAKgiC,iBAAAA;AACnB,YAAIxsB,IAAO;AAAA,cAAAkmC;AACT,gBAAM1sC,KAAS6tC,KAA4BzE,GAAUl0C,QAAQ,OAAO,EAAA,EAAIoB,UAAAA,MAAe8yC,QAAAA,KAAAA,SAAAA,GAAW9yC,WAAU;AAC5G,cAAkB,UAAlBo2C,KAAI17C,KAAK47C,cAAAA,WAASF,MAAdA,GAAgBjS,qBAAqBj0B,GAAM,KAAKxG,EAAAA;AAClD,mBAAA;QAEJ;MACF;AAEA,aAAO0tC,MAAkCC;IAC3C;IAEArF,sBAAsBwD,IAAAA;AAAiB,UAAAiC;AACrC,YAAMC,KAAcrpC,OAAOC,KAAKknC,EAAAA,EAAiBx1C,SAAS,GACpD23C,KAA8D,QAAnB,UAArBF,KAAA/8C,KAAKk9C,qBAAAA,WAAgBH,KAAAA,SAArBA,GAAuBI,WAAAA;AACnD,aAAOH,MAAAA,CAAgBC;IACzB;IAIAG,sBAAAA;AACE,UAAIp9C,KAAKs8C,YAAAA;AACP,eAAOt8C,KAAKk9C;AAEZl9C,WAAKk9C,mBAAmB,IAAIG,GAAiBr9C,IAAAA;IAEjD;IAEAs8C,cAAAA;AACE,aAAOt8C,KAAKk9C,oBAAAA,CAAqBl9C,KAAKk9C,iBAAiBI,QAAAA;IACzD;IAEArY,kBAAkB9P,IAAWxvB,IAAAA;AAAO,UAAA43C;AAClC,aAAA,WAAqD,UAAjDA,KAAAv9C,KAAK47C,cAAAA,WAAS2B,KAAAA,SAAdA,GAAgBtY,kBAAkB9P,EAAAA,KAM7Bn1B,KAAKo8C,gBAAgB,EAAEQ,WAAAA,KAAW,CAAA,IALrCj3C,MACFA,GAAMR,eAAAA,GACCnF,KAAKi7C,cAAAA,KAAAA;IAKlB;IAEAuC,iCAAiC9oC,IAAAA;AAAc,UAAA+oC;AAC7C,UAAA,ChD1bkC,SAAS/oC,IAAAA;AAC7C,YAAKA,QAAAA,MAAAA,CAAAA,GAAcgpC;AAAS,iBAAA;AAE5B,mBAAWn5C,MAAOiQ,IAAkB;AAClC,gBAAMhQ,KAAQgQ,GAAiBjQ;AAE/B,cAAA;AAEE,gBADAmQ,GAAagpC,QAAQn5C,IAAKC,EAAAA,GAAAA,CACrBkQ,GAAaC,QAAQpQ,EAAAA,MAASC;AAAO,qBAAA;UAC3C,SAAQqO,IAAP;AACA,mBAAA;UACF;QACF;AACA,eAAA;MACF,EgD4agC6B,EAAAA;AAAe;AAC3C,YAAMhQ,KAAyB+4C,UAAjBA,KAAGz9C,KAAK47C,cAAAA,WAAS6B,KAAAA,SAAdA,GAAgB7W,oBAAAA,EAAsBzK,uBAAAA;AAKvD,aAHAznB,GAAagpC,QAAQ,+BAA+BvsC,KAAKO,UAAUhN,EAAAA,CAAAA,GACnEgQ,GAAagpC,QAAQ,aAAa91B,GAAaC,OAAOnjB,EAAAA,EAAUkb,SAAAA,GAChElL,GAAagpC,QAAQ,cAAch5C,GAAS6J,SAAAA,EAAWrK,QAAQ,OAAO,EAAA,CAAA,GAAA;IAExE;IAEAy5C,sBAAsBjpC,IAAAA;AACpB,YAAM8U,KAAQ,CAAA;AAId,aAHA5Z,MAAMC,MAAK6E,QAAAA,KAAAA,SAAAA,GAAc8U,UAAS,CAAA,CAAA,EAAIvgB,QAAS+B,CAAAA,OAAAA;AAC7Cwe,QAAAA,GAAMxe,MAAAA;MAAY,CAAA,GAEbwe,GAAMo0B,SAASp0B,GAAM,kCAAkCA,GAAM,gBAAgBA,GAAM;IAC5F;IAEAq0B,gCAAgC9yC,IAAAA;AAC9B,YAAMg3B,KAAgB/hC,KAAKgiC,iBAAAA,GAErBp5B,KAAQ,EACZ2lB,UAAU,YACVjY,MAAAA,GAAI7S,OAAKsI,OAAO+xC,aAAe,IAAA,GAC/B3d,KAAAA,GAAG18B,OAAKsI,OAAOgyC,aAAe,IAAA,GAC9BC,SAAS,EAAA,GAGLl+C,KAAUuI,EAAY,EAAEO,OAAAA,IAAO9J,SAAS,OAAO2J,UAAAA,KAAU,CAAA;AAI/D,aAHA/D,SAAS6G,KAAKhC,YAAYzJ,EAAAA,GAC1BA,GAAQuzC,MAAAA,GAED4K,sBAAsB,MAAA;AAC3B,cAAMx5C,KAAO3E,GAAQ8f;AAGrB,eAFAtY,EAAWxH,EAAAA,GACXE,KAAKmmC,iBAAiBpE,EAAAA,GACfh3B,GAAStG,EAAAA;MAAK,CAAA;IAEzB;EAAA;AACD6lB,KAheoB4xB,IAEH,UAAA,EACdgC,QAAQv4C,IAAAA;AACD3F,SAAKs8C,YAAAA,KACRt8C,KAAKm8C,kBAAAA,GAEPn8C,KAAKq8C,aAAa8B,WAAAA;AAElB,UAAMC,KAAUrM,GAASpsC,GAAMyuC;AAC/B,QAAIgK,IAAS;AAAA,UAAAC;AACX,UAAI14B,KAAU3lB,KAAK4T;AAElB,OAAE,QAAQ,OAAO,SAAS,MAAA,EAAS3K,QAASq1C,CAAAA,OAAAA;AACd,YAAAC;AAAzB54C,QAAAA,GAAKlC,GAAAA,OAAI66C,IAAAA,KAAAA,OACM,WAAbA,OACFA,KAAW,YAEb34B,KAAiB,UAAV44B,KAAG54B,OAAAA,WAAO44B,KAAAA,SAAPA,GAAUD;MACtB,CAAA,GAGwB,SAAfD,UAAPA,KAAA14B,OAAAA,WAAO04B,KAAAA,SAAPA,GAAUD,SACZp+C,KAAKo8C,gBAAgB,EAAEgC,SAAAA,GAAAA,CAAAA,GACvB9mC,GAAwBD,MAAAA,GACxBsO,GAAQy4B,IAASr4C,KAAK/F,MAAM2F,EAAAA;IAEhC;AAEA,QAAImP,GAA0BnP,EAAAA,GAAQ;AACpC,YAAM64C,KAAYruC,OAAOW,aAAanL,GAAMyuC,OAAAA,EAAS9zC,YAAAA;AACrD,UAAIk+C,IAAW;AAAA,YAAAvb;AACb,cAAMrvB,KAAO,CAAE,OAAO,OAAA,EAAUtD,IAAKguC,CAAAA,OAAAA;AACnC,cAAI34C,GAAKlC,GAAAA,OAAI66C,IAAAA,KAAAA;AACX,mBAAOA;QACT,CAAA,EACCrnC,OAAO1S,CAAAA,OAAOA,EAAAA;AACjBqP,QAAAA,GAAKjK,KAAK60C,EAAAA,GACOvb,UAAjBA,KAAIjjC,KAAK4rB,aAAAA,WAAQqX,MAAbA,GAAewb,yCAAyC7qC,EAAAA,KAC1DjO,GAAMR,eAAAA;MAEV;IACF;EACD,GAEDu5C,SAAS/4C,IAAAA;AACP,QAAmC,QAA/B3F,KAAKq8C,aAAav3C;AAAmB;AACzC,QAAIa,GAAMqP;AAAS;AACnB,QAAIrP,GAAMsP,WAAAA,CAAYtP,GAAMg5C;AAAQ;AAEpC,UAAMtuC,KAASuuC,GAAmBj5C,EAAAA;AACtB,QAAA6+B,IAAAqa;AAAZ,WAAIxuC,MACW,UAAbm0B,KAAIxkC,KAAC4rB,aAAAA,WAAQ4Y,MAAbA,GAAesa,iCAAAA,GACDD,UAAdA,KAAA7+C,KAAK47C,cAAAA,WAASiD,MAAdA,GAAgBlb,aAAatzB,EAAAA,GACtBrQ,KAAKo8C,gBAAgB,EAAEhE,WAAW/nC,IAAQusC,WAAW58C,KAAKgxC,oBAAAA,EAAAA,CAAAA,KAAAA;EAEpE,GAED+N,UAAUp5C,IAAAA;AAER,UAAA,EAAMkD,MAAEA,GAAAA,IAASlD,IAAAA,EACXyyC,WAAEA,GAAAA,IAAcp4C,KAAKq8C;AAC3B,QAAIjE,MAAaA,OAAcvvC,MAAQuvC,GAAU4G,YAAAA,MAAkBn2C,IAAM;AAAA,UAAAo2C;AACvE,YAAMzpC,KAAQxV,KAAKgiC,iBAAAA;AAInB,aAHAhiC,KAAKmmC,iBAAiB,CAAE3wB,GAAM,IAAIA,GAAM,KAAK4iC,GAAU9yC,MAAAA,CAAAA,GACzC25C,UAAdA,KAAAj/C,KAAK47C,cAAAA,WAASqD,MAAdA,GAAgBtb,aAAa96B,EAAAA,GAC7B7I,KAAKo8C,gBAAgB,EAAEhE,WAAWvvC,GAAAA,CAAAA,GAC3B7I,KAAKmmC,iBAAiB3wB,EAAAA;IAC/B;EACD,GAED0pC,UAAUv5C,IAAAA;AACRA,IAAAA,GAAMR,eAAAA;EACP,GAEDg6C,UAAUx5C,IAAAA;AAAO,QAAAwiC,IAAAiX;AAGf,WAFAp/C,KAAKw9C,iCAAiC73C,GAAM+O,YAAAA,GAC5C1U,KAAKq/C,eAAer/C,KAAKgiC,iBAAAA,GACLmG,UAApBA,KAAOnoC,KAAK4rB,aAAAA,WAAQuc,MAAAA,UAAAiX,KAAbjX,GAAemX,gCAAAA,WAA2BF,KAAAA,SAA1CA,GAAAr5C,KAAAoiC,EAAAA;EACR,GAEDoX,SAAS55C,IAAAA;AACP,QAAI3F,KAAKq/C,gBAAgBr/C,KAAK29C,sBAAsBh4C,GAAM+O,YAAAA,GAAe;AACvE/O,MAAAA,GAAMR,eAAAA;AACN,YAAMq6C,KAAgB,EAAEtQ,GAAGvpC,GAAM85C,SAAStQ,GAAGxpC,GAAM+5C,QAAAA;AACM,UAAAvV,IAAAwV;AAAzD,UAAA,CAAKrqC,GAAgBkqC,IAAex/C,KAAKw/C,aAAAA;AAEvC,eADAx/C,KAAKw/C,gBAAgBA,IAAAA,UACrBrV,KAAOnqC,KAAK4rB,aAAAA,WAAQue,MAAwCwV,UAAxCA,KAAbxV,GAAeyV,2CAAAA,WAAsCD,KAAAA,SAArDA,GAAA55C,KAAAokC,IAAwDnqC,KAAKw/C,aAAAA;IAExE;EACD,GAEDK,QAAQl6C,IAAAA;AAAO,QAAA2kC,IAAAwV;AAAAA,cACbxV,KAAAA,KAAK1e,aAAAA,WAAQ0e,MAA8B,UAA9BwV,KAAbxV,GAAeyV,iCAAAA,WAA4BD,MAA3CA,GAAA/5C,KAAAukC,EAAAA,GACAtqC,KAAKq/C,eAAe,MACpBr/C,KAAKw/C,gBAAgB;EACtB,GAEDQ,KAAKr6C,IAAAA;AAAO,QAAAs6C,IAAAC;AACVv6C,IAAAA,GAAMR,eAAAA;AACN,UAAMkG,KAA0B,UAArB40C,KAAGt6C,GAAM+O,iBAAAA,WAAYurC,KAAAA,SAAlBA,GAAoB50C,OAC5BgrB,KAAe1wB,GAAM+O,aAAaC,QAAQ,6BAAA,GAE1Ck9B,KAAQ,EAAE3C,GAAGvpC,GAAM85C,SAAStQ,GAAGxpC,GAAM+5C,QAAAA;AAG3C,QAFcQ,UAAdA,KAAAlgD,KAAK47C,cAAAA,WAASsE,MAAdA,GAAgB1P,+BAA+BqB,EAAAA,GAE3CxmC,QAAAA,MAAAA,GAAO/F;AACTtF,WAAK4B,YAAYyJ,EAAAA;aACRrL,KAAKq/C,cAAc;AAAA,UAAA5U,IAAA0V;AACf,gBAAb1V,KAAIzqC,KAAC4rB,aAAAA,WAAQ6e,MAAbA,GAAe2V,4BAAAA,GAAAA,UACfD,KAAAngD,KAAK47C,cAAAA,WAASuE,MAAdA,GAAgBxa,kBAAkB3lC,KAAKq/C,YAAAA,GACvCr/C,KAAKq/C,eAAe,MACpBr/C,KAAKi7C,cAAAA;IACN,WAAU5kB,IAAc;AAAA,UAAAgqB;AACvB,YAAM37C,KAAW0xB,GAASkqB,eAAejqB,EAAAA;AAC3BgqB,gBAAdA,KAAArgD,KAAK47C,cAAAA,WAASyE,MAAdA,GAAgB3c,eAAeh/B,EAAAA,GAC/B1E,KAAKi7C,cAAAA;IACP;AAEAj7C,SAAKq/C,eAAe,MACpBr/C,KAAKw/C,gBAAgB;EACtB,GAEDe,IAAI56C,IAAAA;AAAO,QAAA66C,IACkC5V;AAA3C,QAAkB,UAAlB4V,KAAIxgD,KAAK47C,cAAAA,WAAS4E,MAAdA,GAAgBxP,oBAAAA,MACdhxC,KAAKw9C,iCAAiC73C,GAAM86C,aAAAA,KAC9C96C,GAAMR,eAAAA,GAGK,UAAbylC,KAAI5qC,KAAC4rB,aAAAA,WAAQgf,MAAbA,GAAe8V,2BAAAA,GACf1gD,KAAKilC,kBAAkB,UAAA,GACnBt/B,GAAMk2C;AACR,aAAO77C,KAAKi7C,cAAAA;EAGjB,GAEDvhC,KAAK/T,IAAAA;AAAO,QAAAg7C;AACQ,cAAlBA,KAAI3gD,KAAK47C,cAAAA,WAAS+E,MAAdA,GAAgB3P,oBAAAA,KACdhxC,KAAKw9C,iCAAiC73C,GAAM86C,aAAAA,KAC9C96C,GAAMR,eAAAA;EAGX,GAEDy7C,MAAMj7C,IAAAA;AACJ,UAAMk7C,KAAYl7C,GAAM86C,iBAAiB96C,GAAMm7C,mBACzCF,KAAQ,EAAEC,WAAAA,GAAAA;AAEhB,QAAA,CAAKA,MAAaE,GAAoCp7C,EAAAA;AASpD,aAAA,KARA3F,KAAK69C,gCAAiCp5C,CAAAA,OAAAA;AAAS,YAAAsmC,IAAAiW,IAAA9V;AAM7C,eALA0V,GAAM51C,OAAO,aACb41C,GAAMn8C,OAAOA,IACAsmC,UAAbA,KAAA/qC,KAAK4rB,aAAAA,WAAQmf,MAAbA,GAAekW,yBAAyBL,EAAAA,GAAAA,UACxCI,KAAAhhD,KAAK47C,cAAAA,WAASoF,MAAdA,GAAgB7c,WAAWyc,GAAMn8C,IAAAA,GACjCzE,KAAKi7C,cAAAA,GACe,UAApB/P,KAAOlrC,KAAK4rB,aAAAA,WAAQsf,KAAAA,SAAbA,GAAegW,wBAAwBN,EAAAA;MAAM,CAAA;AAKxD,UAAMz0C,KAAO00C,GAAUlsC,QAAQ,KAAA,GACzBlQ,KAAOo8C,GAAUlsC,QAAQ,WAAA,GACzBlW,KAAOoiD,GAAUlsC,QAAQ,iBAAA;AAE/B,QAAIxI,IAAM;AAAA,UAAAk/B,IAAA8V,IAAA3V;AACR,UAAIn7B;AACJuwC,MAAAA,GAAM51C,OAAO,aAEXqF,KADE5R,KACOga,GAA0Bha,EAAAA,EAAMuU,KAAAA,IAEhC7G,IAEXy0C,GAAMn8C,OAAOzE,KAAKg8C,eAAe7vC,IAAMkE,EAAAA,GAC1Bg7B,UAAbA,KAAArrC,KAAK4rB,aAAAA,WAAQyf,MAAbA,GAAe4V,yBAAyBL,EAAAA,GACxC5gD,KAAKo8C,gBAAgB,EAAEhE,WAAW/nC,IAAQusC,WAAW58C,KAAKgxC,oBAAAA,EAAAA,CAAAA,GAAAA,UAC1DmQ,KAAAnhD,KAAK47C,cAAAA,WAASuF,MAAdA,GAAgBhd,WAAWyc,GAAMn8C,IAAAA,GACjCzE,KAAKi7C,cAAAA,GACQzP,UAAbA,KAAAxrC,KAAK4rB,aAAAA,WAAQ4f,MAAbA,GAAe0V,wBAAwBN,EAAAA;IACzC,WAAWnsC,GAAwBosC,EAAAA,GAAY;AAAA,UAAAO,IAAAC,IAAAC;AAC7CV,MAAAA,GAAM51C,OAAO,cACb41C,GAAMvwC,SAASwwC,GAAUlsC,QAAQ,YAAA,GACpBysC,UAAbA,KAAAphD,KAAK4rB,aAAAA,WAAQw1B,MAAbA,GAAeH,yBAAyBL,EAAAA,GACxC5gD,KAAKo8C,gBAAgB,EAAEhE,WAAWwI,GAAMvwC,QAAQusC,WAAW58C,KAAKgxC,oBAAAA,EAAAA,CAAAA,GAAAA,UAChEqQ,KAAArhD,KAAK47C,cAAAA,WAASyF,MAAdA,GAAgB1d,aAAaid,GAAMvwC,MAAAA,GACnCrQ,KAAKi7C,cAAAA,GACQqG,UAAbA,KAAAthD,KAAK4rB,aAAAA,WAAQ01B,MAAbA,GAAeJ,wBAAwBN,EAAAA;IACxC,WAAUn8C,IAAM;AAAA,UAAA88C,IAAAC,IAAAC;AACfb,MAAAA,GAAM51C,OAAO,aACb41C,GAAMn8C,OAAOA,IACA88C,UAAbA,KAAAvhD,KAAK4rB,aAAAA,WAAQ21B,MAAbA,GAAeN,yBAAyBL,EAAAA,GAAAA,UACxCY,KAAAxhD,KAAK47C,cAAAA,WAAS4F,MAAdA,GAAgBrd,WAAWyc,GAAMn8C,IAAAA,GACjCzE,KAAKi7C,cAAAA,GACQwG,UAAbA,KAAAzhD,KAAK4rB,aAAAA,WAAQ61B,MAAbA,GAAeP,wBAAwBN,EAAAA;IACzC,WAAWhxC,MAAMC,KAAKgxC,GAAUr3B,KAAAA,EAAOvf,SAAS,OAAA,GAAU;AAAA,UAAAy3C,IAAAC;AACxD,YAAMhjD,KAAsB+iD,UAAlBA,KAAGb,GAAUe,UAAAA,WAAKF,MAAKA,UAALA,KAAfA,GAAkB,OAAA,WAAEA,MAAW,UAAXC,KAApBD,GAAsBG,cAAAA,WAASF,KAAAA,SAA/BA,GAAA57C,KAAA27C,EAAAA;AACb,UAAI/iD,IAAM;AAAA,YAAAmjD,IAAAC,IAAAC;AACR,cAAMt+B,KAAYu+B,GAAiBtjD,EAAAA;AAAAA,SAC9BA,GAAKF,QAAQilB,OAChB/kB,GAAKF,OAAI,eAAAgF,OAAAA,EAAoBw4C,IAAex4C,GAAAA,EAAAA,OAAIigB,EAAAA,IAElDk9B,GAAM51C,OAAO,QACb41C,GAAMjiD,OAAOA,IACA,UAAbmjD,KAAI9hD,KAAC4rB,aAAAA,WAAQk2B,MAAbA,GAAenG,+BAAAA,GAAAA,UACfoG,KAAA/hD,KAAK47C,cAAAA,WAASmG,MAAdA,GAAgBzd,WAAWsc,GAAMjiD,IAAAA,GACjCqB,KAAKi7C,cAAAA,GACQ+G,UAAbA,KAAAhiD,KAAK4rB,aAAAA,WAAQo2B,MAAbA,GAAed,wBAAwBN,EAAAA;MACzC;IACF;AAEAj7C,IAAAA,GAAMR,eAAAA;EACP,GAED+8C,iBAAiBv8C,IAAAA;AACf,WAAO3F,KAAKo9C,oBAAAA,EAAsBxnC,MAAMjQ,GAAMkD,IAAAA;EAC/C,GAEDs5C,kBAAkBx8C,IAAAA;AAChB,WAAO3F,KAAKo9C,oBAAAA,EAAsB3mC,OAAO9Q,GAAMkD,IAAAA;EAChD,GAEDu5C,eAAez8C,IAAAA;AACb,WAAO3F,KAAKo9C,oBAAAA,EAAsBvnC,IAAIlQ,GAAMkD,IAAAA;EAC7C,GAEDw5C,YAAY18C,IAAAA;AACV3F,SAAKq8C,aAAa8B,WAAAA;EACnB,GAEDzzC,MAAM/E,IAAAA;AAEJ,WADA3F,KAAKq8C,aAAa8B,WAAAA,MACXx4C,GAAMsuC,gBAAAA;EACf,EAAA,CAAA,GACD3pB,GAzOkB4xB,IA2OL,QAAA,EACZoG,UAAU38C,IAAAA;AAAO,QAAA48C;AAEf,WADa,UAAbA,KAAIviD,KAAC4rB,aAAAA,WAAQ22B,MAAbA,GAAezD,iCAAAA,GACR9+C,KAAKilC,kBAAkB,YAAYt/B,EAAAA;EAC3C,GAED68C,OAAO78C,IAAAA;AAAO,QAAA88C;AAEZ,WADa,UAAbA,KAAIziD,KAAC4rB,aAAAA,WAAQ62B,MAAbA,GAAe3D,iCAAAA,GACR9+C,KAAKilC,kBAAkB,WAAWt/B,EAAAA;EAC1C,GAED+8C,OAAO/8C,IAAAA;AAAO,QAAAg9C,IAAAC;AAGZ,WAFA5iD,KAAKo8C,gBAAgB,EAAEK,gBAAAA,KAAgB,CAAA,GAC1B,UAAbkG,KAAI3iD,KAAC4rB,aAAAA,WAAQ+2B,MAAbA,GAAe7D,iCAAAA,GACM,UAArB8D,KAAO5iD,KAAK47C,cAAAA,WAASgH,KAAAA,SAAdA,GAAgB9e,gBAAAA;EACxB,GAED+e,IAAIl9C,IAAAA;AAAO,QAAAm9C,IACsCC;AAA7B,cAAlBD,KAAI9iD,KAAK47C,cAAAA,WAASkH,MAAdA,GAAgBtb,wBAAAA,MACJ,UAAdub,KAAI/iD,KAAC47C,cAAAA,WAASmH,MAAdA,GAAgBruB,qBAAAA,GAChB10B,KAAKi7C,cAAAA,GACLt1C,GAAMR,eAAAA;EAET,GAEDmR,KAAK3Q,IAAAA;AACmC,QAAAq9C;AAAtC,QAAIhjD,KAAKspC,0BAAAA;AAEP,aADA3jC,GAAMR,eAAAA,GACe,UAArB69C,KAAOhjD,KAAK47C,cAAAA,WAASoH,KAAAA,SAAdA,GAAgBla,sBAAsB,UAAA;EAEhD,GAEDvyB,MAAM5Q,IAAAA;AACkC,QAAAs9C;AAAtC,QAAIjjD,KAAKspC,0BAAAA;AAEP,aADA3jC,GAAMR,eAAAA,GACe,UAArB89C,KAAOjjD,KAAK47C,cAAAA,WAASqH,KAAAA,SAAdA,GAAgBna,sBAAsB,SAAA;EAEhD,GAEDoa,SAAS,EACPC,EAAEx9C,IAAAA;AAAO,QAAAy9C;AAEP,WADa,UAAbA,KAAIpjD,KAAC4rB,aAAAA,WAAQw3B,MAAbA,GAAetE,iCAAAA,GACR9+C,KAAKilC,kBAAkB,WAAWt/B,EAAAA;EAC1C,GAED09C,EAAE19C,IAAAA;AAAO,QAAA29C;AAEP,WADa,UAAbA,KAAItjD,KAAC4rB,aAAAA,WAAQ03B,MAAbA,GAAexE,iCAAAA,GACR9+C,KAAKilC,kBAAkB,YAAYt/B,EAAAA;EAC3C,GAEDwjB,EAAExjB,IAAAA;AAAO,QAAA49C,IAAAC;AAIP,WAHA79C,GAAMR,eAAAA,GACO,UAAbo+C,KAAIvjD,KAAC4rB,aAAAA,WAAQ23B,MAAbA,GAAezE,iCAAAA,GACD0E,UAAdA,KAAAxjD,KAAK47C,cAAAA,WAAS4H,MAAdA,GAAgB7f,aAAa,MAAM,EAAEJ,gBAAAA,MAAgB,CAAA,GAC9CvjC,KAAKi7C,cAAAA;EACd,EAAA,GAGFwI,OAAO,EACLf,OAAO/8C,IAAAA;AAAO,QAAA+9C,IAAAC;AACC,cAAbD,KAAI1jD,KAAC4rB,aAAAA,WAAQ83B,MAAbA,GAAe5E,iCAAAA,GACD6E,UAAdA,KAAA3jD,KAAK47C,cAAAA,WAAS+H,MAAdA,GAAgBhgB,aAAa,IAAA,GAC7B3jC,KAAKi7C,cAAAA,GACLt1C,GAAMR,eAAAA;EACP,GAED09C,IAAIl9C,IAAAA;AAAO,QAAAi+C,IACsCC;AAA7B,cAAlBD,KAAI5jD,KAAK47C,cAAAA,WAASgI,MAAdA,GAAgBtc,wBAAAA,MACJ,UAAduc,KAAI7jD,KAAC47C,cAAAA,WAASiI,MAAdA,GAAgBpvB,qBAAAA,GAChBz0B,KAAKi7C,cAAAA,GACLt1C,GAAMR,eAAAA;EAET,GAEDmR,KAAK3Q,IAAAA;AACH,QAAI3F,KAAKspC,0BAAAA;AAEP,aADA3jC,GAAMR,eAAAA,GACCnF,KAAKgpC,2BAA2B,UAAA;EAE1C,GAEDzyB,MAAM5Q,IAAAA;AACJ,QAAI3F,KAAKspC,0BAAAA;AAEP,aADA3jC,GAAMR,eAAAA,GACCnF,KAAKgpC,2BAA2B,SAAA;EAE3C,EAAA,GAGF8a,KAAK,EACHxB,UAAU38C,IAAAA;AAAO,QAAAo+C;AAEf,WADA/jD,KAAKo8C,gBAAgB,EAAEK,gBAAAA,MAAgB,CAAA,GACnB,UAApBsH,KAAO/jD,KAAK4rB,aAAAA,WAAQm4B,KAAAA,SAAbA,GAAejF,iCAAAA;EACxB,EAAA,GAGFkF,MAAM,EACJ1B,UAAU38C,IAAAA;AAAO,QAAAs+C;AAEf,WADAjkD,KAAKo8C,gBAAgB,EAAEK,gBAAAA,MAAgB,CAAA,GACnB,UAApBwH,KAAOjkD,KAAK4rB,aAAAA,WAAQq4B,KAAAA,SAAbA,GAAenF,iCAAAA;EACxB,EAAA,EAAA,CAAA,GAmJN5C,GAAsB3/B,YAAY,6BAAA,GAClC2/B,GAAsB3/B,YAAY,6BAAA,GAClC2/B,GAAsB3/B,YAAY,uCAAA,GAClC2/B,GAAsB3/B,YAAY,sCAAA,GAClC2/B,GAAsB3/B,YAAY,gCAAA;AAElC,MAAM0lC,KAAoBtjD,CAAAA,OAAAA;AAAI,QAAAulD;AAAA,WAAcA,UAAdA,KAAKvlD,GAAKqM,SAAAA,WAAIk5C,MAAmB,UAAnBA,KAATA,GAAWxjD,MAAM,UAAA,MAAA,WAAWwjD,KAAAA,SAA5BA,GAA+B;EAAE;AAApE,MAEMp0C,KAAAA,EAAwCC,UAAhBA,KAAI,IAACC,gBAAAA,WAAWD,MAAAA,CAAfA,GAAAhK,KAAG,KAAe,CAAA;AAFjD,MAIM64C,KAAqB,SAASj5C,IAAAA;AAClC,QAAIA,GAAMpB,OAAOuL,MAAwBnK,GAAMpB,IAAIyL,YAAY,CAAA,MAAOrK,GAAMyuC;AAC1E,aAAOzuC,GAAMpB;AACR;AACL,UAAIjF;AAOJ,UANoB,SAAhBqG,GAAMw+C,QACR7kD,KAAOqG,GAAMyuC,UACY,MAAhBzuC,GAAMw+C,SAAkC,MAAnBx+C,GAAMy+C,aACpC9kD,KAAOqG,GAAMy+C,WAGH,QAAR9kD,MAAmC,aAAnByyC,GAASzyC;AAC3B,eAAO8O,EAAYiB,eAAe,CAAE/P,EAAAA,CAAAA,EAAQiP,SAAAA;IAEhD;EACF;AAnBA,MAqBMwyC,KAAsC,SAASp7C,IAAAA;AACnD,UAAMi7C,KAAQj7C,GAAM86C;AACpB,QAAIG,IAAO;AACT,UAAIA,GAAMp3B,MAAMvf,SAAS,WAAA,GAAc;AAGrC,mBAAWe,MAAQ41C,GAAMp3B,OAAO;AAC9B,gBAAM66B,KAAsB,4BAA4BxkD,KAAKmL,EAAAA,GACvDs5C,KAAyB,SAASzkD,KAAKmL,EAAAA,KAAS41C,GAAMjsC,QAAQ3J,EAAAA;AAEpE,cADkCq5C,MAAuBC;AAEvD,mBAAA;QAEJ;AACA,eAAA;MACF;AAAO;AACL,cAAMC,KAAsB3D,GAAMp3B,MAAMvf,SAAS,sBAAA,GAC3Cu6C,KAA0B5D,GAAMp3B,MAAMvf,SAAS,qBAAA;AACrD,eAAOs6C,MAAuBC;MAChC;IACF;EACF;AAEA,MAAMnH,KAAN,cAA+BjwC,EAAAA;IAC7BwB,YAAY61C,IAAAA;AACV51C,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKykD,kBAAkBA,IACvBzkD,KAAK47C,YAAY57C,KAAKykD,gBAAgB7I,WACtC57C,KAAK4rB,WAAW5rB,KAAKykD,gBAAgB74B,UACrC5rB,KAAKq8C,eAAer8C,KAAKykD,gBAAgBpI,cACzCr8C,KAAK6I,OAAO,CAAA;IACd;IAEA+M,MAAM/M,IAAAA;AAGJ,UAFA7I,KAAK6I,KAAK+M,QAAQ/M,IAEd7I,KAAK0kD,cAAAA,GAAiB;AAAA,YAAAC,IACuDC;AAA/E,YAAoC,eAAhC5kD,KAAKq8C,aAAav3C,aAA4B9E,KAAKq8C,aAAajE;AACpDwM,oBAAdA,KAAA5kD,KAAK47C,cAAAA,WAASgJ,MAAdA,GAAgB3f,kBAAkB,MAAA;AAG/BjlC,aAAKgxC,oBAAAA,MACRhxC,KAAK+lC,kBAAAA,GACL/lC,KAAKi7C,cAAAA,IAGPj7C,KAAKwV,QAAsB,UAAjBmvC,KAAG3kD,KAAK47C,cAAAA,WAAS+I,KAAAA,SAAdA,GAAgB3iB,iBAAAA;MAC/B;IACF;IAEAvrB,OAAO5N,IAAAA;AAGL,UAFA7I,KAAK6I,KAAK4N,SAAS5N,IAEf7I,KAAK0kD,cAAAA,GAAiB;AACxB,cAAMlvC,KAAQxV,KAAKkmC,kBAAAA;AACf1wB,QAAAA,OACFxV,KAAKqmC,kBAAAA,GACLrmC,KAAKwV,QAAQA;MAEjB;IACF;IAEAK,IAAIhN,IAAAA;AAGF,aAFA7I,KAAK6I,KAAKgN,MAAMhN,IAEZ7I,KAAK0kD,cAAAA,KACP1kD,KAAKqmC,kBAAAA,GAEDrmC,KAAK6kD,mBAAAA,KACP7kD,KAAKo8C,gBAAgB,EAAEK,gBAAAA,MAAsB0B,UAAAA,MAAU,CAAA,GAC1C,UAAbvxB,KAAI5sB,KAAC4rB,aAAAA,WAAQgB,MAAbA,GAAekyB,iCAAAA,GAAAA,UACfgG,KAAA9kD,KAAK47C,cAAAA,WAASkJ,MAAdA,GAAgB3e,iBAAiBnmC,KAAKwV,KAAAA,GACxB,UAAduvC,KAAI/kD,KAAC47C,cAAAA,WAASmJ,MAAdA,GAAgBphB,aAAa3jC,KAAK6I,KAAKgN,GAAAA,GAClBmvC,UAArBA,KAAOhlD,KAAK47C,cAAAA,WAASoJ,KAAAA,SAAdA,GAAgB7e,iBAAiBnmC,KAAKwV,MAAM,KAAKxV,KAAK6I,KAAKgN,IAAIvQ,MAAAA,KAC1C,QAAnBtF,KAAK6I,KAAK+M,SAAqC,QAApB5V,KAAK6I,KAAK4N,UAC9CzW,KAAKo7C,eAAAA,GACEp7C,KAAKykD,gBAAgBptC,MAAAA,KAAAA,UAGvBrX,KAAKykD,gBAAgBptC,MAAAA;AAXG,UAAAuV,IAAAk4B,IAAAC,IAAAC;IAanC;IAEA7H,aAAAA;AACE,aAAOn9C,KAAK6I,KAAKgN;IACnB;IAEAynC,UAAAA;AACE,aAA4B,QAArBt9C,KAAKm9C,WAAAA;IACd;IAEAuH,gBAAAA;AACE,aAAA,CAAI75C,GAAQ/J,wBACHd,KAAKq8C,aAAa8B;IAI7B;IAIA0G,qBAAAA;AAAqB,UAAAI,IAAAC;AACnB,aAAmC,OAAbD,UAAfA,KAAIjlD,KAAC6I,KAAK+M,UAAAA,WAAKqvC,KAAAA,SAAfA,GAAiB3/C,YAAAA,UAAgB4/C,KAAAllD,KAAK6I,KAAKgN,QAAAA,WAAGqvC,KAAAA,SAAbA,GAAe5/C,UAAS,KAAKtF,KAAKwV;IAC5E;EAAA;AAGF6nC,KAAiB9gC,YAAY,iCAAA,GAC7B8gC,GAAiB9gC,YAAY,+BAAA,GAC7B8gC,GAAiB9gC,YAAY,gCAAA,GAC7B8gC,GAAiB9gC,YAAY,gCAAA,GAC7B8gC,GAAiB9gC,YAAY,8BAAA,GAC7B8gC,GAAiB9gC,YAAY,8BAAA,GAC7B8gC,GAAiB9gC,YAAY,8BAAA;AC3nBd,MAAM4oC,KAAN,cAAoC1K,GAAAA;IACjD7rC,cAAAA;AACEC,YAAAA,GAAMxJ,SAAAA,GACNrF,KAAK6nB,SAAS7nB,KAAK6nB,OAAOnR,KAAK1W,IAAAA;IACjC;IA8cAm3C,mBAAAA;AACE,aAAIn3C,KAAKolD,kBACHplD,KAAKqlD,YACa35B,UAApBA,KAAO1rB,KAAK4rB,aAAAA,WAAQF,MAAAA,UAAAwvB,KAAbxvB,GAAe6wB,0CAAAA,WAAqCrB,KAAAA,SAApDA,GAAAn1C,KAAA2lB,EAAAA,IAAAA,SAGF1rB,KAAKslD,QAAAA;AAJQ,UAAA55B,IAAAwvB;IAMxB;IAEAqK,iBAAAA;AACE,aAAOvlD,KAAKolD,kBAAkBplD,KAAKolD,kBAAkBplD,KAAKolD,kBAAkBnH,sBAAsBj+C,KAAK6nB,MAAAA;IACzG;IAEAA,SAAAA;AAAS,UAAA29B,IAGc54B;AAAAA,OAFrB64B,qBAAqBzlD,KAAKolD,eAAAA,GAC1BplD,KAAKolD,kBAAkB,MAClBplD,KAAKqlD,eACK,UAAbz4B,KAAI5sB,KAAC4rB,aAAAA,WAAQgB,MAAbA,GAAe/E,OAAAA;AAED,gBAAhB29B,KAAIxlD,KAAC0lD,gBAAAA,WAAWF,MAAhBA,GAAAz/C,KAAA/F,IAAAA,GACAA,KAAK0lD,cAAc;IACrB;IAEAJ,UAAAA;AAAU,UAAAriB;AACR,aAAoB,UAApBA,KAAOjjC,KAAK4rB,aAAAA,WAAQqX,KAAAA,SAAbA,GAAeqiB,QAAAA;IACxB;IAIA3hB,eAAAA;AAAmC,UAAAa;AAAA,UAAtBn0B,KAAMhL,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,IAAIkD,KAAOlD,UAAAC,SAAAD,IAAAA,UAAAA,KAAAA;AAE/B,aADa,UAAbm/B,KAAIxkC,KAAC4rB,aAAAA,WAAQ4Y,MAAbA,GAAesa,iCAAAA,GACR9+C,KAAK0oC,mBAAmB,WAAA;AAAW,YAAAgT;AACxC,eAAqBA,UAArBA,KAAO17C,KAAK47C,cAAAA,WAASF,KAAAA,SAAdA,GAAgB/X,aAAatzB,IAAQ9H,EAAAA;MAC9C,CAAA;IACF;IAEAo9C,2BAA2BlyC,IAAAA;AAC2B,UAAA00B;AAApD,UAAI90B,GAAAA,EAAuBpJ,SAASwJ,EAAAA;AAElC,eADa00B,UAAbA,KAAAnoC,KAAK4rB,aAAAA,WAAQuc,MAAbA,GAAeyd,qCAAqCnyC,EAAAA,GAC7CzT,KAAK0oC,mBAAmB,WAAA;AAAW,cAAA6U;AACxC,iBAAqB,UAArBA,KAAOv9C,KAAK47C,cAAAA,WAAS2B,KAAAA,SAAdA,GAAgBhX,uBAAuB9yB,EAAAA;QAChD,CAAA;IAEJ;IAEAoyC,6BAA6BpyC,IAAejP,IAAAA;AACU,UAAA2lC;AAApD,UAAI92B,GAAAA,EAAuBpJ,SAASwJ,EAAAA;AAElC,eADa02B,UAAbA,KAAAnqC,KAAK4rB,aAAAA,WAAQue,MAAbA,GAAeyb,qCAAqCnyC,EAAAA,GAC7CzT,KAAK0oC,mBAAmB,WAAA;AAAW,cAAA+U;AACxC,iBAAqBA,UAArBA,KAAOz9C,KAAK47C,cAAAA,WAAS6B,KAAAA,SAAdA,GAAgBjX,oBAAoB/yB,IAAejP,EAAAA;QAC5D,CAAA;IAEJ;IAEAygC,kBAAkB9P,IAAAA;AAA4D,UAAA,EAAjD6W,iBAAEA,GAAAA,IAAiB3mC,UAAAC,SAAA,KAAA,WAAAD,UAAAE,KAAAF,UAAG,KAAA,EAAE2mC,iBAAAA,KAAiB;AAC/C,UAAA1B;AAAjB0B,MAAAA,OACW,UAAb1B,KAAItqC,KAAC4rB,aAAAA,WAAQ0e,MAAbA,GAAewU,iCAAAA;AAEjB,YAAM5iC,KAAUA,MAAAA;AAAA,YAAA0oC;AAAA,eAAoB,UAApBA,KAAM5kD,KAAK47C,cAAAA,WAASgJ,KAAAA,SAAdA,GAAgB3f,kBAAkB9P,EAAAA;MAAU,GAC5Dtd,KAAW7X,KAAK8lD,kBAAkB,EAAEC,WAAW/lD,KAAKqlD,YAAY,IAAI,EAAA,CAAA;AAC1E,aAAIxtC,KACK7X,KAAK0oC,mBAAmB7wB,IAAUqE,EAAAA,IAElCA,GAAAA;IAEX;IAIAwsB,mBAAmB7wB,IAAU1C,IAAAA;AAKb,UAAAwvC;AAAd,aAJwB,cAAA,OAAb9sC,OACT1C,KAAK0C,IACLA,KAAW7X,KAAK8lD,kBAAAA,IAEdjuC,KACmB8sC,UAArBA,KAAO3kD,KAAK47C,cAAAA,WAAS+I,KAAAA,SAAdA,GAAgBjc,mBAAmB7wB,IAAU1C,GAAGuB,KAAK1W,IAAAA,CAAAA,KAE5DsX,GAAwBD,MAAAA,GACjBlC,GAAGpP,KAAK/F,IAAAA;IAEnB;IAEA8lD,oBAAAA;AAAoD,UAAAE,IAAAC;AAAA,UAAA,EAAlCF,WAAEA,GAAAA,IAAW1gD,UAAAC,SAAA,KAAA,WAAAD,UAAAE,KAAAF,UAAG,KAAA,EAAE0gD,WAAW,EAAA;AAC7C,YAAMG,KAAyC,UAA7BF,MAAGC,KAAAA,KAAKtgD,OAAMwgD,oBAAAA,WAAeH,KAAAA,SAA1BA,GAAAjgD,KAAAkgD,EAAAA;AACrB,UAAIC,MACEA,GAAa5gD,QAAQ;AACvB,cAAMuS,KAAWuuC,GAAmBF,GAAa,EAAA;AACjD,YAAkB,MAAdH,MAAmBluC,GAAStJ,SAAAA,EAAWjJ,UAAUygD;AACnD,iBAAOluC;MAEX;IAEJ;IAEAwuC,UAAU1gD,IAAOwP,IAAAA;AACf,UAAItE;AACJ7Q,WAAK2F,QAAQA;AACb,UAAA;AACEkL,QAAAA,KAASsE,GAAGpP,KAAK/F,IAAAA;MACnB,UAAU;AACRA,aAAK2F,QAAQ;MACf;AACA,aAAOkL;IACT;EAAA;AACDyZ,KA3jBoB66B,IAMH,UAAA,EACdjH,QAAQv4C,IAAAA;AACN,QAAImP,GAA0BnP,EAAAA,GAAQ;AAAA,UAAA8kC;AACpC,YAAM6b,KAAUC,GAA4B5gD,EAAAA;AAC3B8kC,gBAAjBA,KAAIzqC,KAAK4rB,aAAAA,WAAQ6e,MAAbA,GAAegU,yCAAyC6H,EAAAA,KAC1D3gD,GAAMR,eAAAA;IAEV,OAAO;AACL,UAAI1G,KAAOkH,GAAMpB;AACboB,MAAAA,GAAMg5C,WACRlgD,MAAQ,SAENkH,GAAM6gD,aACR/nD,MAAQ;AAEV,YAAMiH,KAAU1F,KAAK4O,YAAYgF,KAAKnV;AACtC,UAAIiH;AACF,eAAO1F,KAAKqmD,UAAU1gD,IAAOD,EAAAA;IAEjC;EACD,GAIDk7C,MAAMj7C,IAAAA;AAAO,QAAA8gD;AAEX,QAAI7F;AACJ,UAAMz0C,KAA0Bs6C,UAAtBA,KAAG9gD,GAAM86C,kBAAAA,WAAagG,KAAAA,SAAnBA,GAAqB9xC,QAAQ,KAAA;AAC1C,WAAI+xC,GAAuB/gD,EAAAA,KACzBA,GAAMR,eAAAA,GACCnF,KAAK4B,YAAY+D,GAAM86C,cAAcp1C,KAAAA,KAGnCs7C,GAA2BhhD,EAAAA,KACpCA,GAAMR,eAAAA,GACNy7C,KAAQ,EACN51C,MAAM,cACNqF,QAAQ1K,GAAM86C,cAAc9rC,QAAQ,YAAA,EAAA,GAEzBi2B,UAAbA,KAAA5qC,KAAK4rB,aAAAA,WAAQgf,MAAbA,GAAeqW,yBAAyBL,EAAAA,GAAAA,UACxCkE,KAAA9kD,KAAK47C,cAAAA,WAASkJ,MAAdA,GAAgBnhB,aAAaid,GAAMvwC,MAAAA,GACnCrQ,KAAK6nB,OAAAA,GACe,UAApBkjB,KAAO/qC,KAAK4rB,aAAAA,WAAQmf,KAAAA,SAAbA,GAAemW,wBAAwBN,EAAAA,KAGrCz0C,MACTxG,GAAMR,eAAAA,GACNy7C,KAAQ,EACN51C,MAAM,aACNvG,MAAMzE,KAAKg8C,eAAe7vC,EAAAA,EAAAA,GAEf++B,UAAbA,KAAAlrC,KAAK4rB,aAAAA,WAAQsf,MAAbA,GAAe+V,yBAAyBL,EAAAA,GAAAA,UACxCmE,KAAA/kD,KAAK47C,cAAAA,WAASmJ,MAAdA,GAAgB5gB,WAAWyc,GAAMn8C,IAAAA,GACjCzE,KAAK6nB,OAAAA,GACe,UAApBwjB,KAAOrrC,KAAK4rB,aAAAA,WAAQyf,KAAAA,SAAbA,GAAe6V,wBAAwBN,EAAAA,KAAAA;AArBF,QAAAhW,IAAAka,IAAA/Z,IAY7BG,IAAA6Z,IAAA1Z;EAWlB,GAEDgX,YAAY18C,IAAAA;AACV,UAAMD,KAAU1F,KAAK4O,YAAYg4C,WAAWjhD,GAAMo0C,YAE5C8M,MjD7BmDC,KiD6BenhD,IAAAA,EAAAA,CjD5BxE,cAAc9F,KAAKW,UAAUC,SAAAA,KAOvBqmD,GAAW/M,aAAsC,sBAAzB+M,GAAW/M;AARxC,QAAwD+M;AiD+BrDphD,IAAAA,OACF1F,KAAKqmD,UAAU1gD,IAAOD,EAAAA,GAEjBmhD,MACH7mD,KAAKulD,eAAAA,IAILsB,MACF7mD,KAAK6nB,OAAAA;EAER,GAEDnd,MAAM/E,IAAAA;AACJ2R,OAAwBD,MAAAA;EACzB,GAED8nC,UAAUx5C,IAAAA;AAAO,QAAAq/C,IACqCnG;AAAlC,cAAlBmG,KAAIhlD,KAAK47C,cAAAA,WAASoJ,MAAdA,GAAgB7b,6BAAAA,MAClBxjC,GAAM+O,aAAagpC,QAAQ,+BAAA,IAA+B,GAE1D19C,KAAK+mD,WAAW,EACdvxC,OAAqBqpC,UAAhBA,KAAE7+C,KAAK47C,cAAAA,WAASiD,KAAAA,SAAdA,GAAgB7c,iBAAAA,GACvB6P,OAAOmV,GAAerhD,EAAAA,EAAAA;EAG3B,GAEDu5C,UAAUv5C,IAAAA;AACJshD,OAAkBthD,EAAAA,KACpBA,GAAMR,eAAAA;EAET,GAEDo6C,SAAS55C,IAAAA;AACP,QAAI3F,KAAK+mD,UAAU;AACjBphD,MAAAA,GAAMR,eAAAA;AACN,YAAM0sC,KAAQmV,GAAerhD,EAAAA;AACqB,UAAAs5C;AAAlD,UAAA,CAAK3pC,GAAgBu8B,IAAO7xC,KAAK+mD,SAASlV,KAAAA;AAExC,eADA7xC,KAAK+mD,SAASlV,QAAQA,IACD,UAArBoN,KAAOj/C,KAAK47C,cAAAA,WAASqD,KAAAA,SAAdA,GAAgBzO,+BAA+BqB,EAAAA;IAE1D;AAAWoV,SAAkBthD,EAAAA,KAC3BA,GAAMR,eAAAA;EAET,GAED66C,KAAKr6C,IAAAA;AACgB,QAAA6lC,IAAA0U;AAAnB,QAAIlgD,KAAK+mD;AAKP,aAJAphD,GAAMR,eAAAA,GACO,UAAbqmC,KAAIxrC,KAAC4rB,aAAAA,WAAQ4f,MAAbA,GAAe4U,4BAAAA,GACD,UAAdF,KAAIlgD,KAAC47C,cAAAA,WAASsE,MAAdA,GAAgBva,kBAAkB3lC,KAAK+mD,SAASvxC,KAAAA,GAChDxV,KAAK+mD,WAAW,MACT/mD,KAAKulD,eAAAA;AACP,QAAI0B,GAAkBthD,EAAAA,GAAQ;AAAA,UAAAw6C;AACnCx6C,MAAAA,GAAMR,eAAAA;AACN,YAAM0sC,KAAQmV,GAAerhD,EAAAA;AAE7B,aADcw6C,UAAdA,KAAAngD,KAAK47C,cAAAA,WAASuE,MAAdA,GAAgB3P,+BAA+BqB,EAAAA,GACxC7xC,KAAK4B,YAAY+D,GAAM+O,aAAarJ,KAAAA;IAC7C;EACD,GAEDw0C,UAAAA;AACqB,QAAAQ;AAAfrgD,SAAK+mD,aACO,UAAd1G,KAAIrgD,KAAC47C,cAAAA,WAASyE,MAAdA,GAAgBla,iBAAiBnmC,KAAK+mD,SAASvxC,KAAAA,GAC/CxV,KAAK+mD,WAAW;EAEnB,GAED3E,eAAez8C,IAAAA;AACT3F,SAAKqlD,cACPrlD,KAAKqlD,YAAAA,OACA3xC,EAAe3S,iBAAef,KAAKulD,eAAAA;EAE5C,EAAA,CAAA,GACDj7B,GAhJkB66B,IAkJL,QAAA,EACZ+B,YAAAA;AAAY,QAAA1G,IAC2DG;AAArE,QAAkBH,UAAlBA,KAAIxgD,KAAK47C,cAAAA,WAAS4E,MAAdA,GAAgBxb,oCAAoC,UAAA;AAEtD,aADAhlC,KAAK2F,MAAMR,eAAAA,GACU,UAArBw7C,KAAO3gD,KAAK47C,cAAAA,WAAS+E,KAAAA,SAAdA,GAAgB7X,sBAAsB,UAAA;EAEhD,GAEDqe,aAAAA;AAAa,QAAAnG,IACyDG;AAApE,QAAkBH,UAAlBA,KAAIhhD,KAAK47C,cAAAA,WAASoF,MAAdA,GAAgBhc,oCAAoC,SAAA;AAEtD,aADAhlC,KAAK2F,MAAMR,eAAAA,GACU,UAArBg8C,KAAOnhD,KAAK47C,cAAAA,WAASuF,KAAAA,SAAdA,GAAgBrY,sBAAsB,SAAA;EAEhD,GAEDse,YAAAA;AAAY,QAAA/F,IACuDD,IAAAI;AAAjE,QAAkBH,UAAlBA,KAAIrhD,KAAK47C,cAAAA,WAASyF,MAAdA,GAAgBtc,gCAAgC,UAAA;AAIlD,aAHA/kC,KAAK2F,MAAMR,eAAAA,GACE,UAAbi8C,KAAIphD,KAAC4rB,aAAAA,WAAQw1B,MAAbA,GAAetC,iCAAAA,GACD0C,UAAdA,KAAAxhD,KAAK47C,cAAAA,WAAS4F,MAAdA,GAAgBvc,kBAAkB,UAAA,GAC3BjlC,KAAK6nB,OAAAA;EAEf,GAEDw/B,MAAAA;AAAM,QAAAtF,IAC2Ca;AAA/C,QAAkB,UAAlBb,KAAI/hD,KAAK47C,cAAAA,WAASmG,MAAdA,GAAgBva,wBAAAA;AAGlB,aAFAxnC,KAAK2F,MAAMR,eAAAA,GACG,UAAdy9C,KAAI5iD,KAAC47C,cAAAA,WAASgH,MAAdA,GAAgBluB,qBAAAA,GACT10B,KAAK6nB,OAAAA;EAEf,GAED,cAAA;AAAc,QAAAi7B,IACmCC;AAA/C,QAAkB,UAAlBD,KAAI9iD,KAAK47C,cAAAA,WAASkH,MAAdA,GAAgBxb,wBAAAA;AAGlB,aAFAtnC,KAAK2F,MAAMR,eAAAA,GACG,UAAd49C,KAAI/iD,KAAC47C,cAAAA,WAASmH,MAAdA,GAAgBtuB,qBAAAA,GACTz0B,KAAK6nB,OAAAA;EAEhB,EAAA,CAAA,GACDyC,GAzLkB66B,IA2LC,cAAA,EAClBmC,sBAAAA;AACE,WAAOtnD,KAAKilC,kBAAkB,YAAY,EAAE+G,iBAAAA,MAAiB,CAAA;EAC9D,GAEDub,cAAAA;AACE,WAAOvnD,KAAKilC,kBAAkB,UAAA;EAC/B,GAEDuiB,eAAAA;AAEE,WADAxnD,KAAK2F,MAAMR,eAAAA,GACJnF,KAAK0oC,mBAAmB,WAAA;AAAW,UAAAsa;AACxChjD,WAAKynD,oBAAkC,UAAjBzE,KAAGhjD,KAAK47C,cAAAA,WAASoH,KAAAA,SAAdA,GAAgBhhB,iBAAAA;IAC3C,CAAA;EACD,GAED0lB,wBAAAA;AACE,WAAO1nD,KAAKilC,kBAAkB,YAAY,EAAE+G,iBAAAA,MAAiB,CAAA;EAC9D,GAED2b,gBAAAA;AACE,WAAO3nD,KAAKilC,kBAAkB,UAAA;EAC/B,GAED2iB,wBAAAA;AACE,WAAO5nD,KAAKilC,kBAAkB,UAAA;EAC/B,GAED4iB,uBAAAA;AACE,WAAO7nD,KAAKilC,kBAAkB,SAAA;EAC/B,GAED6iB,uBAAAA;AACE,WAAO9nD,KAAKilC,kBAAkB,SAAA;EAC/B,GAED8iB,yBAAAA;AACE,WAAO/nD,KAAKilC,kBAAkB,UAAA;EAC/B,GAED+iB,wBAAAA;AACE,WAAOhoD,KAAKilC,kBAAkB,SAAA;EAC/B,GAEDgjB,yBAAAA;AACE,WAAOjoD,KAAKilC,kBAAkB,UAAA;EAC/B,GAEDijB,wBAAAA;AACE,WAAOloD,KAAKilC,kBAAkB,SAAA;EAC/B,GAEDkjB,qBAAAA;AACE,WAAOnoD,KAAKilC,kBAAkB,UAAA;EAC/B,GAEDmjB,oBAAAA;AACE,WAAOpoD,KAAKilC,kBAAkB,SAAA;EAC/B,GAEDojB,kBAAAA;AACE,WAAOroD,KAAK6lD,6BAA6B,mBAAmB7lD,KAAK2F,MAAMkD,IAAAA;EACxE,GAEDy/C,aAAAA;AACE,WAAOtoD,KAAK2lD,2BAA2B,MAAA;EACxC,GAED4C,kBAAAA;AACE,WAAOvoD,KAAK6lD,6BAA6B,SAAS7lD,KAAK2F,MAAMkD,IAAAA;EAC9D,GAED2/C,iBAAAA;AACE,WAAOxoD,KAAK6lD,6BAA6B,QAAQ7lD,KAAK2F,MAAMkD,IAAAA;EAC7D,GAED4/C,eAAAA;AAAe,QAAAxF;AACb,QAAkB,UAAlBA,KAAIjjD,KAAK47C,cAAAA,WAASqH,MAAdA,GAAgBzb,wBAAAA;AAClB,aAAOxnC,KAAK0oC,mBAAmB,WAAA;AAAW,YAAA8a;AACxC,eAAqB,UAArBA,KAAOxjD,KAAK47C,cAAAA,WAAS4H,KAAAA,SAAdA,GAAgB9uB,qBAAAA;MACzB,CAAA;EAEH,GAEDg0B,eAAAA;AACE,WAAO1oD,KAAK2lD,2BAA2B,QAAA;EACxC,GAEDgD,sBAAAA;AACE,WAAO3oD,KAAK2lD,2BAA2B,eAAA;EACxC,GAEDiD,oBAAAA;AACE,WAAO5oD,KAAK2lD,2BAA2B,aAAA;EACxC,GAEDkD,oBAAAA;AACE,WAAO7oD,KAAK2lD,2BAA2B,aAAA;EACxC,GAEDmD,qBAAAA;AACE,WAAO9oD,KAAK2lD,2BAA2B,cAAA;EACxC,GAEDoD,gBAAAA;AAAgB,QAAApF;AACd,QAAkB,UAAlBA,KAAI3jD,KAAK47C,cAAAA,WAAS+H,MAAdA,GAAgBrc,wBAAAA;AAClB,aAAOtnC,KAAK0oC,mBAAmB,WAAA;AAAW,YAAAkb;AACxC,eAAqB,UAArBA,KAAO5jD,KAAK47C,cAAAA,WAASgI,KAAAA,SAAdA,GAAgBnvB,qBAAAA;MACzB,CAAA;EAEH,GAEDu0B,eAAAA;AACEhpD,SAAK0oC,mBAAmB,WAAA;AACtB,iBAAWj1B,MAA+BowC,UAAlBA,KAAI7jD,KAAK47C,cAAAA,WAASiI,KAAAA,SAAdA,GAAgB9b,qBAAAA,GAAwB;AAAA,YAAA8b,IAAAoF;AACpDA,kBAAdA,KAAAjpD,KAAK47C,cAAAA,WAASqN,MAAdA,GAAgBnjB,uBAAuBryB,EAAAA;MACzC;IACF,CAAA;EACD,GAEDy1C,8BAAAA;AACE,WAAOlpD,KAAK6lD,6BAA6B,YAAY7lD,KAAK2F,MAAMkD,IAAAA;EACjE,GAEDsgD,+BAAAA;AACE,WAAOnpD,KAAK6lD,6BAA6B,WAAW7lD,KAAK2F,MAAMkD,IAAAA;EAChE,GAEDugD,sBAAAA;AACE,WAAOppD,KAAK2lD,2BAA2B,QAAA;EACxC,GAED0D,kBAAAA;AACE,WAAOrpD,KAAK2lD,2BAA2B,KAAA;EACxC,GAED2D,oBAAAA;AACE,WAAOtpD,KAAK2lD,2BAA2B,KAAA;EACxC,GAED4D,kBAAAA;AACE,WAAOvpD,KAAK2lD,2BAA2B,WAAA;EACxC,GAED6D,cAAAA;AAAc,QAAAlI;AACZ,WAAoB,UAApBA,KAAOthD,KAAK4rB,aAAAA,WAAQ01B,KAAAA,SAAbA,GAAemI,+BAAAA;EACvB,GAEDC,cAAAA;AAAc,QAAAnI;AACZ,WAAoB,UAApBA,KAAOvhD,KAAK4rB,aAAAA,WAAQ21B,KAAAA,SAAbA,GAAeoI,+BAAAA;EACvB,GAEDC,wBAAAA;AAEE,WADA5pD,KAAKqlD,YAAAA,MACErlD,KAAK2jC,aAAa3jC,KAAK2F,MAAMkD,IAAAA;EACrC,GAEDghD,wBAAAA;AAEE,WADA7pD,KAAKqlD,YAAAA,OACErlD,KAAK2jC,aAAa3jC,KAAK2F,MAAMkD,IAAAA;EACrC,GAEDihD,iBAAAA;AACE,UAAMt0C,KAAQxV,KAAKynD;AACR,QAAAhG;AAAX,QAAIjsC;AAGF,aAFAxV,KAAKynD,oBAAoB,MACZ,UAAbhG,KAAIzhD,KAAC4rB,aAAAA,WAAQ61B,MAAbA,GAAerB,4BAAAA,GACRpgD,KAAK0oC,mBAAmB,WAAA;AAAW,YAAAqhB;AACxC,eAAqB,UAArBA,KAAO/pD,KAAK47C,cAAAA,WAASmO,KAAAA,SAAdA,GAAgBpkB,kBAAkBnwB,EAAAA;MAC3C,CAAA;EAEH,GAEDw0C,kBAAAA;AACE,UAAA,EAAMt1C,cAAEA,GAAAA,IAAiB1U,KAAK2F,OACxBi7C,KAAQ,EAAElsC,cAAAA,GAAAA,GAEVvI,KAAOuI,GAAaC,QAAQ,KAAA,GAC5BlQ,KAAOiQ,GAAaC,QAAQ,WAAA;AAElC,QAAIxI,IAAM;AAAA,UAAA21C;AACR,UAAIzxC;AACJrQ,WAAK2F,MAAMR,eAAAA,GACXy7C,GAAM51C,OAAO;AACb,YAAMvM,KAAOiW,GAAaC,QAAQ,iBAAA;AAEhCtE,MAAAA,KADE5R,KACOga,GAA0Bha,EAAAA,EAAMuU,KAAAA,IAEhC7G,IAEXy0C,GAAMn8C,OAAOzE,KAAKg8C,eAAe7vC,IAAMkE,EAAAA,GAC1ByxC,UAAbA,KAAA9hD,KAAK4rB,aAAAA,WAAQk2B,MAAbA,GAAeb,yBAAyBL,EAAAA,GACxC5gD,KAAK0oC,mBAAmB,WAAA;AAAW,YAAAuhB;AACjC,eAAqBA,UAArBA,KAAOjqD,KAAK47C,cAAAA,WAASqO,KAAAA,SAAdA,GAAgB9lB,WAAWyc,GAAMn8C,IAAAA;MAC1C,CAAA,GACAzE,KAAK0lD,cAAc,MAAA;AAAM,YAAA1D;AACvB,eAAoB,UAApBA,KAAOhiD,KAAK4rB,aAAAA,WAAQo2B,KAAAA,SAAbA,GAAed,wBAAwBN,EAAAA;MAAM;IAExD,WAAWnsC,GAAwBC,EAAAA,GAAe;AAAA,UAAA6tC;AAChD3B,MAAAA,GAAM51C,OAAO,cACb41C,GAAMvwC,SAASqE,GAAaC,QAAQ,YAAA,GACvB4tC,UAAbA,KAAAviD,KAAK4rB,aAAAA,WAAQ22B,MAAbA,GAAetB,yBAAyBL,EAAAA,GACxC5gD,KAAK0oC,mBAAmB,WAAA;AAAW,YAAAwhB;AACjC,eAAqBA,UAArBA,KAAOlqD,KAAK47C,cAAAA,WAASsO,KAAAA,SAAdA,GAAgBvmB,aAAaid,GAAMvwC,MAAAA;MAC5C,CAAA,GAEArQ,KAAK0lD,cAAc,MAAA;AAAM,YAAAjD;AACvB,eAAoB,UAApBA,KAAOziD,KAAK4rB,aAAAA,WAAQ62B,KAAAA,SAAbA,GAAevB,wBAAwBN,EAAAA;MAAM;IAEvD,WAAUuJ,GAAqBnqD,KAAK2F,KAAAA,GAAQ;AAAA,UAAAg9C;AAC3C/B,MAAAA,GAAM51C,OAAO,QACb41C,GAAMjiD,OAAO+V,GAAarJ,MAAM,IACnBs3C,UAAbA,KAAA3iD,KAAK4rB,aAAAA,WAAQ+2B,MAAbA,GAAe1B,yBAAyBL,EAAAA,GACxC5gD,KAAK0oC,mBAAmB,WAAA;AAAW,YAAA0hB;AACjC,eAAqBA,UAArBA,KAAOpqD,KAAK47C,cAAAA,WAASwO,KAAAA,SAAdA,GAAgB9lB,WAAWsc,GAAMjiD,IAAAA;MAC1C,CAAA,GAEAqB,KAAK0lD,cAAc,MAAA;AAAM,YAAAtC;AACvB,eAAoB,UAApBA,KAAOpjD,KAAK4rB,aAAAA,WAAQw3B,KAAAA,SAAbA,GAAelC,wBAAwBN,EAAAA;MAAM;IAEvD,WAAUn8C,IAAM;AAAA,UAAA6+C;AACftjD,WAAK2F,MAAMR,eAAAA,GACXy7C,GAAM51C,OAAO,aACb41C,GAAMn8C,OAAOA,IACA6+C,UAAbA,KAAAtjD,KAAK4rB,aAAAA,WAAQ03B,MAAbA,GAAerC,yBAAyBL,EAAAA,GACxC5gD,KAAK0oC,mBAAmB,WAAA;AAAW,YAAA2hB;AACjC,eAAqBA,UAArBA,KAAOrqD,KAAK47C,cAAAA,WAASyO,KAAAA,SAAdA,GAAgBlmB,WAAWyc,GAAMn8C,IAAAA;MAC1C,CAAA,GACAzE,KAAK0lD,cAAc,MAAA;AAAM,YAAAnC;AACvB,eAAoB,UAApBA,KAAOvjD,KAAK4rB,aAAAA,WAAQ23B,KAAAA,SAAbA,GAAerC,wBAAwBN,EAAAA;MAAM;IAExD;EACD,GAED0J,iBAAAA;AACE,WAAOtqD,KAAK2jC,aAAa3jC,KAAK2F,MAAMkD,IAAAA;EACrC,GAEDi7B,kBAAAA;AACE,WAAO9jC,KAAK2jC,aAAa,IAAA;EAC1B,GAED4mB,aAAAA;AACE,WAAOvqD,KAAK6lD,6BAA6B,QAAQ7lD,KAAK2F,MAAMkD,IAAAA;EAC7D,GAED2hD,oBAAAA;AACE,WAAOxqD,KAAK2lD,2BAA2B,QAAA;EACxC,GAED8E,kBAAAA;AAAkB,QAAA/G;AAEhB,WADa,UAAbA,KAAI1jD,KAAC4rB,aAAAA,WAAQ83B,MAAbA,GAAe5E,iCAAAA,GACR9+C,KAAK0oC,mBAAmB,WAAA;AAAW,UAAAgiB;AACxC,aAAqB,UAArBA,KAAO1qD,KAAK47C,cAAAA,WAAS8O,KAAAA,SAAdA,GAAgB5mB,gBAAAA;IACzB,CAAA;EACD,GAED6mB,wBAAAA;AACE,UAAMC,KAAc5qD,KAAK2F,MAAM+O,aAAaC,QAAQ,YAAA,GAC9CkD,KAAW7X,KAAK2F,MAAMwgD,gBAAAA,EAAkB;AAE9CnmD,SAAK0oC,mBAAmB7wB,IAAU,MAAA;AAChC7X,WAAK2jC,aAAainB,IAAa,EAAErnB,gBAAAA,MAAgB,CAAA;IAAQ,CAAA;EAE5D,GAEDD,aAAAA;AAAa,QAAAunB;AACX,WAAO7qD,KAAK2jC,aAAa3jC,KAAK2F,MAAMkD,SAA+B,UAA3BgiD,KAAI7qD,KAAK2F,MAAM+O,iBAAAA,WAAYm2C,KAAAA,SAAvBA,GAAyBl2C,QAAQ,YAAA,EAAA;EAC9E,GAEDm2C,kBAAAA;AACE,WAAO9qD,KAAK2jC,aAAa3jC,KAAK2F,MAAMkD,IAAAA;EACrC,GAEDkiD,sBAAAA;AACE,WAAO/qD,KAAK2lD,2BAA2B,QAAA;EACzC,EAAA,CAAA;AA8GJ,MAAMS,KAAqB,SAAS4E,IAAAA;AAClC,UAAMx1C,KAAQ9Q,SAAS4qC,YAAAA;AAGvB,WAFA95B,GAAM+5B,SAASyb,GAAY5yC,gBAAgB4yC,GAAY9vB,WAAAA,GACvD1lB,GAAMo8B,OAAOoZ,GAAY3yC,cAAc2yC,GAAY7vB,SAAAA,GAC5C3lB;EACT;AALA,MASMyxC,KAAqBthD,CAAAA,OAAAA;AAAK,QAAAs6C;AAAA,WAAKrwC,MAAMC,MAAuB,UAAlBowC,KAAAt6C,GAAM+O,iBAAAA,WAAYurC,KAAAA,SAAlBA,GAAoBz2B,UAAS,CAAA,CAAA,EAAIvf,SAAS,OAAA;EAAQ;AATlG,MAWMkgD,KAAwBxkD,CAAAA,OAAAA;AAAU,QAAAslD;AAMtC,YAA+B,UAAxBA,KAAAtlD,GAAM+O,aAAarJ,UAAAA,WAAK4/C,KAAAA,SAAxBA,GAA2B,OAAA,CAAOvE,GAAuB/gD,EAAAA,KAAAA,EjDtkBvBob,CAAAA,OAAAA;AAAsB,UAAA,EAArBrM,cAAEA,GAAAA,IAAcqM;AAC1D,aAAOrM,GAAa8U,MAAMvf,SAAS,OAAA,KACjCyK,GAAa8U,MAAMvf,SAAS,WAAA,KAC5ByK,GAAaC,QAAQ,WAAA,EAAa1K,SAAS,yCAAA;IAA0C,GiDmkBgBtE,EAAAA;EAAM;AAjB/G,MAoBM+gD,KAAyB,SAAS/gD,IAAAA;AACtC,UAAMk7C,KAAYl7C,GAAM86C;AACxB,QAAII,IAAW;AAEb,aADkBjxC,MAAMC,KAAKgxC,GAAUr3B,KAAAA,EAAOvS,OAAQjM,CAAAA,OAASA,GAAKtK,MAAM,OAAA,CAAA,EACzD4E,WAAWu7C,GAAUr3B,MAAMlkB,UAAUu7C,GAAUx1C,MAAM/F,UAAU;IAClF;EACF;AA1BA,MA4BMqhD,KAA6B,SAAShhD,IAAAA;AAC1C,UAAMk7C,KAAYl7C,GAAM86C;AACxB,QAAII;AACF,aAAOA,GAAUr3B,MAAMvf,SAAS,YAAA,KAA4C,MAA3B42C,GAAUr3B,MAAMlkB;EAErE;AAjCA,MAmCMihD,KAA8B,SAAS5gD,IAAAA;AAC3C,UAAM2gD,KAAU,CAAA;AAQhB,WAPI3gD,GAAMg5C,UACR2H,GAAQ38C,KAAK,KAAA,GAEXhE,GAAM6gD,YACRF,GAAQ38C,KAAK,OAAA,GAEf28C,GAAQ38C,KAAKhE,GAAMpB,GAAAA,GACZ+hD;EACT;AA7CA,MA+CMU,KAAkBrhD,CAAAA,QAAW,EACjCupC,GAAGvpC,GAAM85C,SACTtQ,GAAGxpC,GAAM+5C,QAAAA;AAjDX,MC/jBMwL,KAA0B;AD+jBhC,MC9jBMC,KAAuB;AD8jB7B,MC7jBMC,KAAAA,GAAqB3nD,OAAMynD,IAAuBznD,IAAAA,EAAAA,OAAK0nD,EAAAA;AD6jB7D,MC5jBME,KAAiB;AD4jBvB,MC3jBMC,KAAoB,GAAA7nD,OAAM4nD,IAAkC,oBAAA;AD2jBlE,MC1jBME,KAAoB,GAAA9nD,OAAM4nD,IAAmC,qBAAA;AD0jBnE,MCzjBMG,KAAmB,GAAA/nD,OAAM4nD,IAAkC,oBAAA;ADyjBjE,MCxjBMI,KAAoBA,CAAC3rD,IAAS2T,QAC7BA,OAAiBA,KAAgBi4C,GAAiB5rD,EAAAA,IAChDA,GAAQyU,cAAa,2BAAA9Q,OAA4BgQ,IAAAA,IAAAA,CAAAA;ADsjB1D,MCpjBMk4C,KAAiB7rD,CAAAA,OAAYA,GAAQuM,aAAa,kBAAA;ADojBxD,MCnjBMq/C,KAAoB5rD,CAAAA,OACjBA,GAAQuM,aAAa,qBAAA,KAA0BvM,GAAQuM,aAAa,4BAAA;AAI9D,MAAMu/C,KAAN,cAAgCx+C,EAAAA;IAC7CwB,YAAY9O,IAAAA;AACV+O,YAAM/O,EAAAA,GACNE,KAAKwyC,uBAAuBxyC,KAAKwyC,qBAAqB97B,KAAK1W,IAAAA,GAC3DA,KAAK6rD,0BAA0B7rD,KAAK6rD,wBAAwBn1C,KAAK1W,IAAAA,GACjEA,KAAK8rD,uBAAuB9rD,KAAK8rD,qBAAqBp1C,KAAK1W,IAAAA,GAC3DA,KAAK+rD,wBAAwB/rD,KAAK+rD,sBAAsBr1C,KAAK1W,IAAAA,GAC7DA,KAAKF,UAAUA,IACfE,KAAKpB,aAAa,CAAA,GAClBoB,KAAKgsD,UAAU,CAAA,GACfhsD,KAAKisD,kBAAAA,GAELpnD,EAAY,aAAa,EACvBE,WAAW/E,KAAKF,SAChBkF,kBAAkBmmD,IAClBlmD,cAAcjF,KAAKwyC,qBAAAA,CAAAA,GAErB3tC,EAAY,aAAa,EACvBE,WAAW/E,KAAKF,SAChBkF,kBAAkBkmD,IAClBjmD,cAAcjF,KAAK6rD,wBAAAA,CAAAA,GAErBhnD,EAAY,SAAS,EAAEE,WAAW/E,KAAKF,SAASkF,kBAAkBomD,IAAuBjmD,gBAAAA,KAAgB,CAAA,GACzGN,EAAY,SAAS,EACnBE,WAAW/E,KAAKF,SAChBkF,kBAAkBumD,IAClBtmD,cAAcjF,KAAK8rD,qBAAAA,CAAAA,GAErBjnD,EAAY,WAAW,EACrBE,WAAW/E,KAAKF,SAChBkF,kBAAkBwmD,IAClBvmD,cAAcjF,KAAK+rD,sBAAAA,CAAAA;IAEvB;IAIAvZ,qBAAqB7sC,IAAO7F,IAAAA;AAAS,UAAA4rB;AACtB,gBAAbA,KAAI1rB,KAAC4rB,aAAAA,WAAQF,MAAbA,GAAewgC,sBAAAA,GACfvmD,GAAMR,eAAAA;AACN,YAAMgnD,KAAaR,GAAc7rD,EAAAA;AAEjC,aAAIE,KAAKosD,UAAUD,EAAAA,IACVnsD,KAAKqsD,aAAaF,EAAAA,IAELv/B,UAApBA,KAAO5sB,KAAK4rB,aAAAA,WAAQgB,KAAAA,SAAbA,GAAe0/B,uBAAuBH,IAAYrsD,EAAAA;AADpD,UAAA8sB;IAGT;IAEAi/B,wBAAwBlmD,IAAO7F,IAAAA;AAAS,UAAAmjC;AACzB,gBAAbA,KAAIjjC,KAAC4rB,aAAAA,WAAQqX,MAAbA,GAAeipB,sBAAAA,GACfvmD,GAAMR,eAAAA;AACN,YAAMsO,KAAgBi4C,GAAiB5rD,EAAAA;AAIhC,UAAA0kC;AAFHxkC,WAAKosD,UAAU34C,EAAAA,IACjBzT,KAAKqsD,aAAa54C,EAAAA,IAEL+wB,UAAbA,KAAAxkC,KAAK4rB,aAAAA,WAAQ4Y,MAAbA,GAAe+nB,0BAA0B94C,EAAAA;AAG3C,aAAOzT,KAAKwsD,wBAAAA;IACd;IAEAV,qBAAqBnmD,IAAO7F,IAAAA;AAC1B,YAAM2sD,KAAgB3mD,EAA2BhG,IAAS,EAAEkF,kBAAkBqmD,GAAAA,CAAAA;AAE9E,aAAOrrD,KADQF,GAAQuM,aAAa,kBAAA,GAChBtG,KAAK/F,MAAMysD,EAAAA;IACjC;IAEAV,sBAAsBpmD,IAAO7F,IAAAA;AAC3B,UAAsB,OAAlB6F,GAAMyuC,SAAgB;AAExBzuC,QAAAA,GAAMR,eAAAA;AACN,cAAM2kB,KAAYhqB,GAAQuM,aAAa,MAAA,GACjCqgD,KAAS1sD,KAAKosD,UAAUtiC,EAAAA;AAC9B9pB,aAAK2I,aAAa+jD,EAAAA;MACpB;AACA,UAAsB,OAAlB/mD,GAAMyuC;AAGR,eADAzuC,GAAMR,eAAAA,GACCnF,KAAK2sD,WAAAA;IAEhB;IAIAC,cAAcZ,IAAAA;AAEZ,aADAhsD,KAAKgsD,UAAUA,IACRhsD,KAAK6sD,qBAAAA;IACd;IAEAA,uBAAAA;AACE,aAAO7sD,KAAK8sD,iBAAiB,CAAChtD,IAASqsD,OAAAA;AACrCrsD,QAAAA,GAAQitD,WAAAA,UAAW/sD,KAAKgsD,QAAQG;MAAqB,CAAA;IAEzD;IAEAW,iBAAiB/hD,IAAAA;AACf,aAAO6E,MAAMC,KAAK7P,KAAKF,QAAQmhB,iBAAiBkqC,EAAAA,CAAAA,EAAuB76C,IAAKxQ,CAAAA,OAC1EiL,GAASjL,IAAS6rD,GAAc7rD,EAAAA,CAAAA,CAAAA;IAEpC;IAIAktD,iBAAiBpuD,IAAAA;AAEf,aADAoB,KAAKpB,aAAaA,IACXoB,KAAKwsD,wBAAAA;IACd;IAEAA,0BAAAA;AACE,aAAOxsD,KAAKitD,oBAAoB,CAACntD,IAAS2T,QACxC3T,GAAQitD,WAAAA,UAAW/sD,KAAKpB,WAAW6U,KAC/BzT,KAAKpB,WAAW6U,OAAkBzT,KAAKktD,gBAAgBz5C,EAAAA,KACzD3T,GAAQ6I,aAAa,oBAAoB,EAAA,GAClC7I,GAAQoJ,UAAUC,IAAI,aAAA,MAE7BrJ,GAAQghB,gBAAgB,kBAAA,GACjBhhB,GAAQoJ,UAAU1G,OAAO,aAAA,GAAA;IAGtC;IAEAyqD,oBAAoBliD,IAAAA;AAClB,aAAO6E,MAAMC,KAAK7P,KAAKF,QAAQmhB,iBAAiBiqC,EAAAA,CAAAA,EAA0B56C,IAAKxQ,CAAAA,OAC7EiL,GAASjL,IAAS4rD,GAAiB5rD,EAAAA,CAAAA,CAAAA;IAEvC;IAEAqtD,qBAAqBv5C,IAAAA;AACnB,YAAMw5C,KAAYj8C,KAAKO,UAAUkC,GAAKqG,KAAAA,CAAAA;AACtC,iBAAWozC,MAAUz9C,MAAMC,KAAK7P,KAAKF,QAAQmhB,iBAAiB,iBAAA,CAAA,GAAqB;AACjF,cAAMqsC,KAAaD,GAAOhhD,aAAa,eAAA,EAAiBrD,MAAM,GAAA;AAE9D,YADwBmI,KAAKO,UAAU47C,GAAWrzC,KAAAA,CAAAA,MAC1BmzC;AAEtB,iBADAlnD,EAAa,aAAa,EAAEnB,WAAWsoD,GAAAA,CAAAA,GAAAA;MAG3C;AACA,aAAA;IACF;IAIAH,gBAAgBK,IAAAA;AACd,YAAMztD,KAAUE,KAAKosD,UAAUmB,EAAAA;AAC/B,UAAIztD;AACF,eAAOA,GAAQ8gB,aAAa,kBAAA;IAEhC;IAEAyrC,aAAakB,IAAAA;AACX,aAAIvtD,KAAKktD,gBAAgBK,EAAAA,IAChBvtD,KAAK2sD,WAAAA,IAEL3sD,KAAKwtD,WAAWD,EAAAA;IAE3B;IAEAC,WAAWD,IAAAA;AAAY,UAAAplB,IAAAgC;AACrBnqC,WAAK2sD,WAAAA,GACQ,UAAbxkB,KAAInoC,KAAC4rB,aAAAA,WAAQuc,MAAbA,GAAeslB,sBAAAA;AAEf,YAAM3tD,KAAUE,KAAKosD,UAAUmB,EAAAA;AAC/BztD,MAAAA,GAAQ6I,aAAa,oBAAoB,EAAA,GACzC7I,GAAQoJ,UAAUC,IAAI,aAAA,GAEtByG,MAAMC,KAAK/P,GAAQmhB,iBAAiB,iBAAA,CAAA,EAAoBhY,QAASykD,CAAAA,OAAAA;AAC/DA,QAAAA,GAAc5sC,gBAAgB,UAAA;MAAW,CAAA;AAG3C,YAAMrN,KAAgBi4C,GAAiB5rD,EAAAA;AACvC,UAAI2T,IAAe;AACjB,cAAM/I,KAAQ+gD,GAAkB3rD,IAASytD,EAAAA;AACrC7iD,QAAAA,OACFA,GAAMlG,QAAQxE,KAAKpB,WAAW6U,OAAkB,IAChD/I,GAAMklC,OAAAA;MAEV;AAEA,aAAoB,UAApBzF,KAAOnqC,KAAK4rB,aAAAA,WAAQue,KAAAA,SAAbA,GAAewjB,qBAAqBJ,EAAAA;IAC7C;IAEA5kD,aAAa8jD,IAAAA;AAAe,UAAAniB;AAC1B,YAAM72B,KAAgBi4C,GAAiBe,EAAAA,GACjC/hD,KAAQ+gD,GAAkBgB,IAAeh5C,EAAAA;AAE/C,aAAA,CAAI/I,GAAMkjD,iBACRljD,GAAMmjD,kBAAkB,EAAA,GACnBnjD,GAAMojD,cAAAA,KAAoB9tD,KAAK+tD,gBAAgBrjD,EAAAA,MAOzC,UAAb4/B,KAAItqC,KAAC4rB,aAAAA,WAAQ0e,MAAbA,GAAe0jB,0BAA0Bv6C,IAAe/I,GAAMlG,KAAAA,GACvDxE,KAAK2sD,WAAAA,MAPRjiD,GAAMmjD,kBAAkB,eAAA,GACxBnjD,GAAM/B,aAAa,sBAAsB,EAAA,GACzC+B,GAAMxB,UAAUC,IAAI,eAAA,GACbuB,GAAM2oC,MAAAA;IAKnB;IAEA0a,gBAAgBrjD,IAAAA;AACd,aAAA,CAAIA,GAAMkW,aAAa,yBAAA,KACd7B,GAAUkvC,iBAAiB,KAAK,QAAQvjD,GAAMlG,KAAAA;IAIzD;IAEAsc,gBAAgB2rC,IAAAA;AAAe,UAAAhiB;AAC7B,YAAMh3B,KAAgBi4C,GAAiBe,EAAAA;AAEvC,aADahiB,UAAbA,KAAAzqC,KAAK4rB,aAAAA,WAAQ6e,MAAbA,GAAeyjB,0BAA0Bz6C,EAAAA,GAClCzT,KAAK2sD,WAAAA;IACd;IAEAA,aAAAA;AACE,YAAM7sD,KAAUE,KAAKF,QAAQyU,cAAc+2C,EAAAA;AAC9B,UAAA1gB;AAAb,UAAI9qC;AAIF,eAHAA,GAAQghB,gBAAgB,kBAAA,GACxBhhB,GAAQoJ,UAAU1G,OAAO,aAAA,GACzBxC,KAAKisD,kBAAAA,GAAAA,UACLrhB,KAAO5qC,KAAK4rB,aAAAA,WAAQgf,KAAAA,SAAbA,GAAeujB,sBA9NLruD,CAAAA,OAAYA,GAAQuM,aAAa,kBAAA,GA8NOvM,EAAAA,CAAAA;IAE7D;IAEAmsD,oBAAAA;AACEr8C,YAAMC,KAAK7P,KAAKF,QAAQmhB,iBAAiBuqC,EAAAA,CAAAA,EAAsBviD,QAASyB,CAAAA,OAAAA;AACtEA,QAAAA,GAAM/B,aAAa,YAAY,UAAA,GAC/B+B,GAAMoW,gBAAgB,oBAAA,GACtBpW,GAAMxB,UAAU1G,OAAO,eAAA;MAAgB,CAAA;IAE3C;IAEA4pD,UAAUmB,IAAAA;AACR,aAAOvtD,KAAKF,QAAQyU,cAAAA,qBAAa9Q,OAAsB8pD,IAAU,GAAA,CAAA;IACnE;EAAA;AC3Oa,MAAMa,KAAN,cAA+BhY,GAAAA;IAiD5CxnC,YAAWmS,IAAAA;AAAoC,UAAA,EAAnCstC,eAAEA,IAAa3pD,UAAEA,IAAQD,MAAEA,GAAAA,IAAMsc;AAC3ClS,YAAAA,GAASxJ,SAAAA,GACTrF,KAAKquD,gBAAgBA,IACrBruD,KAAK+W,mBAAmB,IAAIg5B,GAAiB/vC,KAAKquD,aAAAA,GAClDruD,KAAK+W,iBAAiB6U,WAAW5rB,MAEjCA,KAAK8hC,cAAc,IAAIU,MACvBxiC,KAAK8hC,YAAYlW,WAAW5rB,MAE5BA,KAAKohC,oBAAoB,IAAIE,GAAkBthC,KAAK8hC,YAAYpP,eAAAA,CAAAA,GAChE1yB,KAAKohC,kBAAkBxV,WAAW5rB,MAElCA,KAAKykD,kBACyB,MAA5B/wC,EAAa9I,SAAAA,IACT,IAAIu6C,GAAsBnlD,KAAKquD,aAAAA,IAC/B,IAAInS,GAAsBl8C,KAAKquD,aAAAA,GAErCruD,KAAKykD,gBAAgB74B,WAAW5rB,MAChCA,KAAKykD,gBAAgB7I,YAAY57C,KAAK8hC,aAEtC9hC,KAAKsuD,wBAAwB,IAAIha,GAAsBt0C,KAAKquD,eAAeruD,KAAK8hC,WAAAA,GAChF9hC,KAAKsuD,sBAAsB1iC,WAAW5rB,MAEtCA,KAAKuuD,oBAAoB,IAAI3C,GAAkB5rD,KAAKquD,cAAcG,cAAAA,GAClExuD,KAAKuuD,kBAAkB3iC,WAAW5rB,MAElCA,KAAKyuD,SAAS,IAAIphB,GAAOrtC,KAAK8hC,aAAa9hC,KAAK+W,kBAAkB/W,KAAKquD,aAAAA,GACnE3pD,KACF1E,KAAKyuD,OAAOjhB,aAAa9oC,EAAAA,IAEzB1E,KAAKyuD,OAAOhhB,SAAShpC,EAAAA;IAEzB;IAEAqS,2BAAAA;AACE,aAAOQ,GAAwBR,yBAAyB9W,KAAK+W,gBAAAA;IAC/D;IAEAC,6BAAAA;AACE,aAAOM,GAAwBN,2BAA2BhX,KAAK+W,gBAAAA;IACjE;IAEA8Q,SAAAA;AACE,aAAO7nB,KAAKsuD,sBAAsBzmC,OAAAA;IACpC;IAEAy9B,UAAAA;AACE,aAAOtlD,KAAK8hC,YAAYsC,YAAYpkC,KAAKquD,cAAczuC,SAAAA;IACzD;IAIAijB,6BAA6Bn+B,IAAAA;AAE3B,UADA1E,KAAK0uD,oBAAoB,iBAAA,GAAA,CACpB1uD,KAAK2uD;AACR,eAAO3uD,KAAK6nB,OAAAA;IAEhB;IAEA0jB,sCAAsC9I,IAAAA;AAIpC,aAHAziC,KAAKyiC,oBAAoBA,IACzBziC,KAAKuuD,kBAAkBvB,iBAAiBhtD,KAAKyiC,iBAAAA,GAC7CziC,KAAK4uD,qBAAAA,GACE5uD,KAAK0uD,oBAAoB,qBAAqB,EAAE9vD,YAAYoB,KAAKyiC,kBAAAA,CAAAA;IAC1E;IAEAiJ,sCAAsCl2B,IAAAA;AAChCxV,WAAK6uD,YACP7uD,KAAK8uD,cAAct5C;IAEvB;IAEAivB,4BAA4B9lC,IAAAA;AAC1B,aAAOqB,KAAK0uD,oBAAoB,eAAe,EAAE/vD,MAAAA,GAAAA,CAAAA;IACnD;IAEA6rC,4BAA4B79B,IAAAA;AAC1B,YAAMi1B,KAAoB5hC,KAAKohC,kBAAkBI,iBAAiB70B,EAAAA;AAClE,aAAO3M,KAAK0uD,oBAAoB,kBAAkB,EAAE/hD,YAAYi1B,GAAAA,CAAAA;IAClE;IAEA+I,6BAA6Bh+B,IAAAA;AAC3B3M,WAAKsuD,sBAAsB5Y,sBAAsB/oC,EAAAA;AACjD,YAAMi1B,KAAoB5hC,KAAKohC,kBAAkBI,iBAAiB70B,EAAAA;AAElE,aADA3M,KAAK0uD,oBAAoB,mBAAmB,EAAE/hD,YAAYi1B,GAAAA,CAAAA,GACnD5hC,KAAK0uD,oBAAoB,QAAA;IAClC;IAEA5jB,yCAAyCn+B,IAAAA;AAEvC,aADA3M,KAAKsuD,sBAAsBpxC,wBAAwBvQ,EAAAA,GAC5C3M,KAAK0uD,oBAAoB,QAAA;IAClC;IAEArkB,+BAA+B19B,IAAAA;AAC7B,YAAMi1B,KAAoB5hC,KAAKohC,kBAAkBO,mBAAmBh1B,EAAAA;AACpE,aAAO3M,KAAK0uD,oBAAoB,qBAAqB,EAAE/hD,YAAYi1B,GAAAA,CAAAA;IACrE;IAEAqJ,qCAAqCt+B,IAAYpE,IAAAA;AAG/C,aAFAvI,KAAK+uD,0BAA0B/uD,KAAK8hC,YAAYp9B,SAAS82B,6BAA6B7uB,EAAAA,GACtF3M,KAAKsuD,sBAAsBzY,qCAAqClpC,IAAYpE,EAAAA,GACrEvI,KAAK+W,iBAAiBuxB,iBAAiBtoC,KAAK+uD,uBAAAA;IACrD;IAEA3jB,oCAAoCz+B,IAAAA;AAClC3M,WAAKsuD,sBAAsBvY,0BAAAA,GAC3B/1C,KAAK+uD,0BAA0B;IACjC;IAEA3mB,sDAAsDnM,IAAAA;AACpD,UAAA,CAAIj8B,KAAKgvD,mBAAoBhvD,KAAKivD,UAAAA;AAGlC,eAFAjvD,KAAKkvD,yBAAyBjzB,IAC9Bj8B,KAAKmvD,gDAAgDnvD,KAAK8hC,YAAYY,UACjE1iC,KAAK2uD,gBAAAA,SACD3uD,KAAK6nB,OAAAA;IAEhB;IAEAsb,8BAAAA;AACEnjC,WAAKgvD,kBAAAA;IACP;IAEA3rB,6BAAAA;AACErjC,WAAKsuD,sBAAsB3Y,iBAAAA,GAC3B31C,KAAK6nB,OAAAA,GACL7nB,KAAKgvD,kBAAAA;IACP;IAEA3mB,sBAAAA;AACE,aAAOroC,KAAK+W;IACd;IAIA2qB,+CAA+C/0B,IAAAA;AAC7C,aAAO3M,KAAK4lC,iBAAiBj5B,EAAAA;IAC/B;IAIA4oC,4CAAAA;AAGE,aAFAv1C,KAAKykD,gBAAgB1J,2BAAAA,GACrB/6C,KAAK+W,iBAAiB45B,KAAAA,GACf3wC,KAAK+W,iBAAiB85B,eAAAA;IAC/B;IAEA2E,2CAAAA;AAIE,aAHAx1C,KAAKykD,gBAAgBzJ,0BAAAA,GACrBh7C,KAAK+W,iBAAiB65B,OAAAA,GACtB5wC,KAAK4uD,qBAAAA,GACE5uD,KAAK0uD,oBAAoB,MAAA;IAClC;IAEAjZ,iCAAAA;AACMz1C,WAAKkvD,2BACHlvD,KAAKmvD,kDAAkDnvD,KAAK8hC,YAAYY,YAC1E1iC,KAAK+W,iBAAiBuxB,iBAAiBtoC,KAAKkvD,sBAAAA,GAE9ClvD,KAAKkvD,yBAAyB,MAC9BlvD,KAAKmvD,gDAAgD,OAGnDnvD,KAAKovD,gCAAgCpvD,KAAK8hC,YAAYY,aACxD1iC,KAAKqvD,iBAAAA,GACLrvD,KAAK8hC,YAAYsF,wBAAAA,GACjBpnC,KAAK0uD,oBAAoB,QAAA,IAG3B1uD,KAAKovD,8BAA8BpvD,KAAK8hC,YAAYY;IACtD;IAEAmS,gCAAAA;AAKE,aAJI70C,KAAKsvD,mBAAAA,KACPtvD,KAAKsoC,iBAAiB,EAAEv2B,OAAO,GAAG/C,QAAQ,EAAA,CAAA,GAE5ChP,KAAKuuD,kBAAkB5B,WAAAA,GAChB3sD,KAAK0uD,oBAAoB,OAAA;IAClC;IAEA3Z,+BAAAA;AACE,aAAO/0C,KAAK0uD,oBAAoB,MAAA;IAClC;IAEAzZ,yCAAyCtoC,IAAYpE,IAAAA;AAEnD,aADAvI,KAAKuuD,kBAAkB5B,WAAAA,GAChB3sD,KAAK8hC,YAAY4D,eAAe/4B,IAAYpE,EAAAA;IACrD;IAEA4tC,qDAAqDxpC,IAAAA;AACnD,YAAMsvB,KAAgBj8B,KAAK+uD,2BAA2B/uD,KAAK8hC,YAAYp9B,SAAS82B,6BAA6B7uB,EAAAA;AAC7G,aAAO3M,KAAK+W,iBAAiBuxB,iBAAiBrM,GAAc,EAAA;IAC9D;IAEAga,0CAA0CtpC,IAAAA;AACxC,aAAO3M,KAAKyuD,OAAOziB,gBAAgB,mBAAmB,EAAErmB,SAAShZ,GAAWxB,IAAI+gC,gBAAAA,KAAgB,CAAA;IAClG;IAEAgK,mDAAmDvpC,IAAAA;AACjD,aAAO3M,KAAK4lC,iBAAiBj5B,EAAAA;IAC/B;IAIAmvC,iCAAAA;AACE97C,WAAK2uD,gBAAAA,MACL3uD,KAAKuvD,kBAAAA;IACP;IAEApU,kCAAAA;AACEn7C,WAAKuvD,kBAAAA;IACP;IAEAxT,gCAAAA;AAEE,UADA/7C,KAAK2uD,gBAAAA,OACD3uD,KAAKuvD;AAEP,eADAvvD,KAAKuvD,kBAAAA,OACEvvD,KAAK6nB,OAAAA;IAEhB;IAEA00B,wCAAAA;AACE,aAAOv8C,KAAK0uD,oBAAoB,QAAA;IAClC;IAEApT,mCAAAA;AACE,aAAOt7C,KAAKslD,QAAAA;IACd;IAEAxG,mCAAAA;AACE,aAAO9+C,KAAKwvD,sBAAAA;IACd;IAEA5J,qCAAqCnyC,IAAAA;AACnC,aAAOzT,KAAKyvD,0BAA0Bh8C,EAAAA;IACxC;IAEAitC,6BAAAA;AACE,aAAO1gD,KAAKyuD,OAAOziB,gBAAgB,KAAA;IACrC;IAEAiV,yBAAyBL,IAAAA;AAGvB,aAFA5gD,KAAKyuD,OAAOziB,gBAAgB,OAAA,GAC5BhsC,KAAK6uD,UAAAA,MACE7uD,KAAK0uD,oBAAoB,gBAAgB,EAAE9N,OAAAA,GAAAA,CAAAA;IACpD;IAEAM,wBAAwBN,IAAAA;AAItB,aAHAA,GAAMprC,QAAQxV,KAAK8uD,aACnB9uD,KAAK8uD,cAAc,MACnB9uD,KAAK6uD,UAAU,MACR7uD,KAAK0uD,oBAAoB,SAAS,EAAE9N,OAAAA,GAAAA,CAAAA;IAC7C;IAEAR,8BAAAA;AACE,aAAOpgD,KAAKyuD,OAAOziB,gBAAgB,MAAA;IACrC;IAEA2P,iCAAAA;AACE,aAAO37C,KAAKyuD,OAAOziB,gBAAgB,YAAA;IACrC;IAEA2d,iCAAAA;AACE,aAAO3pD,KAAKyuD,OAAO/rD,KAAAA;IACrB;IAEA+mD,iCAAAA;AACE,aAAOzpD,KAAKyuD,OAAOlsD,KAAAA;IACrB;IAEAk8C,yCAAyC7qC,IAAAA;AACvC,aAAO5T,KAAKuuD,kBAAkBpB,qBAAqBv5C,EAAAA;IACrD;IAEA0rC,8BAAAA;AACEt/C,WAAK0vD,0BAA0B1vD,KAAK+W,iBAAiBstB,iBAAAA;IACvD;IAEAub,uCAAuC/N,IAAAA;AACrC,aAAO7xC,KAAK+W,iBAAiBy5B,+BAA+BqB,EAAAA;IAC9D;IAEAkO,+BAAAA;AACE//C,WAAK+W,iBAAiBuxB,iBAAiBtoC,KAAK0vD,uBAAAA,GAC5C1vD,KAAK0vD,0BAA0B;IACjC;IAIAje,uBAAuBxV,IAAAA;AAMrB,aALAj8B,KAAK8hC,YAAYsF,wBAAAA,GACjBpnC,KAAK4uD,qBAAAA,GACD5uD,KAAK+uD,2BAAAA,CAA4Bh5C,GAAe/V,KAAK+uD,yBAAyB9yB,EAAAA,KAChFj8B,KAAK8hC,YAAY+D,sBAAAA,GAEZ7lC,KAAK0uD,oBAAoB,kBAAA;IAClC;IAIAxC,wBAAAA;AACE,UAAA,CAAKlsD,KAAKqkC,iBAAAA;AACR,eAAOrkC,KAAKsoC,iBAAiB,EAAEv2B,OAAO,GAAG/C,QAAQ,EAAA,CAAA;IAErD;IAEAs9C,uBAAuBH,IAAYwD,IAAAA;AACjC,aAAO3vD,KAAK4vD,aAAazD,IAAYwD,EAAAA;IACvC;IAEApD,0BAA0B94C,IAAAA;AAIxB,UAHAzT,KAAKyvD,0BAA0Bh8C,EAAAA,GAC/BzT,KAAK8hC,YAAYyE,uBAAuB9yB,EAAAA,GACxCzT,KAAK6nB,OAAAA,GAAAA,CACA7nB,KAAK6vD;AACR,eAAO7vD,KAAKquD,cAAchb,MAAAA;IAE9B;IAEA2a,0BAA0Bv6C,IAAejP,IAAAA;AAIvC,UAHAxE,KAAKyvD,0BAA0Bh8C,EAAAA,GAC/BzT,KAAK8hC,YAAY0E,oBAAoB/yB,IAAejP,EAAAA,GACpDxE,KAAK6nB,OAAAA,GAAAA,CACA7nB,KAAK6vD;AACR,eAAO7vD,KAAKquD,cAAchb,MAAAA;IAE9B;IAEA6a,0BAA0Bz6C,IAAAA;AAIxB,UAHAzT,KAAKyvD,0BAA0Bh8C,EAAAA,GAC/BzT,KAAK8hC,YAAYgE,uBAAuBryB,EAAAA,GACxCzT,KAAK6nB,OAAAA,GAAAA,CACA7nB,KAAK6vD;AACR,eAAO7vD,KAAKquD,cAAchb,MAAAA;IAE9B;IAEAoa,sBAAsBhB,IAAAA;AAEpB,aADAzsD,KAAK8hC,YAAYmH,0BAAAA,GACVjpC,KAAKgoC,gBAAAA;IACd;IAEA2lB,qBAAqBJ,IAAAA;AACnB,aAAOvtD,KAAK0uD,oBAAoB,uBAAuB,EAAEnB,YAAAA,GAAAA,CAAAA;IAC3D;IAEAY,qBAAqBZ,IAAAA;AAGnB,aAFAvtD,KAAKioC,cAAAA,GACLjoC,KAAKquD,cAAchb,MAAAA,GACZrzC,KAAK0uD,oBAAoB,uBAAuB,EAAEnB,YAAAA,GAAAA,CAAAA;IAC3D;IAIAvlB,kBAAAA;AACE,UAAA,CAAKhoC,KAAK6vD;AAIR,eAHA7vD,KAAK+W,iBAAiB45B,KAAAA,GACtB3wC,KAAK8hC,YAAYkG,gBAAAA,GACjBhoC,KAAK6vD,kBAAAA,MACE7vD,KAAK6nB,OAAAA;IAEhB;IAEAogB,gBAAAA;AACE,UAAIjoC,KAAK6vD;AAIP,eAHA7vD,KAAK8hC,YAAYmG,cAAAA,GACjBjoC,KAAK+W,iBAAiB65B,OAAAA,GACtB5wC,KAAK6vD,kBAAAA,OACE7vD,KAAK6nB,OAAAA;IAEhB;IAEAioC,gBAAgB3D,IAAAA;AACd,aAAA,CAAA,CAAInsD,KAAK+vD,iBAAiB5D,EAAAA,KAAAA,EAGS,UAAzB6D,KAAChwD,KAAKgsD,QAAQG,QAAAA,WAAW6D,MAAMA,UAANA,KAAxBA,GAA0BnwD,SAAAA,WAAImwD,MAAAA,CAA9BA,GAAgCjqD,KAAK/F,IAAAA;AADzC,UAAAgwD;IAGT;IAEAJ,aAAazD,IAAYwD,IAAAA;AACvB,aAAI3vD,KAAK+vD,iBAAiB5D,EAAAA,IACjBnsD,KAAK0uD,oBAAoB,iBAAiB,EAAEvC,YAAAA,IAAYwD,iBAAAA,GAAAA,CAAAA,IAEhCM,UAA/BA,KAAOjwD,KAAKgsD,QAAQG,QAAAA,WAAW8D,MAAS,UAATA,KAAxBA,GAA0B/zC,YAAAA,WAAO+zC,KAAAA,SAAjCA,GAAmClqD,KAAK/F,IAAAA;AAD1C,UAAAiwD;IAGT;IAEAF,iBAAiB5D,IAAAA;AACf,aAAO,OAAOtsD,KAAKssD,EAAAA;IACrB;IAEA+D,oBAAAA;AACE,YAAMr/C,KAAS,CAAA;AACf,iBAAWs7C,MAAcnsD,KAAKgsD;AAC5Bn7C,QAAAA,GAAOs7C,MAAcnsD,KAAK8vD,gBAAgB3D,EAAAA;AAE5C,aAAOt7C;IACT;IAEA+9C,uBAAAA;AACE,YAAMuB,KAAiBnwD,KAAKkwD,kBAAAA;AAC5B,UAAA,CAAK56C,GAAgB66C,IAAgBnwD,KAAKmwD,cAAAA;AAGxC,eAFAnwD,KAAKmwD,iBAAiBA,IACtBnwD,KAAKuuD,kBAAkB3B,cAAc5sD,KAAKmwD,cAAAA,GACnCnwD,KAAK0uD,oBAAoB,kBAAkB,EAAE1C,SAAShsD,KAAKmwD,eAAAA,CAAAA;IAEtE;IAIAd,mBAAAA;AACE,UAAI5iB,KAAWzsC,KAAK8hC,YAAYgB,YAAAA;AAahC,UAXAlzB,MAAMC,KAAK7P,KAAKyuD,OAAOlhB,OAAAA,EAAStkC,QAASgO,CAAAA,OAAAA;AACvC,cAAA,EAAMvS,UAAEA,IAAQq9B,eAAEA,GAAAA,IAAkB0K;AACpCA,QAAAA,KAAWx1B,GAAOlR,KAAK/F,KAAKyuD,QAAQhiB,EAAAA,KAAa,CAAA,GAC5CA,GAAS/nC,aACZ+nC,GAAS/nC,WAAWA,KAEjB+nC,GAAS1K,kBACZ0K,GAAS1K,gBAAgBA;MAC3B,CAAA,GAxdqBlwB,KA2dA46B,IA3dG36B,KA2dO9R,KAAK8hC,YAAYgB,YAAAA,GAAAA,CA3dlB/sB,GAAelE,GAAEkwB,eAAejwB,GAAEiwB,aAAAA,KAAAA,CAAkBlwB,GAAEnN,SAAS6K,UAAUuC,GAAEpN,QAAAA;AA4dzG,eAAO1E,KAAK8hC,YAAYiB,aAAa0J,EAAAA;AA5djB2jB,UAACv+C,IAAGC;IA8d5B;IAIAu+C,qBAAAA;AACE,YACM7rD,KtBna4B,SAASw8B,IAAc9V,IAAAA;AAC3D,cAAMolC,KAAavvB,GAAY7V;AAC/B,YAAIolC;AACF,iBAAOA,GAAWtvB,EAAAA;AAElB,cAAM,IAAIhzB,MAAK,yBAAAvK,OAA0BynB,EAAAA,CAAAA;MAE7C,EsB2ZoBlrB,KAAKsuD,sBAAsBpZ,uBAAAA,GACG,WAAA;AAC9C,aAAOl1C,KAAKquD,cAAckC,aAAa/rD,EAAAA;IACzC;IAEAkqD,oBAAoB8B,IAAS3nD,IAAAA;AAC3B,cAAQ2nD,IAAAA;QACN,KAAK;AACHxwD,eAAKywD,iCAAAA;AACL;QACF,KAAK;AACCzwD,eAAKywD,mCACPzwD,KAAKywD,iCAAAA,OACLzwD,KAAK0uD,oBAAoB,QAAA;AAE3B;QACF,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;AACH1uD,eAAKqwD,mBAAAA;MAAAA;AAIT,aAAOrwD,KAAKquD,cAAcqC,OAAOF,IAAS3nD,EAAAA;IAC5C;IAEA+8B,iBAAiBj5B,IAAAA;AAGf,aAFA3M,KAAKyuD,OAAOziB,gBAAgB,mBAAA,GAC5BhsC,KAAK8hC,YAAY8D,iBAAiBj5B,EAAAA,GAC3B3M,KAAK6nB,OAAAA;IACd;IAEA4nC,0BAA0Bh8C,IAAAA;AACxB,YAAMimB,KAAclmB,GAAeC,EAAAA,GAC7BwoB,KAAgBj8B,KAAK+W,iBAAiBstB,iBAAAA;AAC5C,UAAI3K,MAAAA,CAAgB/jB,GAAiBsmB,EAAAA;AACnC,eAAOj8B,KAAKyuD,OAAOziB,gBAAgB,cAAc,EAAErmB,SAAS3lB,KAAK2wD,eAAAA,GAAkBzkB,gBAAAA,KAAgB,CAAA;IAEvG;IAEAsjB,wBAAAA;AACE,aAAOxvD,KAAKyuD,OAAOziB,gBAAgB,UAAU,EAC3CrmB,SAAS3lB,KAAK2wD,eAAe3wD,KAAKyiC,iBAAAA,GAClCyJ,gBAAAA,KAAgB,CAAA;IAEpB;IAEAykB,iBAAAA;AAA2B,eAAA1+C,KAAA5M,UAAAC,QAATqgB,KAAO/V,IAAAA,MAAAqC,EAAAA,GAAAC,KAAA,GAAAA,KAAAD,IAAAC;AAAPyT,QAAAA,GAAOzT,MAAA7M,UAAA6M;AACvB,aAAO,CAAElS,KAAK4wD,mBAAAA,GAAsB5wD,KAAK6wD,eAAAA,GAAAA,GAAqBjhD,MAAMC,KAAK8V,EAAAA,CAAAA;IAC3E;IAEAirC,qBAAAA;AACE,YAAM30B,KAAgBj8B,KAAK+W,iBAAiBstB,iBAAAA;AAC5C,aAAI1uB,GAAiBsmB,EAAAA,IACZA,GAAc,GAAGlqB,QAEjBkqB;IAEX;IAEA40B,iBAAAA;AACE,aAAIn9C,EAAYhH,WAAW,IAClB9I,KAAKC,MAAM,IAAIitD,OAAOC,QAAAA,IAAYr9C,EAAYhH,QAAAA,IAE9C;IAEX;IAEAuiD,YAAAA;AAAY,UAAA+B;AACV,aAAOhxD,KAAKquD,mBAAkD2C,UAArCA,KAAKhxD,KAAKquD,cAAc4C,kBAAAA,WAAaD,KAAAA,SAAhCA,GAAkChqD;IAClE;IAIAsoD,qBAAAA;AACE,aAAOtvD,KAAKivD,UAAAA,KAAAA,CAAgBjvD,KAAKqkC,iBAAAA;IACnC;IAEA,IAAA,UAAI2nB;AACF,aAAOhsD,KAAK4O,YAAYo9C;IAC1B;EAAA;AACD1hC,KAnjBoB8jC,IACF,WAAA,EACf1rD,MAAM,EACJ7C,OAAAA;AACE,WAAOG,KAAKyuD,OAAO/hB,QAAAA;EACpB,GACDxwB,UAAAA;AACE,WAAOlc,KAAKyuD,OAAO/rD,KAAAA;EACrB,EAAA,GAEFH,MAAM,EACJ1C,OAAAA;AACE,WAAOG,KAAKyuD,OAAO9hB,QAAAA;EACpB,GACDzwB,UAAAA;AACE,WAAOlc,KAAKyuD,OAAOlsD,KAAAA;EACrB,EAAA,GAEFH,MAAM,EACJvC,OAAAA;AACE,WAAOG,KAAKyuD,OAAO1gB,qBAAqB,MAAA;EAC1C,EAAA,GAEFrZ,sBAAsB,EACpB70B,OAAAA;AACE,WAAOG,KAAKyuD,OAAOjnB,wBAAAA;EACpB,GACDtrB,UAAAA;AACE,WAAOlc,KAAKyuD,OAAO/5B,qBAAAA,KAA0B10B,KAAK6nB,OAAAA;EACpD,EAAA,GAEF4M,sBAAsB,EACpB50B,OAAAA;AACE,WAAOG,KAAKyuD,OAAOnnB,wBAAAA;EACpB,GACDprB,UAAAA;AACE,WAAOlc,KAAKyuD,OAAOh6B,qBAAAA,KAA0Bz0B,KAAK6nB,OAAAA;EACpD,EAAA,GAEFjmB,aAAa,EACX/B,MAAIA,MAAAA,MAGJqc,UAAAA;AACE,WAAOxI,EAAa5I,UAAU9K,KAAKyuD,OAAOlqB,WAAAA;EAC5C,EAAA,EAAA,CAAA,GAwgBN6pB,GAAiB7xC,YAAY,wCAAA,GAC7B6xC,GAAiB7xC,YAAY,wCAAA;AAAA,MAAA,KAAA,OAAA,OAAA,EAAA,WAAA,MAAA,4BAAA,IAAA,uBAAA,IAAA,YAAA,IAAA,kBAAA,IAAA,iBAAA,IAAA,uBAAA,IAAA,uBAAA,IAAA,mBAAA,GAAA,CAAA;AAAA,MAAA,KAAA,OAAA,OAAA,EAAA,WAAA,MAAA,kBAAA,IAAA,yBAAA,GAAA,CAAA;AAAA,MAAA,KAAA,OAAA,OAAA,EAAA,WAAA,MAAA,2BAAA,IAAA,uBAAA,GAAA,CAAA;ACxkB7BzI,KAA4B,gBAAc,2QAAA;AAqB3B,MAAMo9C,KAAN,cAAiCjwB,YAAAA;IAI9CkwB,oBAAAA;AACyB,aAAnBnxD,KAAK4f,cACP5f,KAAK4f,YAAYlM,EAAejH,eAAAA;IAEpC;EAAA;AClBF,MAAItB,KAAK;AAIT,MAQMimD,KAAe,SAAStxD,IAAAA;AAC5B,QAAA,CAAIA,GAAQ8gB,aAAa,iBAAA;AAIzB,aADA9gB,GAAQ6I,aAAa,mBAAmB,EAAA,GpECX,SAAS7D,IAAAA;AAAyB,YAAdyD,KAAOlD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG,CAAA;AAE3D,eADAkD,GAAQnD,QAAQ,GACTP,EAAYC,IAAWyD,EAAAA;MAChC,EoEHyB,SAAS,EAC9BxD,WAAWjF,IACXmF,cAAYA,MACHosD,GAAyBvxD,EAAAA,EAAAA,CAAAA;EAGtC;AAnBA,MAqBMuxD,KAA2B,SAASvxD,IAAAA;AAExC,WADAwxD,GAAsBxxD,EAAAA,GACfyxD,GAA6BzxD,EAAAA;EACtC;AAxBA,MA0BMwxD,KAAwB,SAASxxD,IAAAA;AAAS,QAAA0xD,IAAAC;AAC9C,QAAkC,UAAlCD,MAAIC,KAAA/sD,UAASgtD,0BAAAA,WAAqBF,MAA9BA,GAAAzrD,KAAA0rD,IAAiC,sBAAA;AAEnC,aADA/sD,SAASitD,YAAY,wBAAA,OAAwB,KAAO,GAC7C9sD,EAAY,mBAAmB,EAAEE,WAAWjF,IAASqF,gBAAAA,KAAgB,CAAA;EAEhF;AA/BA,MAiCMosD,KAA+B,SAASzxD,IAAAA;AAAS,QAAA8xD,IAAAC;AACrD,QAAkC,UAAlCD,MAAIC,KAAAntD,UAASgtD,0BAAAA,WAAqBE,MAA9BA,GAAA7rD,KAAA8rD,IAAiC,2BAAA,GAA8B;AACjE,YAAA,EAAM/yD,SAAEA,GAAAA,IAAY4U,EAAuB7U;AAC3C,UAAI,CAAE,OAAO,GAAA,EAAMoL,SAASnL,EAAAA;AAC1B,eAAO4F,SAASitD,YAAY,6BAAA,OAAoC7yD,EAAAA;IAEpE;EACF;AAxCA,MA0EMgzD,KACAp+C,EAAezS,uBACV,EACLg8B,SAAS,UACT/X,OAAO,OAAA,IAGF,EACL+X,SAAS,gBACT/X,OAAO,MAAA;AAKbpR,KAA4B,eAAa,+SAAArQ,OAsBpCrF,GAAkB,qDAAA,EAAAqF,OAIlBrF,GAAkB,2HAAA,EAAAqF,OAMlBrF,GAAkB,yKAAA,EAAAqF,OAMRquD,GAAmB70B,SAAO,2BAAA,EAAAx5B,OAC5BquD,GAAmB5sC,OAAK,+UAAA,CAAA;AAclC,MAAA6sC,KAAAA,oBAAAC;AAAA,MAAAC,KAAAA,oBAAAC;AAEH,MAAMC,KAAN,MAAMA;IAGJvjD,YAAY9O,IAAAA;AAAAA,UAAAA,IAAAA;AAAAA,SAAAA,KAAAA,MAAAA,KAASmyD,EAAAA,GAAAA,GAAAA,IAAAA,EAAAA,GAAAG,GAAAA,MAAAL,IAAA,EAAAM,UAAAA,MAAA7tD,OAAAA,OAAA,CAAA,GACnBxE,KAAKF,UAAUA,IACfwyD,GAAAtyD,MAAI+xD,IAAcjyD,GAAQyyD,gBAAAA,CAAAA;IAC5B;IAEApB,oBAAAA;AACEqB,SAAAxyD,MAAIiyD,IAAAQ,EAAAA,EAAA1sD,KAAJ/F,IAAAA;IACF;IAEA0yD,uBAAAA;IACA;IAEA,IAAA,SAAIC;AACF,aAAOC,GAAA5yD,MAAI+xD,EAAAA,EAAYY;IACzB;IAEA,IAAA,WAAI5F;AAAW,UAAA8F;AACb,aAAgC,UAAhCA,KAAO7yD,KAAKF,QAAQgzD,iBAAAA,WAAYD,KAAAA,SAAzBA,GAA2B9F;IACpC;IAEA,IAAA,SAAavoD,IAAAA;AACXxE,WAAKF,QAAQizD,gBAAgB,YAAYvuD,EAAAA;IAC3C;IAEA,IAAA,WAAIwuD;AACF,aAAOhzD,KAAKF,QAAQ8gB,aAAa,UAAA;IACnC;IAEA,IAAA,SAAapc,IAAAA;AACXxE,WAAKF,QAAQizD,gBAAgB,YAAYvuD,EAAAA,GACzCguD,GAAAxyD,MAAIiyD,IAAAQ,EAAAA,EAAA1sD,KAAJ/F,IAAAA;IACF;IAEA,IAAA,WAAIizD;AACF,aAAOL,GAAA5yD,MAAI+xD,EAAAA,EAAYkB;IACzB;IAEA,IAAA,oBAAIC;AACF,aAAON,GAAA5yD,MAAI+xD,EAAAA,EAAYmB;IACzB;IAEA,IAAA,eAAItF;AACF,aAAOgF,GAAA5yD,MAAI+xD,EAAAA,EAAYnE;IACzB;IAEA2C,aAAa/rD,IAAAA;AACXguD,SAAAxyD,MAAIiyD,IAAAQ,EAAAA,EAAA1sD,KAAJ/F,IAAAA;IACF;IAEA8tD,gBAAAA;AACE,aAAO8E,GAAI5yD,MAAA+xD,EAAAA,EAAYjE,cAAAA;IACzB;IAEAqF,iBAAAA;AACE,aAAOP,GAAI5yD,MAAA+xD,EAAAA,EAAYoB,eAAAA;IACzB;IAEAtF,kBAAkBqF,IAAAA;AAChBV,SAAAxyD,MAAIiyD,IAAAQ,EAAAA,EAAA1sD,KAAJ/F,MAAekzD,EAAAA;IACjB;EAAA;AAWD,WAAAT,KAAAA;AATyC,QAA9BW,KAAuB/tD,UAAAC,SAAA,KAAA,WAAAD,UAAA,KAAAA,UAAA,KAAG;AAClC,UAAA,EAAM2tD,UAAEA,IAAQxuD,OAAEA,GAAAA,IAAUxE,KAAKF,SAC3BuzD,KAAeL,MAAAA,CAAaxuD,IAC5B8uD,KAAAA,CAAAA,CAAgBF,IAChB1oD,KAAQrC,EAAY,SAAS,EAAE2qD,UAAAA,GAAAA,CAAAA,GAC/BE,KAAoBE,MAA2B1oD,GAAMwoD;AAE3DN,OAAI5yD,MAAA+xD,EAAAA,EAAYwB,YAAY,EAAEF,cAAAA,IAAcC,aAAAA,GAAAA,GAAeJ,EAAAA;EAC7D;AAAC,MAAAM,KAAAA,oBAAAxB;AAAA,MAAAyB,KAAAA,oBAAAzB;AAAA,MAAA0B,KAAAA,oBAAA1B;AAGH,MAAM2B,KAAN,MAAMA;IAGJ/kD,YAAY9O,IAAAA;AAASsyD,SAAAA,MAAAoB,IAAA,EAAAnB,UAAAA,MAAA7tD,OAAAA,OAAA,CAAA,GAAA4tD,GAAAA,MAAAqB,IAAA,EAAApB,UAAAA,MAAA7tD,OAwFJmB,CAAAA,OAAAA;AACXA,QAAAA,GAAMk2C,oBACNl2C,GAAME,WAAW7F,KAAKF,QAAQ2S,QAClCzS,KAAKF,QAAQuX,MAAAA;MAAO,EAAA,CAAA,GACrB+6C,GAAAA,MAAAsB,IAAA,EAAArB,UAAAA,MAAA7tD,OAEgBmB,CAAAA,OAAAA;AACf,YAAIA,GAAMk2C;AAAkB;AAC5B,YAAI77C,KAAKF,QAAQ8zD,SAASjuD,GAAME,MAAAA;AAAS;AAEzC,cAAMguD,KAAQ/tD,EAA2BH,GAAME,QAAQ,EAAEb,kBAAkB,QAAA,CAAA;AACtE6uD,QAAAA,MAEAjkD,MAAMC,KAAK7P,KAAK2yD,MAAAA,EAAQ1oD,SAAS4pD,EAAAA,KAEtC7zD,KAAKF,QAAQuzC,MAAAA;MAAO,EAAA,CAAA,GAtGpBrzC,KAAKF,UAAUA;IACjB;IAEAqxD,oBAAAA;AACEmB,SAAAtyD,MAAIwzD,IA/KgB,SAAS1zD,IAAAA;AAC/B,YAAIA,GAAQ8gB,aAAa,YAAA,KAAiB9gB,GAAQ8gB,aAAa,iBAAA;AAC7D;AAGF,cAAMnK,KAAS,WAAA;AACb,gBAAMq9C,KAAQlkD,MAAMC,KAAK/P,GAAQ6yD,MAAAA,EAAQriD,IAAKujD,CAAAA,OAAAA;AAC5C,gBAAA,CAAKA,GAAMD,SAAS9zD,EAAAA;AAAU,qBAAO+zD,GAAMzqD;UAAW,CAAA,EACrD6N,OAAOzX,CAAAA,OAAQA,EAAAA,GAEZA,KAAOs0D,GAAM/iD,KAAK,GAAA;AACxB,iBAAIvR,KACKM,GAAQ6I,aAAa,cAAcnJ,EAAAA,IAEnCM,GAAQghB,gBAAgB,YAAA;QAAA;AAInC,eADArK,GAAAA,GACO5R,EAAY,SAAS,EAAEE,WAAWjF,IAASmF,cAAcwR,GAAAA,CAAAA;MAClE,EA4JyCzW,KAAKF,OAAAA,CAAAA,GAC1CiM,OAAO9F,iBAAiB,SAAO2sD,GAAE5yD,MAAIyzD,EAAAA,GAAAA,KAAgB,GACrD1nD,OAAO9F,iBAAiB,SAAO2sD,GAAE5yD,MAAI0zD,EAAAA,GAAAA,KAAgB;IACvD;IAEAhB,uBAAAA;AAAuB,UAAAqB;AACjBA,gBAAJA,KAAAnB,GAAA5yD,MAAIwzD,EAAAA,MAAAA,WAAAO,MAAJA,GAAoBnuD,QAAAA,GACpBmG,OAAO/F,oBAAoB,SAAO4sD,GAAE5yD,MAAIyzD,EAAAA,GAAAA,KAAgB,GACxD1nD,OAAO/F,oBAAoB,SAAO4sD,GAAE5yD,MAAI0zD,EAAAA,GAAAA,KAAgB;IAC1D;IAEA,IAAA,SAAIf;AACF,YAAMA,KAAS,CAAA;AACX3yD,WAAKF,QAAQqL,MAAMnL,KAAKF,QAAQmxD,iBAClC0B,GAAOhpD,KAAAA,GAAQiG,MAAMC,KAAK7P,KAAKF,QAAQmxD,cAAchwC,iBAAgB,cAAAxd,OAAezD,KAAKF,QAAQqL,IAAE,IAAA,CAAA,KAAS,CAAA,CAAA,CAAA;AAG9G,YAAM0oD,KAAQ/tD,EAA2B9F,KAAKF,SAAS,EAAEkF,kBAAkB,QAAA,CAAA;AAO3E,aANI6uD,MACE,CAAE7zD,KAAKF,SAAS,IAAA,EAAOmK,SAAS4pD,GAAM3Q,OAAAA,KACxCyP,GAAOhpD,KAAKkqD,EAAAA,GAITlB;IACT;IAEA,IAAA,WAAI5F;AAGF,aAFAiH,QAAQC,KAAK,kFAAA,GAAA;IAGf;IAEA,IAAA,SAAazvD,IAAAA;AACXwvD,cAAQC,KAAK,kFAAA;IACf;IAEA,IAAA,WAAIjB;AAGF,aAFAgB,QAAQC,KAAK,kFAAA,GAAA;IAGf;IAEA,IAAA,SAAazvD,IAAAA;AACXwvD,cAAQC,KAAK,kFAAA;IACf;IAEA,IAAA,WAAIhB;AAEF,aADAe,QAAQC,KAAK,+EAAA,GACN;IACT;IAEA,IAAA,oBAAIf;AAGF,aAFAc,QAAQC,KAAK,wFAAA,GAEN;IACT;IAEA,IAAA,eAAIrG;AAGF,aAFAoG,QAAQC,KAAK,mFAAA,GAAA;IAGf;IAEA1D,aAAa/rD,IAAAA;IACb;IAEAspD,gBAAAA;AAGE,aAFAkG,QAAQC,KAAK,yEAAA,GAAA;IAGf;IAEAd,iBAAAA;AAGE,aAFAa,QAAQC,KAAK,0EAAA,GAAA;IAGf;IAEApG,kBAAkBqF,IAAAA;AAChBc,cAAQC,KAAK,8FAAA;IACf;EAAA;AAmBD,MAAAC,KAAAA,oBAAAlC;AAEc,MAAMmC,KAAN,cAAgClzB,YAAAA;IAK7CryB,cAAAA;AACEC,YAAAA,GAAOujD,GAAAA,MAAA8B,IAAA,EAAA7B,UAAAA,MAAA7tD,OAAAA,OAAA,CAAA,GACP8tD,GAAAtyD,MAAIk0D,IAAal0D,KAAK4O,YAAYwlD,iBAChC,IAAIjC,GAAyBnyD,IAAAA,IAC7B,IAAI2zD,GAAe3zD,IAAAA,CAAAA;IACvB;IAIA,IAAA,SAAI+jB;AACF,aAAI/jB,KAAK4gB,aAAa,SAAA,IACb5gB,KAAKqM,aAAa,SAAA,KAEzBrM,KAAK2I,aAAa,WAAA,EAAawC,EAAAA,GACxBnL,KAAK+jB;IAEhB;IAEA,IAAA,SAAI4uC;AACF,aAAOC,GAAA5yD,MAAIk0D,EAAAA,EAAWvB;IACxB;IAEA,IAAA,WAAI5F;AACF,aAAO6F,GAAA5yD,MAAIk0D,EAAAA,EAAWnH;IACxB;IAEA,IAAA,SAAavoD,IAAAA;AACXouD,SAAAA,MAAIsB,EAAAA,EAAWnH,WAAWvoD;IAC5B;IAEA,IAAA,WAAIwuD;AACF,aAAOJ,GAAA5yD,MAAIk0D,EAAAA,EAAWlB;IACxB;IAEA,IAAA,SAAaxuD,IAAAA;AACXouD,SAAAA,MAAIsB,EAAAA,EAAWlB,WAAWxuD;IAC5B;IAEA,IAAA,WAAIyuD;AACF,aAAOL,GAAA5yD,MAAIk0D,EAAAA,EAAWjB;IACxB;IAEA,IAAA,oBAAIC;AACF,aAAON,GAAA5yD,MAAIk0D,EAAAA,EAAWhB;IACxB;IAEA,IAAA,eAAItF;AACF,aAAOgF,GAAA5yD,MAAIk0D,EAAAA,EAAWtG;IACxB;IAEA,IAAA,OAAI5iD;AACF,aAAOhL,KAAKq0D;IACd;IAEA,IAAA,iBAAI7F;AACgC,UAAA8F;AAAlC,UAAIt0D,KAAK4gB,aAAa,SAAA;AACpB,eAAyB,UAAzB0zC,KAAOt0D,KAAKixD,kBAAAA,WAAaqD,KAAAA,SAAlBA,GAAoBhpD,eAAetL,KAAKqM,aAAa,SAAA,CAAA;AACvD,UAAIrM,KAAKD,YAAY;AAC1B,cAAMw0D,KAAS9wD,gBAAAA,OAAmBzD,KAAK+jB,MAAAA;AACvC/jB,aAAK2I,aAAa,WAAW4rD,EAAAA;AAC7B,cAAMz0D,KAAUuI,EAAY,gBAAgB,EAAE8C,IAAIopD,GAAAA,CAAAA;AAElD,eADAv0D,KAAKD,WAAWqU,aAAatU,IAASE,IAAAA,GAC/BF;MACT;IAGF;IAEA,IAAA,OAAI2S;AAAO,UAAA+hD;AACT,aAAA,UAAAA,KAAOx0D,KAAK8yD,iBAAAA,WAAY0B,KAAAA,SAAjBA,GAAmB/hD;IAC5B;IAEA,IAAA,eAAIqgD;AAC8B,UAAA2B;AAAhC,UAAIz0D,KAAK4gB,aAAa,OAAA;AACpB,eAAyB,UAAzB6zC,KAAOz0D,KAAKixD,kBAAAA,WAAawD,KAAAA,SAAlBA,GAAoBnpD,eAAetL,KAAKqM,aAAa,OAAA,CAAA;AACvD,UAAIrM,KAAKD,YAAY;AAC1B,cAAM20D,KAAOjxD,cAAAA,OAAiBzD,KAAK+jB,MAAAA;AACnC/jB,aAAK2I,aAAa,SAAS+rD,EAAAA;AAC3B,cAAM50D,KAAUuI,EAAY,SAAS,EAAE2C,MAAM,UAAUG,IAAIupD,GAAAA,CAAAA;AAE3D,eADA10D,KAAKD,WAAWqU,aAAatU,IAASE,KAAK20D,kBAAAA,GACpC70D;MACT;IAGF;IAEA,IAAA,SAAI2uD;AAAS,UAAAmG;AACX,aAAA,UAAAA,KAAO50D,KAAK60D,qBAAAA,WAAgBD,KAAAA,SAArBA,GAAuBnG;IAChC;IAEA,IAAA,OAAIhwD;AAAO,UAAAq2D;AACT,aAAA,UAAAA,KAAO90D,KAAK8yD,iBAAAA,WAAYgC,KAAAA,SAAjBA,GAAmBr2D;IAC5B;IAEA,IAAA,QAAI+F;AAAQ,UAAAuwD;AACV,aAAA,UAAAA,KAAO/0D,KAAK8yD,iBAAAA,WAAYiC,KAAAA,SAAjBA,GAAmBvwD;IAC5B;IAEA,IAAA,MAAUwwD,IAAAA;AAAc,UAAAC;AACtBj1D,WAAKg1D,eAAeA,IAAAA,UACpBC,KAAAj1D,KAAKyuD,WAAAA,WAAMwG,MAAXA,GAAaxnB,SAASztC,KAAKg1D,YAAAA;IAC7B;IAIAtE,OAAOF,IAAS3nD,IAAAA;AACd,UAAI7I,KAAK60D;AACP,eAAO3uD,EAAY,QAAAzC,OAAS+sD,EAAAA,GAAW,EAAEzrD,WAAW/E,MAAMpB,YAAYiK,GAAAA,CAAAA;IAE1E;IAEA0nD,aAAa/rD,IAAAA;AACPxE,WAAK8yD,iBACP9yD,KAAK8yD,aAAatuD,QAAQA,IAC1BouD,GAAAA,MAAIsB,EAAAA,EAAW3D,aAAa/rD,EAAAA;IAEhC;IAIA2sD,oBAAAA;AACOnxD,WAAK4gB,aAAa,oBAAA,MACrBwwC,GAAapxD,IAAAA,GA3ZU,SAASF,IAAAA;AACpC,YAAA,CAAIA,GAAQ8gB,aAAa,MAAA;AAGlB9gB,UAAAA,GAAQ6I,aAAa,QAAQ,SAAA;MACtC,EAuZ2B3I,IAAAA,GAEhBA,KAAK60D,qBACR3uD,EAAa,0BAA0B,EAAEnB,WAAW/E,KAAAA,CAAAA,GACpDA,KAAK60D,mBAAmB,IAAIzG,GAAiB,EAC3CC,eAAeruD,MACfyE,MAAMzE,KAAKg1D,eAAeh1D,KAAKwE,MAAAA,CAAAA,GAEjCy5C,sBAAsB,MAAM/3C,EAAa,mBAAmB,EAAEnB,WAAW/E,KAAAA,CAAAA,CAAAA,IAE3EA,KAAK60D,iBAAiB/9C,yBAAAA,GACtB87C,GAAAA,MAAIsB,EAAAA,EAAW/C,kBAAAA,GAndH,SAASrxD,IAAAA;AACzB,YAAA,CAAK4E,SAAS6P,cAAc,QAAA,KACtBzU,GAAQ8gB,aAAa,WAAA,KAAgBlc,SAAS6P,cAAc,aAAA,MAAmBzU;AAC1EA,UAAAA,GAAQuzC,MAAAA;MAGrB,EA8cgBrzC,IAAAA;IAEd;IAEA0yD,uBAAAA;AAAuB,UAAAwC;AACA,gBAArBA,KAAIl1D,KAAC60D,qBAAAA,WAAgBK,MAArBA,GAAuBl+C,2BAAAA,GACvB47C,GAAAA,MAAIsB,EAAAA,EAAWxB,qBAAAA;IACjB;IAIA5E,gBAAAA;AACE,aAAO8E,GAAI5yD,MAAAk0D,EAAAA,EAAWpG,cAAAA;IACxB;IAEAqF,iBAAAA;AACE,aAAOP,GAAI5yD,MAAAk0D,EAAAA,EAAWf,eAAAA;IACxB;IAEAtF,kBAAkBqF,IAAAA;AAChBN,SAAAA,MAAIsB,EAAAA,EAAWrG,kBAAkBqF,EAAAA;IACnC;IAEAiC,qBAAqBpI,IAAAA;AACf/sD,WAAK8yD,iBACP9yD,KAAK8yD,aAAa/F,WAAWA,KAE/B/sD,KAAK+yD,gBAAgB,mBAAA,CAAoBhG,EAAAA;IAC3C;IAEAqI,oBAAAA;AACEp1D,WAAKqX,MAAAA;IACP;IAEAA,QAAAA;AACErX,WAAKwE,QAAQxE,KAAKg1D;IACpB;EAAA;AACD1qC,KAjLoB6pC,IACK,kBAAA,sBAAsBpoD,MAAAA;AChVhD,MAAMspD,KAAO,EACXC,SAASC,GACT7hD,QAAAA,GACA8hD,MAAAA,IACAC,QAAAA,IACA33C,OAAAA,IACA43C,aAAAA,IACAC,WAAAA,IACApa,YAAAA,IACArgC,UAAAA,OAAAA,OAAAA,EAAAA,WAAAA,MAAAA,mBAAAA,IAAAA,oBAAAA,GAAAA,CAAAA,GACAqyB,SAAAA,OAAAA,OAAAA,EAAAA,WAAAA,MAAAA,QAAAA,IAAAA,yBAAAA,GAAAA,CAAAA,EAAAA;AAIF55B,SAAO8T,OAAO4tC,IAAMI,EAAAA,GAYpB1pD,OAAOspD,OAAOA,IACdjgD,WAXA,WAAA;AACOwgD,mBAAe7iD,IAAI,cAAA,KACtB6iD,eAAeC,OAAO,gBAAgB36C,EAAAA,GAGnC06C,eAAe7iD,IAAI,aAAA,KACtB6iD,eAAeC,OAAO,eAAe36C,EAAAA;EAEzC,GAGkB,CAAA;;;ACrClB,SAAO,OAAO;AACd,KAAK,OAAO,QAAQ,iBAAiB;AA+BrC,WAAS,qBAAqB;AAC1B,UAAM,EAAC,KAAI,IAAI,GAAK;AACpB,WAAO;AAAA;AAAA,iJAEsI,KAAK,uBAAuB,KAAK;AAAA,qJAC7B,KAAK,yBAAyB,KAAK;AAAA,mIACrD,KAAK,yBAAyB,KAAK;AAAA,yKACG,KAAK,uBAAuB,KAAK;AAAA;AAAA;AAAA;AAAA,wIAIlE,KAAK,2BAA2B,KAAK;AAAA,iIAC5C,KAAK,wBAAwB,KAAK;AAAA,+HACpC,KAAK,uBAAuB,KAAK;AAAA,wIACxB,KAAK,0BAA0B,KAAK;AAAA,wIACpC,KAAK,0BAA0B,KAAK;AAAA,8JACd,KAAK,0BAA0B,KAAK;AAAA,8JACpC,KAAK,yBAAyB,KAAK;AAAA;AAAA;AAAA;AAAA,qIAI5D,KAAK,8BAA8B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8IAM/B,KAAK,uBAAuB,KAAK;AAAA,oJAC3B,KAAK,uBAAuB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAOxF,KAAK,+BAA+B,KAAK;AAAA;AAAA,kFAEpD,KAAK;AAAA,kFACL,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvF;",
  "names": ["attachmentSelector", "attachments", "preview", "presentation", "caption", "name", "size", "file", "attributes", "default", "tagName", "parse", "quote", "nestable", "heading1", "terminal", "breakOnReturn", "group", "code", "htmlAttributes", "text", "plaintext", "bulletList", "bullet", "listAttribute", "test", "element", "parentNode", "this", "numberList", "number", "attachmentGallery", "exclusive", "_element$tagName", "toLowerCase", "androidVersionMatch", "navigator", "userAgent", "match", "androidVersion", "parseInt", "browser$1", "composesExistingText", "recentAndroid", "samsungAndroid", "forcesObjectResizing", "supportsInputEvents", "InputEvent", "every", "prop", "prototype", "dompurify", "ADD_ATTR", "SAFE_FOR_XML", "RETURN_DOM", "lang$1", "attachFiles", "bold", "bullets", "byte", "bytes", "captionPlaceholder", "indent", "italic", "link", "numbers", "outdent", "redo", "remove", "strike", "undo", "unlink", "url", "urlPlaceholder", "GB", "KB", "MB", "PB", "TB", "sizes", "lang", "file_size_formatting", "prefix", "precision", "formatter", "concat", "base", "exp", "Math", "floor", "log", "withoutInsignificantZeros", "pow", "toFixed", "replace", "ZERO_WIDTH_SPACE", "NON_BREAKING_SPACE", "extend", "properties", "key", "value", "html", "document", "documentElement", "matches", "handleEvent", "eventName", "onElement", "matchingSelector", "withCallback", "inPhase", "preventDefault", "times", "arguments", "length", "undefined", "selector", "useCapture", "handler", "event", "destroy", "target", "findClosestElementFromNode", "call", "removeEventListener", "addEventListener", "triggerEvent", "bubbles", "cancelable", "createEvent", "initEvent", "dispatchEvent", "elementMatchesSelector", "nodeType", "node", "untilNode", "Node", "ELEMENT_NODE", "closest", "innerElementIsActive", "activeElement", "elementContainsNode", "findChildIndexOfNode", "_node", "childIndex", "previousSibling", "removeNode", "_node$parentNode", "removeChild", "walkTree", "tree", "onlyNodesOfType", "usingFilter", "expandEntityReferences", "whatToShow", "NodeFilter", "SHOW_ELEMENT", "SHOW_TEXT", "SHOW_COMMENT", "SHOW_ALL", "createTreeWalker", "makeElement", "tag", "options", "createElement", "editable", "contenteditable", "setAttribute", "style", "data", "dataset", "className", "split", "forEach", "classList", "add", "textContent", "childNodes", "childNode", "appendChild", "blockTagNames", "getBlockTagNames", "blockAttributes", "push", "nodeIsBlockContainer", "nodeIsBlockStartComment", "firstChild", "nodeIsBlockStart", "strict", "includes", "nodeIsCommentNode", "COMMENT_NODE", "nodeIsCursorTarget", "nodeIsTextNode", "trixCursorTarget", "nodeIsAttachmentElement", "nodeIsEmptyTextNode", "TEXT_NODE", "input", "level2Enabled", "getLevel", "browser", "pickFiles", "callback", "type", "multiple", "hidden", "id", "fileInputId", "files", "getElementById", "body", "click", "parser", "removeBlankTableCells", "tableCellSeparator", "tableRowSeparator", "text_attributes", "inheritable", "window", "getComputedStyle", "fontWeight", "fontStyle", "href", "groupTagName", "getAttribute", "frozen", "backgroundColor", "toolbar", "getDefaultHTML", "interval", "attachment", "attachmentCaption", "attachmentCaptionEditor", "attachmentMetadata", "attachmentMetadataContainer", "attachmentName", "attachmentProgress", "attachmentSize", "attachmentToolbar", "BasicObject", "expression", "toMethod", "toProperty", "optional", "parseProxyMethodExpression", "subject", "object", "_this$toMethod", "_object", "apply", "proxyMethodExpressionPattern", "Error", "args", "Function", "RegExp", "UTF16String", "box", "fromUCS2String", "toString", "ucs2String", "ucs2decode", "codepoints", "ucs2encode", "constructor", "super", "ucs2Length", "offsetToUCS2Offset", "offset", "slice", "max", "offsetFromUCS2Offset", "ucs2Offset", "fromCodepoints", "charAt", "isEqualTo", "toJSON", "getCacheKey", "hasArrayFrom", "_Array$from", "Array", "from", "hasStringCodePointAt", "_$codePointAt", "codePointAt", "hasStringFromCodePoint", "_String$fromCodePoint", "String", "fromCodePoint", "string", "map", "char", "output", "counter", "charCodeAt", "extra", "array", "result", "fromCharCode", "join", "TrixObject", "jsonString", "fromJSON", "JSON", "hasSameConstructorAs", "inspect", "parts", "contents", "contentsForInspection", "toJSONString", "stringify", "toUTF16String", "arraysAreEqual", "a", "b", "index", "spliceArray", "_len", "_key", "splice", "RTL_PATTERN", "getDirection", "dir", "dirName", "textArea", "form", "supportsDirName", "FormData", "has", "error", "supportsDirSelector", "get", "trim", "allAttributeNames", "blockAttributeNames", "textAttributeNames", "listAttributeNames", "getAllAttributeNames", "getTextAttributeNames", "getBlockAttributeNames", "getBlockConfig", "attributeName", "config", "Object", "keys", "getTextConfig", "installDefaultCSSForTagName", "defaultCSS", "insertStyleElementForTagName", "nonce", "getCSPNonce", "head", "insertBefore", "getMetaElement", "content", "querySelector", "testTransferData", "dataTransferIsPlainText", "dataTransfer", "getData", "DOMParser", "parseFromString", "keyEventIsKeyboardCommand", "platform", "metaKey", "ctrlKey", "defer", "fn", "setTimeout", "copyObject", "objectsAreEqual", "normalizeRange", "range", "isArray", "copyValue", "rangeIsCollapsed", "start", "end", "rangeValuesAreEqual", "rangesAreEqual", "leftRange", "rightRange", "leftStart", "leftEnd", "rightStart", "rightEnd", "left", "right", "SelectionChangeObserver", "update", "bind", "selectionManagers", "started", "stop", "registerSelectionManager", "selectionManager", "unregisterSelectionManager", "filter", "sm", "notifySelectionManagersOfSelectionChange", "selectionDidChange", "reset", "selectionChangeObserver", "getDOMSelection", "selection", "getSelection", "rangeCount", "getDOMRange", "_getDOMSelection", "domRange", "getRangeAt", "domRangeIsPrivate", "setDOMRange", "removeAllRanges", "addRange", "nodeIsPrivate", "startContainer", "endContainer", "getPrototypeOf", "normalizeSpaces", "breakableWhitespacePattern", "squishBreakableWhitespace", "source", "utf16StringDifferences", "diffA", "utf16StringDifference", "utf16String", "diffB", "leftIndex", "rightIndexA", "rightIndexB", "Hash", "fromCommonAttributesOfObjects", "objects", "hash", "getKeys", "getKeysCommonToHash", "values", "copy", "merge", "unbox", "toArray", "isEmpty", "toObject", "keyToRemove", "sort", "ObjectGroup", "groupObjects", "ungroupedObjects", "depth", "asTree", "_object$canBeGrouped2", "_object$canBeGrouped", "_group$canBeGroupedWi", "_group", "canBeGrouped", "canBeGroupedWith", "getObjects", "getDepth", "ObjectMap", "find", "ElementStore", "elements", "getKey", "trixStoreKey", "Operation", "isPerforming", "performing", "hasPerformed", "performed", "hasSucceeded", "succeeded", "hasFailed", "getPromise", "promise", "Promise", "resolve", "reject", "perform", "release", "_this$promise", "_this$promise$cancel", "cancel", "proxyMethod", "ObjectView", "childViews", "rootView", "getNodes", "nodes", "createNodes", "cloneNode", "invalidate", "_this$parentView", "parentView", "invalidateViewForObject", "_this$findViewForObje", "findViewForObject", "findOrCreateCachedChildView", "viewClass", "view", "getCachedViewForObject", "recordChildView", "createChildView", "cacheViewForObject", "ObjectGroupView", "getAllChildViews", "views", "childView", "findElement", "findElementForObject", "getViewCache", "isViewCachingEnabled", "viewCache", "shouldCacheViews", "enableViewCaching", "disableViewCaching", "_this$getViewCache", "cache", "garbageCollectCachedViews", "objectKeys", "objectGroup", "getChildViews", "createContainerElement", "DOMPurify", "addHook", "attrName", "forceKeepAttr", "DEFAULT_ALLOWED_ATTRIBUTES", "DEFAULT_FORBIDDEN_PROTOCOLS", "DEFAULT_FORBIDDEN_ELEMENTS", "HTMLSanitizer", "sanitizedElement", "sanitize", "sanitizedHtml", "getHTML", "outerHTML", "innerHTML", "sanitizer", "allowedAttributes", "forbiddenProtocols", "forbiddenElements", "createBodyElementForHTML", "sanitizeElements", "normalizeListElementNesting", "setConfig", "getBody", "walker", "nodesToRemove", "nextNode", "currentNode", "elementIsRemovable", "sanitizeElement", "hasAttribute", "protocol", "removeAttribute", "_ref", "indexOf", "querySelectorAll", "listElement", "previousElement", "previousElementSibling", "elementIsForbidden", "elementIsntSerializable", "doc", "implementation", "createHTMLDocument", "css", "AttachmentView", "uploadProgressDelegate", "attachmentPiece", "piece", "createContentNodes", "innerElement", "figure", "getClassName", "getHref", "tabindex", "hasContent", "setHTML", "getContent", "createCaptionElement", "isPending", "progressElement", "class", "getUploadProgress", "trixMutable", "createCursorTarget", "figcaption", "getCaption", "captionConfig", "getCaptionConfig", "getFilename", "getFormattedFilesize", "nameElement", "createTextNode", "sizeElement", "names", "getType", "extension", "getExtension", "trixAttachment", "trixContentType", "getContentType", "trixId", "trixAttributes", "trixSerialize", "htmlContainsTagName", "_config$attachments$t", "findProgressElement", "_this$findElement", "attachmentDidChangeUploadProgress", "div", "PreviewableAttachmentView", "previewDelegate", "image", "src", "refresh", "updateAttributesForImage", "getURL", "previewURL", "getPreviewURL", "serializedAttributes", "width", "getWidth", "height", "getHeight", "storeKey", "attachmentDidChangeAttributes", "PieceView", "getAttributes", "textConfig", "context", "createAttachmentNodes", "createStringNodes", "_element", "firstElementChild", "isPreviewable", "_this$textConfig", "iterable", "substring", "preserveSpaces", "styles", "pendingElement", "styleProperty", "isLast", "isFirst", "followsWhitespace", "TextView", "pieces", "getPieces", "lastIndex", "endsWithWhitespace", "previousPiece", "BlockView", "block", "createComment", "_getBlockConfig", "getLastAttribute", "textView", "shouldAddExtraNewlineElement", "isRTL", "assign", "getBlockBreakPosition", "entries", "DocumentView", "render", "sync", "elementStore", "setDocument", "shadowElement", "getBlocks", "isSynced", "elementsHaveEqualHTML", "fragment", "createDocumentFragmentForSync", "lastChild", "didSync", "findStoredElements", "createDocumentFragment", "storedElement", "replaceChild", "otherElement", "ignoreSpaces", "t", "e", "i", "n", "o", "s", "l", "r", "Piece", "types", "pieceJSON", "copyWithAttributes", "getValue", "copyWithAdditionalAttributes", "copyWithoutAttribute", "attribute", "getAttributesHash", "hasSameStringValueAsPiece", "hasSameAttributesAsPiece", "isBlockBreak", "isSerializable", "getLength", "canBeConsolidatedWith", "_defineProperty", "ImagePreloadOperation", "Image", "onload", "naturalWidth", "naturalHeight", "onerror", "Attachment", "attributesForFile", "setFile", "filename", "filesize", "contentType", "attachmentJSON", "releaseFile", "didChangeAttributes", "setAttributes", "newAttributes", "_this$previewDelegate", "_this$previewDelegate2", "_this$delegate", "_this$delegate$attach", "delegate", "preloadURL", "previewablePattern", "getFilesize", "_this$getFilename$mat", "getFile", "preloadFile", "releasePreloadedFile", "uploadProgress", "setUploadProgress", "_this$uploadProgressD", "_this$uploadProgressD2", "preloadingURL", "setPreviewURL", "_this$previewDelegate3", "_this$previewDelegate4", "_this$delegate2", "_this$delegate2$attac", "attachmentDidChangePreviewURL", "preload", "fileObjectURL", "URL", "createObjectURL", "revokeObjectURL", "then", "catch", "AttachmentPiece", "ensureAttachmentExclusivelyHasAttribute", "removeProhibitedAttributes", "permittedAttributes", "_piece$attachment", "json", "toConsole", "registerType", "StringPiece", "consolidateWith", "splitAtOffset", "SplittableList", "eachObject", "insertObjectAtIndex", "insertSplittableListAtIndex", "splittableList", "insertSplittableListAtPosition", "position", "splitObjectAtPosition", "editObjectAtIndex", "replaceObjectAtIndex", "removeObjectAtIndex", "getObjectAtIndex", "getSplittableListInRange", "rightIndex", "splitObjectsAtRange", "selectSplittableList", "removeObjectsInRange", "transformObjectsInRange", "transform", "transformedObjects", "rightOuterIndex", "leftInnerIndex", "startOfRange", "endOfRange", "getObjectAtPosition", "findIndexAndOffsetAtPosition", "splitIndex", "splitOffset", "leftObject", "rightObject", "consolidate", "pendingObject", "_pendingObject$canBeC", "_pendingObject", "consolidateFromIndexToIndex", "startIndex", "endIndex", "objectsInRange", "consolidatedInRange", "currentPosition", "nextPosition", "findPositionAtIndexAndOffset", "currentIndex", "getEndPosition", "endPosition", "objectArraysAreEqual", "Text", "textJSON", "notEmpty", "pieceList", "copyWithPieceList", "copyUsingObjectMap", "objectMap", "appendText", "insertTextAtPosition", "removeTextAtRange", "replaceTextAtRange", "moveTextFromRangeToPosition", "getTextAtRange", "addAttributeAtRange", "addAttributesAtRange", "removeAttributeAtRange", "setAttributesAtRange", "getAttributesAtPosition", "_this$pieceList$getOb", "getCommonAttributes", "getCommonAttributesAtRange", "getExpandedRangeForAttributeAtOffset", "getStringAtRange", "getStringAtPosition", "startsWithString", "endsWithString", "getAttachmentPieces", "getAttachments", "getAttachmentAndPositionById", "attachmentId", "getAttachmentById", "getRangeOfAttachment", "attachmentAndPosition", "updateAttributesForAttachment", "_text$pieceList", "eachPiece", "getPieceAtPosition", "toSerializableText", "Block", "blockJSON", "applyBlockBreakToText", "copyWithText", "copyWithoutText", "copyWithoutAttributes", "mappedText", "addAttribute", "expandAttribute", "addHTMLAttribute", "removeLastValue", "removeLastAttribute", "getLastElement", "getAttributeLevel", "getAttributeAtLevel", "level", "hasAttributes", "getLastNestableAttribute", "getNestableAttributes", "getNestingLevel", "decreaseNestingLevel", "increaseNestingLevel", "lastIndexOf", "getListItemAttributes", "isListItem", "isTerminalBlock", "_getBlockConfig2", "breaksOnReturn", "_getBlockConfig3", "findLineBreakInDirectionFromPosition", "direction", "newlineText", "textForStringWithAttributes", "getTextWithoutBlockBreak", "textEndsInBlockBreak", "otherBlock", "otherAttributes", "otherAttribute", "getListAttributeNames", "unmarkExistingInnerBlockBreaksInText", "addBlockBreakToText", "modified", "innerPieces", "lastPiece", "unmarkBlockBreakPiece", "blockBreakText", "blockBreak", "Document", "documentJSON", "textAttributes", "blocks", "blockList", "getBlockAtIndex", "consolidateBlocks", "copyUsingObjectsFromDocument", "sourceDocument", "copyWithBaseBlockAttributes", "replaceBlock", "oldBlock", "newBlock", "insertDocumentAtRange", "locationFromPosition", "getBlockAtPosition", "mergeDocumentAtRange", "formattedDocument", "startPosition", "startLocation", "baseBlockAttributes", "getBaseBlockAttributes", "trailingBlockAttributes", "leadingBlockAttributes", "blockCount", "getBlockCount", "firstBlock", "firstText", "insertTextAtRange", "leftPosition", "rightPosition", "leftLocation", "rightLocation", "locationRangeFromRange", "leftOffset", "leftBlock", "rightOffset", "rightBlock", "leftText", "rightText", "affectedBlockCount", "getDocumentAtRange", "movingRightward", "eachBlockAtRange", "textRange", "eachBlock", "getTextAtIndex", "removeAttributeForAttachment", "setHTMLAttributeAtPosition", "updatedBlock", "insertBlockBreakAtRange", "applyBlockAttributeAtRange", "expanded", "expandRangeToLineBreaksAndSplitBlocks", "blockConfig", "removeLastListAttributeAtRange", "exceptAttributeName", "converted", "convertLineBreaksToBlockBreaksInRange", "removeBlockAttributesAtRange", "removeLastTerminalAttributeAtRange", "consolidateBlocksAtRange", "lastAttributeName", "endLocation", "startBlock", "positionFromLocation", "endBlock", "_this$getBlockAtIndex", "getTextAtPosition", "getCharacterAtPosition", "getEditCount", "editCount", "getCommonAttributesAtPosition", "attributesForBlock", "commonAttributes", "attributesLeft", "inheritableAttributes", "getRangeOfCommonAttributeAtPosition", "startOffset", "endOffset", "blockIndex", "lastAttributeIndex", "min", "attachmentPieces", "getLocationRangeOfAttachment", "getAttachmentPieceForAttachment", "findRangesForBlockAttribute", "ranges", "findRangesForTextAttribute", "withValue", "location", "locationRangeFromPosition", "rangeFromLocationRange", "locationRange", "getTexts", "toSerializableDocument", "pieceForString", "parseTrixDataAttribute", "HTMLParser", "referenceElement", "blockElements", "processedElements", "getDocument", "createHiddenContainer", "containerElement", "nodeFilter", "processNode", "translateBlockElementMarginsToNewlines", "removeHiddenContainer", "display", "nextSibling", "isInsignificantTextNode", "appendBlockForTextNode", "processTextNode", "appendBlockForElement", "processElement", "currentBlockElement", "isBlockElement", "appendStringWithAttributes", "_this$currentBlock", "getBlockAttributes", "getBlockHTMLAttributes", "currentBlock", "appendBlockForAttributesWithElement", "elementIsBlockElement", "currentBlockContainsElement", "parentBlockElement", "findParentBlockElement", "appendEmptyBlock", "parentElement", "_node$previousSibling", "elementCanDisplayPreformattedText", "stringEndsWithWhitespace", "leftTrimBreakableWhitespace", "getTextAttributes", "appendAttachmentWithAttributes", "isExtraBR", "dimensions", "needsTableSeparator", "appendPiece", "appendStringToTextAtIndex", "prependStringToTextAtIndex", "unshift", "configAttr", "attributeInheritedFromBlock", "blockElement", "findBlockElementAncestors", "attrConfig", "_attrConfig$test", "reverse", "settings", "ancestors", "stringIsAllBreakableWhitespace", "nodeEndsWithNonWhitespace", "_element$previousSibl", "defaultMargin", "getMarginOfDefaultBlockElement", "margin", "getMarginOfBlockElementAtIndex", "top", "bottom", "getBlockElementMargin", "whiteSpace", "marginTop", "marginBottom", "FILTER_REJECT", "FILTER_ACCEPT", "unserializableAttributeNames", "serializedAttributesAttribute", "serializedAttributesSelector", "blockCommentPattern", "serializers", "serializable", "HTMLElement", "el", "ManagedAttachment", "attachmentManager", "requestRemovalOfAttachment", "AttachmentManager", "managedAttachments", "manageAttachment", "attachmentIsManaged", "attachmentManagerDidRequestRemovalOfAttachment", "unmanageAttachment", "managedAttachment", "LineBreakInsertion", "composition", "selectedRange", "getSelectedRange", "previousCharacter", "nextCharacter", "shouldInsertBlockBreak", "shouldBreakFormattedBlock", "shouldDecreaseListLevel", "shouldPrependListItem", "shouldRemoveLastBlockAttribute", "Composition", "currentAttributes", "revision", "_this$delegate$compos", "refreshAttachments", "compositionDidChangeDocument", "getSnapshot", "loadSnapshot", "_this$delegate2$compo", "_this$delegate3", "_this$delegate3$compo", "compositionWillLoadSnapshot", "setSelection", "compositionDidLoadSnapshot", "insertText", "updatePosition", "notifyDelegateOfInsertionAtRange", "insertBlock", "insertDocument", "insertString", "getCurrentTextAttributes", "insertBlockBreak", "insertLineBreak", "insertion", "decreaseListLevel", "removeLastBlockAttribute", "breakFormattedBlock", "insertHTML", "replaceHTML", "getLocationRange", "insertFile", "insertFiles", "_this$delegate4", "compositionShouldAcceptFile", "attachmentForFile", "insertAttachments", "insertAttachment", "attachmentText", "textForAttachmentWithAttributes", "shouldManageDeletingInDirection", "shouldManageMovingCursorInDirection", "deleteInDirection", "deletingIntoPreviousBlock", "selectionSpansBlocks", "selectionIsCollapsed", "canDecreaseBlockAttributeLevel", "getBlock", "decreaseBlockAttributeLevel", "getExpandedRangeInDirection", "getAttachmentAtRange", "editAttachment", "moveTextFromRange", "removeAttachment", "stopEditingAttachment", "removeCurrentAttribute", "insertPlaceholder", "placeholderPosition", "getPosition", "selectPlaceholder", "setSelectedRange", "PLACEHOLDER", "forgetPlaceholder", "hasCurrentAttribute", "toggleCurrentAttribute", "setCurrentAttribute", "canSetCurrentAttribute", "canSetCurrentBlockAttribute", "canSetCurrentTextAttribute", "getSelectedDocument", "setBlockAttribute", "setTextAttribute", "notifyDelegateOfCurrentAttributesChange", "setHTMLAtributeAtPosition", "allowedHTMLAttributes", "newDocument", "removeBlockAttribute", "updateCurrentAttributes", "removeTextAttribute", "canDecreaseNestingLevel", "_this$getBlock", "canIncreaseNestingLevel", "previousBlock", "getPreviousBlock", "_this$getBlock2", "_this$getBlock3", "attributeLevel", "ignoreLock", "getCurrentAttributes", "freezeSelection", "thawSelection", "hasFrozenSelection", "_this$delegate5", "compositionDidRequestChangingSelectionToLocationRange", "getSelectionManager", "setLocationRange", "targetLocationRange", "withTargetLocationRange", "withTargetRange", "withTargetDOMRange", "createLocationRangeFromDOMRange", "translateUTF16PositionFromOffset", "editingAttachment", "moveCursorInDirection", "canEditAttachment", "expandSelectionInDirection", "expandSelectionForEditing", "expandSelectionAroundCommonAttribute", "selectionContainsAttachments", "_this$getSelectedAtta", "getSelectedAttachments", "selectionIsInCursorTarget", "positionIsCursorTarget", "locationIsCursorTarget", "positionIsBlockBreak", "_this$document$getPie", "_this$getSelectedDocu", "added", "removed", "oldArray", "newArray", "existingValues", "Set", "currentValues", "_this$delegate6", "_this$delegate6$compo", "compositionDidRemoveAttachment", "_this$delegate7", "_this$delegate7$compo", "compositionDidAddAttachment", "_this$delegate8", "_this$delegate8$compo", "compositionDidEditAttachment", "_this$delegate9", "_this$delegate9$compo", "compositionDidChangeAttachmentPreviewURL", "_this$delegate10", "_this$delegate10$comp", "compositionDidStartEditingAttachment", "_this$delegate11", "_this$delegate11$comp", "compositionDidStopEditingAttachment", "_this$delegate12", "_this$delegate12$comp", "compositionDidChangeCurrentAttributes", "_this$delegate13", "_this$delegate13$comp", "compositionDidPerformInsertionAtRange", "utf16string", "utf16position", "UndoManager", "undoEntries", "redoEntries", "recordUndoEntry", "description", "consolidatable", "previousEntry", "entryHasDescriptionAndContext", "undoEntry", "createEntry", "pop", "redoEntry", "snapshot", "canUndo", "canRedo", "entry", "BLOCK_ATTRIBUTE_NAME", "Filter", "applyBlockAttribute", "findRangesOfBlocks", "findRangesOfPieces", "moveSelectedRangeForward", "attachmentGalleryFilter", "DEFAULT_FILTERS", "Editor", "undoManager", "filters", "loadDocument", "loadHTML", "loadJSON", "getClientRectAtPosition", "getClientRectAtLocationRange", "activateAttribute", "attributeIsActive", "canActivateAttribute", "deactivateAttribute", "LocationMapper", "findLocationFromContainerAndOffset", "container", "foundBlock", "attachmentElement", "findAttachmentElementParentForNode", "rejectAttachmentContents", "nodeLength", "findContainerAndOffsetFromLocation", "nodeOffset", "findNodeAndOffsetFromLocation", "getSignificantNodesForIndex", "acceptSignificantNodes", "recordingNodes", "rejectEmptyTextNodes", "PointMapper", "createDOMRangeFromPoint", "x", "y", "caretPositionFromPoint", "offsetNode", "createRange", "setStart", "caretRangeFromPoint", "createTextRange", "originalDOMRange", "moveToPoint", "select", "getClientRectsForDOMRange", "getClientRects", "SelectionManager", "didMouseDown", "locationMapper", "pointMapper", "lockCount", "currentLocationRange", "lockedLocationRange", "createDOMRangeFromLocationRange", "updateCurrentLocationRange", "setLocationRangeFromPointRange", "pointRange", "getLocationAtPoint", "lock", "unlock", "clearSelection", "_getDOMRange", "collapsed", "selectionIsExpanded", "domRangeWithinElement", "pauseTemporarily", "resumeHandlers", "paused", "resume", "clearTimeout", "resumeTimeout", "_this$delegate$locati", "locationRangeDidChange", "rangeStart", "rangeEnd", "setEnd", "point", "_this$createLocationR", "keyNames", "undoable", "commands", "do", "undos", "AttachmentEditorController", "title", "trixAction", "didClickToolbar", "didClickActionButton", "textarea", "placeholder", "textareaClone", "tabIndex", "autoresize", "scrollHeight", "didInputCaption", "didKeyDownCaption", "didChangeCaption", "didBlurCaption", "editingFigcaption", "editCaption", "focus", "install", "makeElementMutable", "addToolbar", "installCaptionEditor", "uninstall", "savePendingCaption", "didUninstallAttachmentEditor", "pendingCaption", "_this$delegate3$attac", "attachmentEditorDidRequestUpdatingAttributesForAttachment", "attachmentEditorDidRequestRemovingAttributeForAttachment", "stopPropagation", "attachmentEditorDidRequestRemovalOfAttachment", "_this$delegate5$attac", "keyCode", "attachmentEditorDidRequestDeselectingAttachment", "CompositionController", "didFocus", "didBlur", "didClickAttachment", "documentView", "_this$blurPromise", "focused", "compositionControllerDidFocus", "blurPromise", "compositionControllerDidBlur", "findAttachmentForElement", "compositionControllerDidSelectAttachment", "getSerializableElement", "isEditingAttachment", "_this$delegate4$compo", "_this$delegate5$compo", "canSyncDocumentView", "compositionControllerWillSyncDocumentView", "compositionControllerDidSyncDocumentView", "compositionControllerDidRender", "rerenderViewForObject", "refreshViewCache", "attachmentEditor", "installAttachmentEditorForAttachment", "_this$attachmentEdito", "uninstallAttachmentEditor", "_this$attachmentEdito2", "compositionControllerWillUpdateAttachment", "compositionControllerDidRequestRemovalOfAttachment", "compositionControllerDidRequestDeselectingAttachment", "Controller", "mutableAttributeName", "mutableSelector", "childList", "characterData", "characterDataOldValue", "subtree", "MutationObserver", "didMutate", "observer", "observe", "disconnect", "mutations", "_this$delegate$elemen", "findSignificantMutations", "elementDidMutate", "getMutationSummary", "mutation", "mutationIsSignificant", "nodeIsMutable", "nodesModifiedByMutation", "nodeIsSignificant", "addedNodes", "removedNodes", "getTextMutationSummary", "additions", "deletions", "getTextChangesFromCharacterData", "textChanges", "getTextChangesFromChildList", "addition", "summary", "textAdded", "deleted", "textDeleted", "getMutationsByType", "textRemoved", "getTextForNodes", "characterMutations", "startMutation", "endMutation", "summarized", "oldString", "newString", "oldValue", "FileVerificationOperation", "reader", "FileReader", "abort", "readAsArrayBuffer", "FlakyAndroidKeyboardDetector", "shouldIgnore", "previousEvent", "checkSamsungKeyboardBuggyModeStart", "checkSamsungKeyboardBuggyModeEnd", "buggyMode", "insertingLongTextAfterUnidentifiedChar", "differsInWhitespace", "innerText", "inputType", "_this$event$data", "isBeforeInputInsertText", "previousEventWasUnidentifiedKeydown", "_this$previousEvent", "_this$previousEvent2", "text1", "text2", "normalize", "whiteSpaceNormalizerRegexp", "InputController", "mutationObserver", "flakyKeyboardDetector", "events", "handlerFor", "mutationSummary", "editorWillSyncDocumentView", "editorDidSyncDocumentView", "requestRender", "_this$delegate$inputC", "inputControllerDidRequestRender", "requestReparse", "_this$delegate2$input", "inputControllerDidRequestReparse", "operations", "all", "handleInput", "_this$responder", "inputControllerWillAttachFiles", "responder", "defaultPrevented", "inputControllerWillHandleInput", "inputControllerDidHandleInput", "createLinkHTML", "pastedFileCount", "Level0InputController", "resetInputSummary", "setInputSummary", "inputSummary", "isComposing", "inputControllerDidAllowUnhandledInput", "mutationIsExpected", "preferDocument", "mutationAdditionMatchesSummary", "mutationDeletionMatchesSummary", "didDelete", "unexpectedNewlineAddition", "unexpectedNewlineDeletion", "_this$compositionInpu", "textChanged", "composedEmptyString", "compositionInput", "getEndData", "getCompositionInput", "CompositionInput", "isEnded", "_this$responder2", "serializeSelectionToDataTransfer", "_this$responder3", "setData", "canAcceptDataTransfer", "Files", "getPastedHTMLUsingHiddenElement", "pageXOffset", "pageYOffset", "opacity", "requestAnimationFrame", "keydown", "didInput", "keyName", "_context2", "modifier", "_context", "character", "inputControllerDidReceiveKeyboardCommand", "keypress", "altKey", "stringFromKeyEvent", "_this$responder9", "inputControllerWillPerformTyping", "textInput", "toUpperCase", "_this$responder10", "dragenter", "dragstart", "_this$delegate5$input", "draggedRange", "inputControllerDidStartDrag", "dragover", "draggingPoint", "clientX", "clientY", "_this$delegate6$input", "inputControllerDidReceiveDragOverPoint", "dragend", "_this$delegate7$input", "inputControllerDidCancelDrag", "drop", "_event$dataTransfer", "_this$responder11", "_this$responder12", "inputControllerWillMoveText", "_this$responder13", "fromJSONString", "cut", "_this$responder14", "clipboardData", "inputControllerWillCutText", "_this$responder15", "paste", "clipboard", "testClipboardData", "pasteEventIsCrippledSafariHTMLPaste", "_this$responder16", "inputControllerWillPaste", "inputControllerDidPaste", "_this$responder17", "_this$delegate14", "_this$responder18", "_this$delegate15", "_this$delegate16", "_this$responder19", "_this$delegate17", "_clipboard$items", "_clipboard$items$getA", "items", "getAsFile", "_this$delegate18", "_this$responder20", "_this$delegate19", "extensionForFile", "compositionstart", "compositionupdate", "compositionend", "beforeinput", "backspace", "_this$delegate20", "delete", "_this$delegate21", "return", "_this$delegate22", "_this$responder21", "tab", "_this$responder22", "_this$responder23", "_this$responder24", "_this$responder25", "control", "d", "_this$delegate23", "h", "_this$delegate24", "_this$delegate25", "_this$responder26", "shift", "_this$delegate26", "_this$responder27", "_this$responder28", "_this$responder29", "alt", "_this$delegate27", "meta", "_this$delegate28", "_file$type", "which", "charCode", "hasPasteboardFlavor", "hasReadableDynamicData", "isExternalHTMLPaste", "isExternalRichTextPaste", "inputController", "isSignificant", "_this$responder5", "_this$responder4", "canApplyToDocument", "_this$responder6", "_this$responder7", "_this$responder8", "_this$data$start", "_this$data$end", "Level2InputController", "scheduledRender", "composing", "reparse", "scheduleRender", "_this$afterRender", "cancelAnimationFrame", "afterRender", "toggleAttributeIfSupported", "inputControllerWillPerformFormatting", "activateAttributeIfSupported", "getTargetDOMRange", "minLength", "_this$event$getTarget", "_this$event", "targetRanges", "getTargetRanges", "staticRangeToRange", "withEvent", "command", "keyboardCommandFromKeyEvent", "shiftKey", "_event$clipboardData", "pasteEventHasFilesOnly", "pasteEventHasPlainTextOnly", "inputTypes", "immmediateRender", "inputEvent", "dragging", "pointFromEvent", "dragEventHasFiles", "ArrowLeft", "ArrowRight", "Backspace", "Tab", "deleteByComposition", "deleteByCut", "deleteByDrag", "deleteByDragRange", "deleteCompositionText", "deleteContent", "deleteContentBackward", "deleteContentForward", "deleteEntireSoftLine", "deleteHardLineBackward", "deleteHardLineForward", "deleteSoftLineBackward", "deleteSoftLineForward", "deleteWordBackward", "deleteWordForward", "formatBackColor", "formatBold", "formatFontColor", "formatFontName", "formatIndent", "formatItalic", "formatJustifyCenter", "formatJustifyFull", "formatJustifyLeft", "formatJustifyRight", "formatOutdent", "formatRemove", "_this$responder30", "formatSetBlockTextDirection", "formatSetInlineTextDirection", "formatStrikeThrough", "formatSubscript", "formatSuperscript", "formatUnderline", "historyRedo", "inputControllerWillPerformRedo", "historyUndo", "inputControllerWillPerformUndo", "insertCompositionText", "insertFromComposition", "insertFromDrop", "_this$responder31", "insertFromPaste", "_this$responder32", "_this$responder33", "processableFilePaste", "_this$responder34", "_this$responder35", "insertFromYank", "insertLink", "insertOrderedList", "insertParagraph", "_this$responder36", "insertReplacementText", "replacement", "_this$event$dataTrans", "insertTranspose", "insertUnorderedList", "staticRange", "_event$dataTransfer$f", "attributeButtonSelector", "actionButtonSelector", "toolbarButtonSelector", "dialogSelector", "activeDialogSelector", "dialogButtonSelector", "dialogInputSelector", "getInputForDialog", "getAttributeName", "getActionName", "ToolbarController", "didClickAttributeButton", "didClickDialogButton", "didKeyDownDialogInput", "actions", "resetDialogInputs", "toolbarDidClickButton", "actionName", "getDialog", "toggleDialog", "toolbarDidInvokeAction", "toolbarDidToggleAttribute", "refreshAttributeButtons", "dialogElement", "dialog", "hideDialog", "updateActions", "refreshActionButtons", "eachActionButton", "disabled", "updateAttributes", "eachAttributeButton", "dialogIsVisible", "applyKeyboardCommand", "keyString", "button", "buttonKeys", "dialogName", "showDialog", "toolbarWillShowDialog", "disabledInput", "toolbarDidShowDialog", "willValidate", "setCustomValidity", "checkValidity", "isSafeAttribute", "toolbarDidUpdateAttribute", "isValidAttribute", "toolbarDidRemoveAttribute", "toolbarDidHideDialog", "EditorController", "editorElement", "compositionController", "toolbarController", "toolbarElement", "editor", "notifyEditorElement", "handlingInput", "updateCurrentActions", "pasting", "pastedRange", "attachmentLocationRange", "loadingSnapshot", "isFocused", "requestedLocationRange", "compositionRevisionWhenLocationRangeRequested", "renderedCompositionRevision", "runEditorFilters", "isFocusedInvisibly", "requestedRender", "recordTypingUndoEntry", "recordFormattingUndoEntry", "locationRangeBeforeDrag", "invokingElement", "invokeAction", "selectionFrozen", "canInvokeAction", "actionIsExternal", "_this$actions$actionN", "_this$actions$actionN2", "getCurrentActions", "currentActions", "snapshotsAreEqual", "updateInputElement", "serializer", "setFormValue", "message", "documentChangedSinceLastRender", "notify", "getUndoContext", "getLocationContext", "getTimeContext", "Date", "getTime", "_this$editorElement$o", "ownerDocument", "TrixToolbarElement", "connectedCallback", "makeEditable", "configureContentEditable", "disableObjectResizing", "setDefaultParagraphSeparator", "_document$queryComman", "_document", "queryCommandSupported", "execCommand", "_document$queryComman2", "_document2", "cursorTargetStyles", "_internals", "WeakMap", "_validate", "WeakSet", "ElementInternalsDelegate", "_classPrivateFieldInitSpec", "writable", "_classPrivateFieldSet", "attachInternals", "_classPrivateMethodGet", "_validate2", "disconnectedCallback", "labels", "_classPrivateFieldGet", "_this$element$inputEl", "inputElement", "toggleAttribute", "required", "validity", "validationMessage", "reportValidity", "customValidationMessage", "valueMissing", "customError", "setValidity", "_focusHandler", "_resetBubbled", "_clickBubbled", "LegacyDelegate", "contains", "label", "texts", "_classPrivateFieldGet2", "console", "warn", "_delegate", "TrixEditorElement", "formAssociated", "localName", "_this$ownerDocument", "toolbarId", "_this$inputElement", "_this$ownerDocument2", "inputId", "nextElementSibling", "_this$editorControlle", "editorController", "_this$inputElement2", "_this$inputElement3", "defaultValue", "_this$editor", "_this$editorControlle2", "formDisabledCallback", "formResetCallback", "Trix", "VERSION", "version", "core", "models", "controllers", "observers", "customElements", "define"]
}
