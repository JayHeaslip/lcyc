{
  "version": 3,
  "sources": ["../../../node_modules/trix/src/trix/config/attachments.js", "../../../node_modules/trix/src/trix/config/block_attributes.js", "../../../node_modules/trix/src/trix/config/browser.js", "../../../node_modules/trix/src/trix/config/lang.js", "../../../node_modules/trix/src/trix/config/file_size_formatting.js", "../../../node_modules/trix/src/trix/constants.js", "../../../node_modules/trix/src/trix/core/helpers/extend.js", "../../../node_modules/trix/src/trix/core/helpers/dom.js", "../../../node_modules/trix/src/trix/config/input.js", "../../../node_modules/trix/src/trix/config/key_names.js", "../../../node_modules/trix/src/trix/config/parser.js", "../../../node_modules/trix/src/trix/config/text_attributes.js", "../../../node_modules/trix/src/trix/config/toolbar.js", "../../../node_modules/trix/src/trix/config/undo.js", "../../../node_modules/trix/src/trix/config/css.js", "../../../node_modules/trix/src/trix/core/basic_object.js", "../../../node_modules/trix/src/trix/core/utilities/utf16_string.js", "../../../node_modules/trix/src/trix/core/object.js", "../../../node_modules/trix/src/trix/core/helpers/arrays.js", "../../../node_modules/trix/src/trix/core/helpers/bidi.js", "../../../node_modules/trix/src/trix/core/helpers/config.js", "../../../node_modules/trix/src/trix/core/helpers/custom_elements.js", "../../../node_modules/trix/src/trix/core/helpers/events.js", "../../../node_modules/trix/src/trix/core/helpers/functions.js", "../../../node_modules/trix/src/trix/core/helpers/objects.js", "../../../node_modules/trix/src/trix/core/helpers/ranges.js", "../../../node_modules/trix/src/trix/observers/selection_change_observer.js", "../../../node_modules/trix/src/trix/core/helpers/strings.js", "../../../node_modules/trix/src/trix/core/collections/hash.js", "../../../node_modules/trix/src/trix/core/collections/object_group.js", "../../../node_modules/trix/src/trix/core/collections/object_map.js", "../../../node_modules/trix/src/trix/core/collections/element_store.js", "../../../node_modules/trix/src/trix/core/utilities/operation.js", "../../../node_modules/trix/src/trix/views/object_view.js", "../../../node_modules/trix/src/trix/models/html_sanitizer.js", "../../../node_modules/trix/src/trix/views/attachment_view.js", "../../../node_modules/trix/src/trix/views/previewable_attachment_view.js", "../../../node_modules/trix/src/trix/views/piece_view.js", "../../../node_modules/trix/src/trix/views/text_view.js", "../../../node_modules/trix/src/trix/views/block_view.js", "../../../node_modules/trix/src/trix/views/document_view.js", "../../../node_modules/trix/src/trix/models/piece.js", "../../../node_modules/trix/src/trix/operations/image_preload_operation.js", "../../../node_modules/trix/src/trix/models/attachment.js", "../../../node_modules/trix/src/trix/models/attachment_piece.js", "../../../node_modules/trix/src/trix/models/string_piece.js", "../../../node_modules/trix/src/trix/models/splittable_list.js", "../../../node_modules/trix/src/trix/models/text.js", "../../../node_modules/trix/src/trix/models/block.js", "../../../node_modules/trix/src/trix/models/document.js", "../../../node_modules/trix/src/trix/models/html_parser.js", "../../../node_modules/trix/src/trix/core/serialization.js", "../../../node_modules/trix/src/trix/models/managed_attachment.js", "../../../node_modules/trix/src/trix/models/attachment_manager.js", "../../../node_modules/trix/src/trix/models/line_break_insertion.js", "../../../node_modules/trix/src/trix/models/composition.js", "../../../node_modules/trix/src/trix/models/undo_manager.js", "../../../node_modules/trix/src/trix/filters/filter.js", "../../../node_modules/trix/src/trix/filters/attachment_gallery_filter.js", "../../../node_modules/trix/src/trix/models/editor.js", "../../../node_modules/trix/src/trix/models/location_mapper.js", "../../../node_modules/trix/src/trix/models/point_mapper.js", "../../../node_modules/trix/src/trix/models/selection_manager.js", "../../../node_modules/trix/src/trix/controllers/attachment_editor_controller.js", "../../../node_modules/trix/src/trix/controllers/composition_controller.js", "../../../node_modules/trix/src/trix/controllers/controller.js", "../../../node_modules/trix/src/trix/observers/mutation_observer.js", "../../../node_modules/trix/src/trix/operations/file_verification_operation.js", "../../../node_modules/trix/src/trix/models/flaky_android_keyboard_detector.js", "../../../node_modules/trix/src/trix/controllers/input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_0_input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_2_input_controller.js", "../../../node_modules/trix/src/trix/controllers/toolbar_controller.js", "../../../node_modules/trix/src/trix/controllers/editor_controller.js", "../../../node_modules/trix/src/trix/elements/trix_toolbar_element.js", "../../../node_modules/trix/src/trix/elements/trix_editor_element.js", "../../../node_modules/trix/src/trix/trix.js", "../../javascript/trix_extension.js"],
  "sourcesContent": ["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n", "const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n", "const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n", "export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n", "/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n", "export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n", "export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n", "import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n", "import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n", "export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n", "export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n", "import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n", "import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n", "const undo = { interval: 5000 }\nexport default undo\n", "export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n", "export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n", "import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n", "import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n", "/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    const { nonce, content } = element\n    return nonce == \"\" ? content : nonce\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n", "const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n\nexport function shouldRenderInmmediatelyToDealWithIOSDictation(inputEvent) {\n  if (/iPhone|iPad/.test(navigator.userAgent)) {\n    // Handle garbled content and duplicated newlines when using dictation on iOS 18+. Upon dictation completion, iOS sends\n    // the list of insertText / insertParagraph events in a quick sequence. If we don't render\n    // the editor synchronously, the internal range fails to update and results in garbled content or duplicated newlines.\n    //\n    // This workaround is necessary because iOS doesn't send composing events as expected while dictating:\n    // https://bugs.webkit.org/show_bug.cgi?id=261764\n    return !inputEvent.inputType || inputEvent.inputType === \"insertParagraph\"\n  } else {\n    return false\n  }\n}\n", "export const defer = (fn) => setTimeout(fn, 1)\n", "/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n", "/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n", "export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n", "export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n", "import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\nimport DOMPurify from \"dompurify\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static setHTML(element, html) {\n    const sanitizedElement = new this(html).sanitize()\n    const sanitizedHtml = sanitizedElement.getHTML ? sanitizedElement.getHTML() : sanitizedElement.outerHTML\n    element.innerHTML = sanitizedHtml\n  }\n\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    this.normalizeListElementNesting()\n    return DOMPurify.sanitize(this.body, { ADD_ATTR: [ \"language\" ], RETURN_DOM: true } )\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n", "import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      HTMLSanitizer.setHTML(innerElement, this.attachment.getContent())\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  HTMLSanitizer.setHTML(div, html || \"\")\n  return div.querySelector(tagName)\n}\n", "import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n", "/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n", "/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n", "import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n", "import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n", "import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n", "import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n", "import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n", "/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n", "/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      HTMLSanitizer.setHTML(this.containerElement, this.html)\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n", "/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n", "import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n", "import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n", "export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n", "import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n", "const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n", "import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n", "import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n", "/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n", "/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n", "/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n", "import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n", "import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n", "/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n", "import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n", "import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n", "import { getAllAttributeNames, shouldRenderInmmediatelyToDealWithIOSDictation, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      const immmediateRender = shouldRenderInmmediatelyToDealWithIOSDictation(event)\n\n      if (handler) {\n        this.withEvent(event, handler)\n\n        if (!immmediateRender) {\n          this.scheduleRender()\n        }\n      }\n\n      if (immmediateRender) {\n        this.render()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setFormValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n", "import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n", "import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nclass ElementInternalsDelegate {\n  #internals\n\n  constructor(element) {\n    this.element = element\n    this.#internals = element.attachInternals()\n  }\n\n  connectedCallback() {\n    this.#validate()\n  }\n\n  disconnectedCallback() {\n  }\n\n  get labels() {\n    return this.#internals.labels\n  }\n\n  get disabled() {\n    return this.element.inputElement?.disabled\n  }\n\n  set disabled(value) {\n    this.element.toggleAttribute(\"disabled\", value)\n  }\n\n  get required() {\n    return this.element.hasAttribute(\"required\")\n  }\n\n  set required(value) {\n    this.element.toggleAttribute(\"required\", value)\n    this.#validate()\n  }\n\n  get validity() {\n    return this.#internals.validity\n  }\n\n  get validationMessage() {\n    return this.#internals.validationMessage\n  }\n\n  get willValidate() {\n    return this.#internals.willValidate\n  }\n\n  setFormValue(value) {\n    this.#validate()\n  }\n\n  checkValidity() {\n    return this.#internals.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#internals.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#validate(validationMessage)\n  }\n\n  #validate(customValidationMessage = \"\") {\n    const { required, value } = this.element\n    const valueMissing = required && !value\n    const customError = !!customValidationMessage\n    const input = makeElement(\"input\", { required })\n    const validationMessage = customValidationMessage || input.validationMessage\n\n    this.#internals.setValidity({ valueMissing, customError }, validationMessage)\n  }\n}\n\nclass LegacyDelegate {\n  #focusHandler\n\n  constructor(element) {\n    this.element = element\n  }\n\n  connectedCallback() {\n    this.#focusHandler = ensureAriaLabel(this.element)\n    window.addEventListener(\"reset\", this.#resetBubbled, false)\n    window.addEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  disconnectedCallback() {\n    this.#focusHandler?.destroy()\n    window.removeEventListener(\"reset\", this.#resetBubbled, false)\n    window.removeEventListener(\"click\", this.#clickBubbled, false)\n  }\n\n  get labels() {\n    const labels = []\n    if (this.element.id && this.element.ownerDocument) {\n      labels.push(...Array.from(this.element.ownerDocument.querySelectorAll(`label[for='${this.element.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this.element, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this.element, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get disabled() {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set disabled(value) {\n    console.warn(\"This browser does not support the [disabled] attribute for trix-editor elements.\")\n  }\n\n  get required() {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n\n    return false\n  }\n\n  set required(value) {\n    console.warn(\"This browser does not support the [required] attribute for trix-editor elements.\")\n  }\n\n  get validity() {\n    console.warn(\"This browser does not support the validity property for trix-editor elements.\")\n    return null\n  }\n\n  get validationMessage() {\n    console.warn(\"This browser does not support the validationMessage property for trix-editor elements.\")\n\n    return \"\"\n  }\n\n  get willValidate() {\n    console.warn(\"This browser does not support the willValidate property for trix-editor elements.\")\n\n    return false\n  }\n\n  setFormValue(value) {\n  }\n\n  checkValidity() {\n    console.warn(\"This browser does not support checkValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  reportValidity() {\n    console.warn(\"This browser does not support reportValidity() for trix-editor elements.\")\n\n    return true\n  }\n\n  setCustomValidity(validationMessage) {\n    console.warn(\"This browser does not support setCustomValidity(validationMessage) for trix-editor elements.\")\n  }\n\n  #resetBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (event.target !== this.element.form) return\n    this.element.reset()\n  }\n\n  #clickBubbled = (event) => {\n    if (event.defaultPrevented) return\n    if (this.element.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    this.element.focus()\n  }\n}\n\nexport default class TrixEditorElement extends HTMLElement {\n  static formAssociated = \"ElementInternals\" in window\n\n  #delegate\n\n  constructor() {\n    super()\n    this.#delegate = this.constructor.formAssociated ?\n      new ElementInternalsDelegate(this) :\n      new LegacyDelegate(this)\n  }\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    return this.#delegate.labels\n  }\n\n  get disabled() {\n    return this.#delegate.disabled\n  }\n\n  set disabled(value) {\n    this.#delegate.disabled = value\n  }\n\n  get required() {\n    return this.#delegate.required\n  }\n\n  set required(value) {\n    this.#delegate.required = value\n  }\n\n  get validity() {\n    return this.#delegate.validity\n  }\n\n  get validationMessage() {\n    return this.#delegate.validationMessage\n  }\n\n  get willValidate() {\n    return this.#delegate.willValidate\n  }\n\n  get type() {\n    return this.localName\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setFormValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n      this.#delegate.setFormValue(value)\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.#delegate.connectedCallback()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.#delegate.disconnectedCallback()\n  }\n\n  // Form support\n\n  checkValidity() {\n    return this.#delegate.checkValidity()\n  }\n\n  reportValidity() {\n    return this.#delegate.reportValidity()\n  }\n\n  setCustomValidity(validationMessage) {\n    this.#delegate.setCustomValidity(validationMessage)\n  }\n\n  formDisabledCallback(disabled) {\n    if (this.inputElement) {\n      this.inputElement.disabled = disabled\n    }\n    this.toggleAttribute(\"contenteditable\", !disabled)\n  }\n\n  formResetCallback() {\n    this.reset()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n", "import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n", "import Trix from 'trix';\n\nwindow.Trix = Trix; // Don't need to bind to the window, but useful for debugging.\nTrix.config.toolbar.getDefaultHTML = toolbarDefaultHTML;\n\nvar lang$1 = {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption\u2026\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL\u2026\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\"\n};\n\nfunction toolbarDefaultHTML() {\n    const {lang} = Trix.config;\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n}\n"],
  "mappings": "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",
  "names": ["attachmentSelector", "attachments", "preview", "presentation", "caption", "name", "size", "file", "attributes", "default", "tagName", "parse", "quote", "nestable", "heading1", "terminal", "breakOnReturn", "group", "code", "htmlAttributes", "text", "plaintext", "bulletList", "bullet", "listAttribute", "test", "element", "parentNode", "this", "numberList", "number", "attachmentGallery", "exclusive", "_element$tagName", "toLowerCase", "androidVersionMatch", "navigator", "userAgent", "match", "androidVersion", "parseInt", "browser$1", "composesExistingText", "recentAndroid", "samsungAndroid", "forcesObjectResizing", "supportsInputEvents", "InputEvent", "every", "prop", "prototype", "lang$1", "attachFiles", "bold", "bullets", "byte", "bytes", "captionPlaceholder", "indent", "italic", "link", "numbers", "outdent", "redo", "remove", "strike", "undo", "unlink", "url", "urlPlaceholder", "GB", "KB", "MB", "PB", "TB", "sizes", "lang", "file_size_formatting", "prefix", "precision", "formatter", "concat", "base", "exp", "Math", "floor", "log", "withoutInsignificantZeros", "pow", "toFixed", "replace", "ZERO_WIDTH_SPACE", "NON_BREAKING_SPACE", "extend", "properties", "key", "value", "html", "document", "documentElement", "matches", "handleEvent", "eventName", "onElement", "matchingSelector", "withCallback", "inPhase", "preventDefault", "times", "arguments", "length", "undefined", "selector", "useCapture", "handler", "event", "destroy", "target", "findClosestElementFromNode", "call", "removeEventListener", "addEventListener", "triggerEvent", "bubbles", "cancelable", "createEvent", "initEvent", "dispatchEvent", "elementMatchesSelector", "nodeType", "node", "untilNode", "Node", "ELEMENT_NODE", "closest", "innerElementIsActive", "activeElement", "elementContainsNode", "findChildIndexOfNode", "_node", "childIndex", "previousSibling", "removeNode", "_node$parentNode", "removeChild", "walkTree", "tree", "onlyNodesOfType", "usingFilter", "expandEntityReferences", "whatToShow", "NodeFilter", "SHOW_ELEMENT", "SHOW_TEXT", "SHOW_COMMENT", "SHOW_ALL", "createTreeWalker", "makeElement", "tag", "options", "createElement", "editable", "contenteditable", "setAttribute", "style", "data", "dataset", "className", "split", "forEach", "classList", "add", "textContent", "childNodes", "childNode", "appendChild", "blockTagNames", "getBlockTagNames", "blockAttributes", "push", "nodeIsBlockContainer", "nodeIsBlockStartComment", "firstChild", "nodeIsBlockStart", "strict", "includes", "nodeIsCommentNode", "COMMENT_NODE", "nodeIsCursorTarget", "nodeIsTextNode", "trixCursorTarget", "nodeIsAttachmentElement", "nodeIsEmptyTextNode", "TEXT_NODE", "input", "level2Enabled", "getLevel", "browser", "pickFiles", "callback", "type", "multiple", "hidden", "id", "fileInputId", "files", "getElementById", "body", "click", "parser", "removeBlankTableCells", "tableCellSeparator", "tableRowSeparator", "text_attributes", "inheritable", "window", "getComputedStyle", "fontWeight", "fontStyle", "href", "groupTagName", "getAttribute", "frozen", "backgroundColor", "toolbar", "getDefaultHTML", "interval", "attachment", "attachmentCaption", "attachmentCaptionEditor", "attachmentMetadata", "attachmentMetadataContainer", "attachmentName", "attachmentProgress", "attachmentSize", "attachmentToolbar", "BasicObject", "expression", "toMethod", "toProperty", "optional", "parseProxyMethodExpression", "subject", "object", "_this$toMethod", "_object", "apply", "proxyMethodExpressionPattern", "Error", "args", "Function", "RegExp", "UTF16String", "box", "fromUCS2String", "toString", "ucs2String", "ucs2decode", "codepoints", "ucs2encode", "constructor", "super", "ucs2Length", "offsetToUCS2Offset", "offset", "slice", "max", "offsetFromUCS2Offset", "ucs2Offset", "fromCodepoints", "charAt", "isEqualTo", "toJSON", "getCacheKey", "hasArrayFrom", "_Array$from", "Array", "from", "hasStringCodePointAt", "_$codePointAt", "codePointAt", "hasStringFromCodePoint", "_String$fromCodePoint", "String", "fromCodePoint", "string", "map", "char", "output", "counter", "charCodeAt", "extra", "array", "result", "fromCharCode", "join", "TrixObject", "jsonString", "fromJSON", "JSON", "hasSameConstructorAs", "inspect", "parts", "contents", "contentsForInspection", "toJSONString", "stringify", "toUTF16String", "arraysAreEqual", "a", "b", "index", "spliceArray", "_len", "_key", "splice", "RTL_PATTERN", "getDirection", "dir", "dirName", "textArea", "form", "supportsDirName", "FormData", "has", "error", "supportsDirSelector", "get", "trim", "allAttributeNames", "blockAttributeNames", "textAttributeNames", "listAttributeNames", "getAllAttributeNames", "getTextAttributeNames", "getBlockAttributeNames", "getBlockConfig", "attributeName", "config", "Object", "keys", "getTextConfig", "installDefaultCSSForTagName", "defaultCSS", "insertStyleElementForTagName", "nonce", "getCSPNonce", "head", "insertBefore", "getMetaElement", "content", "querySelector", "testTransferData", "dataTransferIsPlainText", "dataTransfer", "getData", "DOMParser", "parseFromString", "keyEventIsKeyboardCommand", "platform", "metaKey", "ctrlKey", "defer", "fn", "setTimeout", "copyObject", "objectsAreEqual", "normalizeRange", "range", "isArray", "copyValue", "rangeIsCollapsed", "start", "end", "rangeValuesAreEqual", "rangesAreEqual", "leftRange", "rightRange", "leftStart", "leftEnd", "rightStart", "rightEnd", "left", "right", "SelectionChangeObserver", "update", "bind", "selectionManagers", "started", "stop", "registerSelectionManager", "selectionManager", "unregisterSelectionManager", "filter", "sm", "notifySelectionManagersOfSelectionChange", "selectionDidChange", "reset", "selectionChangeObserver", "getDOMSelection", "selection", "getSelection", "rangeCount", "getDOMRange", "_getDOMSelection", "domRange", "getRangeAt", "domRangeIsPrivate", "setDOMRange", "removeAllRanges", "addRange", "nodeIsPrivate", "startContainer", "endContainer", "getPrototypeOf", "normalizeSpaces", "breakableWhitespacePattern", "squishBreakableWhitespace", "source", "utf16StringDifferences", "diffA", "utf16StringDifference", "utf16String", "diffB", "leftIndex", "rightIndexA", "rightIndexB", "Hash", "fromCommonAttributesOfObjects", "objects", "hash", "getKeys", "getKeysCommonToHash", "values", "copy", "merge", "unbox", "toArray", "isEmpty", "toObject", "keyToRemove", "sort", "ObjectGroup", "groupObjects", "ungroupedObjects", "depth", "asTree", "_object$canBeGrouped2", "_object$canBeGrouped", "_group$canBeGroupedWi", "_group", "canBeGrouped", "canBeGroupedWith", "getObjects", "getDepth", "ObjectMap", "find", "ElementStore", "elements", "getKey", "trixStoreKey", "Operation", "isPerforming", "performing", "hasPerformed", "performed", "hasSucceeded", "succeeded", "hasFailed", "getPromise", "promise", "Promise", "resolve", "reject", "perform", "release", "_this$promise", "_this$promise$cancel", "cancel", "proxyMethod", "ObjectView", "childViews", "rootView", "getNodes", "nodes", "createNodes", "cloneNode", "invalidate", "_this$parentView", "parentView", "invalidateViewForObject", "_this$findViewForObje", "findViewForObject", "findOrCreateCachedChildView", "viewClass", "view", "getCachedViewForObject", "recordChildView", "createChildView", "cacheViewForObject", "ObjectGroupView", "getAllChildViews", "views", "childView", "findElement", "findElementForObject", "getViewCache", "isViewCachingEnabled", "viewCache", "shouldCacheViews", "enableViewCaching", "disableViewCaching", "_this$getViewCache", "cache", "garbageCollectCachedViews", "objectKeys", "objectGroup", "getChildViews", "createContainerElement", "DEFAULT_ALLOWED_ATTRIBUTES", "DEFAULT_FORBIDDEN_PROTOCOLS", "DEFAULT_FORBIDDEN_ELEMENTS", "HTMLSanitizer", "sanitizedElement", "sanitize", "sanitizedHtml", "getHTML", "outerHTML", "innerHTML", "sanitizer", "allowedAttributes", "forbiddenProtocols", "forbiddenElements", "createBodyElementForHTML", "sanitizeElements", "normalizeListElementNesting", "DOMPurify", "ADD_ATTR", "RETURN_DOM", "getBody", "walker", "nodesToRemove", "nextNode", "currentNode", "elementIsRemovable", "sanitizeElement", "hasAttribute", "protocol", "removeAttribute", "_ref", "indexOf", "querySelectorAll", "listElement", "previousElement", "previousElementSibling", "elementIsForbidden", "elementIsntSerializable", "doc", "implementation", "createHTMLDocument", "css", "AttachmentView", "uploadProgressDelegate", "attachmentPiece", "piece", "createContentNodes", "innerElement", "figure", "getClassName", "getHref", "tabindex", "hasContent", "setHTML", "getContent", "createCaptionElement", "isPending", "progressElement", "class", "getUploadProgress", "trixMutable", "createCursorTarget", "figcaption", "getCaption", "captionConfig", "getCaptionConfig", "getFilename", "getFormattedFilesize", "nameElement", "createTextNode", "sizeElement", "names", "getType", "extension", "getExtension", "trixAttachment", "trixContentType", "getContentType", "trixId", "trixAttributes", "trixSerialize", "htmlContainsTagName", "_config$attachments$t", "findProgressElement", "_this$findElement", "attachmentDidChangeUploadProgress", "div", "PreviewableAttachmentView", "previewDelegate", "image", "src", "refresh", "updateAttributesForImage", "getURL", "previewURL", "getPreviewURL", "serializedAttributes", "width", "getWidth", "height", "getHeight", "storeKey", "attachmentDidChangeAttributes", "PieceView", "getAttributes", "textConfig", "context", "createAttachmentNodes", "createStringNodes", "_element", "firstElementChild", "isPreviewable", "_this$textConfig", "iterable", "substring", "preserveSpaces", "styles", "pendingElement", "styleProperty", "isLast", "isFirst", "followsWhitespace", "TextView", "pieces", "getPieces", "lastIndex", "endsWithWhitespace", "previousPiece", "BlockView", "block", "createComment", "_getBlockConfig", "getLastAttribute", "textView", "shouldAddExtraNewlineElement", "isRTL", "assign", "getBlockBreakPosition", "entries", "DocumentView", "render", "sync", "elementStore", "setDocument", "shadowElement", "getBlocks", "isSynced", "elementsHaveEqualHTML", "fragment", "createDocumentFragmentForSync", "lastChild", "didSync", "findStoredElements", "createDocumentFragment", "storedElement", "replaceChild", "otherElement", "ignoreSpaces", "t", "e", "i", "n", "o", "s", "l", "r", "Piece", "types", "pieceJSON", "copyWithAttributes", "getValue", "copyWithAdditionalAttributes", "copyWithoutAttribute", "attribute", "getAttributesHash", "hasSameStringValueAsPiece", "hasSameAttributesAsPiece", "isBlockBreak", "isSerializable", "getLength", "canBeConsolidatedWith", "_defineProperty", "ImagePreloadOperation", "Image", "onload", "naturalWidth", "naturalHeight", "onerror", "Attachment", "attributesForFile", "setFile", "filename", "filesize", "contentType", "attachmentJSON", "releaseFile", "didChangeAttributes", "setAttributes", "newAttributes", "_this$previewDelegate", "_this$previewDelegate2", "_this$delegate", "_this$delegate$attach", "delegate", "preloadURL", "previewablePattern", "getFilesize", "_this$getFilename$mat", "getFile", "preloadFile", "releasePreloadedFile", "uploadProgress", "setUploadProgress", "_this$uploadProgressD", "_this$uploadProgressD2", "preloadingURL", "setPreviewURL", "_this$previewDelegate3", "_this$previewDelegate4", "_this$delegate2", "_this$delegate2$attac", "attachmentDidChangePreviewURL", "preload", "fileObjectURL", "URL", "createObjectURL", "revokeObjectURL", "then", "catch", "AttachmentPiece", "ensureAttachmentExclusivelyHasAttribute", "removeProhibitedAttributes", "permittedAttributes", "_piece$attachment", "json", "toConsole", "registerType", "StringPiece", "consolidateWith", "splitAtOffset", "SplittableList", "eachObject", "insertObjectAtIndex", "insertSplittableListAtIndex", "splittableList", "insertSplittableListAtPosition", "position", "splitObjectAtPosition", "editObjectAtIndex", "replaceObjectAtIndex", "removeObjectAtIndex", "getObjectAtIndex", "getSplittableListInRange", "rightIndex", "splitObjectsAtRange", "selectSplittableList", "removeObjectsInRange", "transformObjectsInRange", "transform", "transformedObjects", "rightOuterIndex", "leftInnerIndex", "startOfRange", "endOfRange", "getObjectAtPosition", "findIndexAndOffsetAtPosition", "splitIndex", "splitOffset", "leftObject", "rightObject", "consolidate", "pendingObject", "_pendingObject$canBeC", "_pendingObject", "consolidateFromIndexToIndex", "startIndex", "endIndex", "objectsInRange", "consolidatedInRange", "currentPosition", "nextPosition", "findPositionAtIndexAndOffset", "currentIndex", "getEndPosition", "endPosition", "objectArraysAreEqual", "Text", "textJSON", "notEmpty", "pieceList", "copyWithPieceList", "copyUsingObjectMap", "objectMap", "appendText", "insertTextAtPosition", "removeTextAtRange", "replaceTextAtRange", "moveTextFromRangeToPosition", "getTextAtRange", "addAttributeAtRange", "addAttributesAtRange", "removeAttributeAtRange", "setAttributesAtRange", "getAttributesAtPosition", "_this$pieceList$getOb", "getCommonAttributes", "getCommonAttributesAtRange", "getExpandedRangeForAttributeAtOffset", "getStringAtRange", "getStringAtPosition", "startsWithString", "endsWithString", "getAttachmentPieces", "getAttachments", "getAttachmentAndPositionById", "attachmentId", "getAttachmentById", "getRangeOfAttachment", "attachmentAndPosition", "updateAttributesForAttachment", "_text$pieceList", "eachPiece", "getPieceAtPosition", "toSerializableText", "Block", "blockJSON", "applyBlockBreakToText", "copyWithText", "copyWithoutText", "copyWithoutAttributes", "mappedText", "addAttribute", "expandAttribute", "addHTMLAttribute", "removeLastValue", "removeLastAttribute", "getLastElement", "getAttributeLevel", "getAttributeAtLevel", "level", "hasAttributes", "getLastNestableAttribute", "getNestableAttributes", "getNestingLevel", "decreaseNestingLevel", "increaseNestingLevel", "lastIndexOf", "getListItemAttributes", "isListItem", "isTerminalBlock", "_getBlockConfig2", "breaksOnReturn", "_getBlockConfig3", "findLineBreakInDirectionFromPosition", "direction", "newlineText", "textForStringWithAttributes", "getTextWithoutBlockBreak", "textEndsInBlockBreak", "otherBlock", "otherAttributes", "otherAttribute", "getListAttributeNames", "unmarkExistingInnerBlockBreaksInText", "addBlockBreakToText", "modified", "innerPieces", "lastPiece", "unmarkBlockBreakPiece", "blockBreakText", "blockBreak", "Document", "documentJSON", "textAttributes", "blocks", "blockList", "getBlockAtIndex", "consolidateBlocks", "copyUsingObjectsFromDocument", "sourceDocument", "copyWithBaseBlockAttributes", "replaceBlock", "oldBlock", "newBlock", "insertDocumentAtRange", "locationFromPosition", "getBlockAtPosition", "mergeDocumentAtRange", "formattedDocument", "startPosition", "startLocation", "baseBlockAttributes", "getBaseBlockAttributes", "trailingBlockAttributes", "leadingBlockAttributes", "blockCount", "getBlockCount", "firstBlock", "firstText", "insertTextAtRange", "leftPosition", "rightPosition", "leftLocation", "rightLocation", "locationRangeFromRange", "leftOffset", "leftBlock", "rightOffset", "rightBlock", "leftText", "rightText", "affectedBlockCount", "getDocumentAtRange", "movingRightward", "eachBlockAtRange", "textRange", "eachBlock", "getTextAtIndex", "removeAttributeForAttachment", "setHTMLAttributeAtPosition", "updatedBlock", "insertBlockBreakAtRange", "applyBlockAttributeAtRange", "expanded", "expandRangeToLineBreaksAndSplitBlocks", "blockConfig", "removeLastListAttributeAtRange", "exceptAttributeName", "converted", "convertLineBreaksToBlockBreaksInRange", "removeBlockAttributesAtRange", "removeLastTerminalAttributeAtRange", "consolidateBlocksAtRange", "lastAttributeName", "endLocation", "startBlock", "positionFromLocation", "endBlock", "_this$getBlockAtIndex", "getTextAtPosition", "getCharacterAtPosition", "getEditCount", "editCount", "getCommonAttributesAtPosition", "attributesForBlock", "commonAttributes", "attributesLeft", "inheritableAttributes", "getRangeOfCommonAttributeAtPosition", "startOffset", "endOffset", "blockIndex", "lastAttributeIndex", "min", "attachmentPieces", "getLocationRangeOfAttachment", "getAttachmentPieceForAttachment", "findRangesForBlockAttribute", "ranges", "findRangesForTextAttribute", "withValue", "location", "locationRangeFromPosition", "rangeFromLocationRange", "locationRange", "getTexts", "toSerializableDocument", "pieceForString", "parseTrixDataAttribute", "HTMLParser", "referenceElement", "blockElements", "processedElements", "getDocument", "createHiddenContainer", "containerElement", "nodeFilter", "processNode", "translateBlockElementMarginsToNewlines", "removeHiddenContainer", "display", "nextSibling", "isInsignificantTextNode", "appendBlockForTextNode", "processTextNode", "appendBlockForElement", "processElement", "currentBlockElement", "isBlockElement", "appendStringWithAttributes", "_this$currentBlock", "getBlockAttributes", "getBlockHTMLAttributes", "currentBlock", "appendBlockForAttributesWithElement", "elementIsBlockElement", "currentBlockContainsElement", "parentBlockElement", "findParentBlockElement", "appendEmptyBlock", "parentElement", "_node$previousSibling", "elementCanDisplayPreformattedText", "stringEndsWithWhitespace", "leftTrimBreakableWhitespace", "getTextAttributes", "appendAttachmentWithAttributes", "isExtraBR", "dimensions", "needsTableSeparator", "appendPiece", "appendStringToTextAtIndex", "prependStringToTextAtIndex", "unshift", "configAttr", "attributeInheritedFromBlock", "blockElement", "findBlockElementAncestors", "attrConfig", "_attrConfig$test", "reverse", "settings", "ancestors", "stringIsAllBreakableWhitespace", "nodeEndsWithNonWhitespace", "_element$previousSibl", "defaultMargin", "getMarginOfDefaultBlockElement", "margin", "getMarginOfBlockElementAtIndex", "top", "bottom", "getBlockElementMargin", "whiteSpace", "marginTop", "marginBottom", "FILTER_REJECT", "FILTER_ACCEPT", "unserializableAttributeNames", "serializedAttributesAttribute", "serializedAttributesSelector", "blockCommentPattern", "serializers", "serializable", "HTMLElement", "el", "ManagedAttachment", "attachmentManager", "requestRemovalOfAttachment", "AttachmentManager", "managedAttachments", "manageAttachment", "attachmentIsManaged", "attachmentManagerDidRequestRemovalOfAttachment", "unmanageAttachment", "managedAttachment", "LineBreakInsertion", "composition", "selectedRange", "getSelectedRange", "previousCharacter", "nextCharacter", "shouldInsertBlockBreak", "shouldBreakFormattedBlock", "shouldDecreaseListLevel", "shouldPrependListItem", "shouldRemoveLastBlockAttribute", "Composition", "currentAttributes", "revision", "_this$delegate$compos", "refreshAttachments", "compositionDidChangeDocument", "getSnapshot", "loadSnapshot", "_this$delegate2$compo", "_this$delegate3", "_this$delegate3$compo", "compositionWillLoadSnapshot", "setSelection", "compositionDidLoadSnapshot", "insertText", "updatePosition", "notifyDelegateOfInsertionAtRange", "insertBlock", "insertDocument", "insertString", "getCurrentTextAttributes", "insertBlockBreak", "insertLineBreak", "insertion", "decreaseListLevel", "removeLastBlockAttribute", "breakFormattedBlock", "insertHTML", "replaceHTML", "getLocationRange", "insertFile", "insertFiles", "_this$delegate4", "compositionShouldAcceptFile", "attachmentForFile", "insertAttachments", "insertAttachment", "attachmentText", "textForAttachmentWithAttributes", "shouldManageDeletingInDirection", "shouldManageMovingCursorInDirection", "deleteInDirection", "deletingIntoPreviousBlock", "selectionSpansBlocks", "selectionIsCollapsed", "canDecreaseBlockAttributeLevel", "getBlock", "decreaseBlockAttributeLevel", "getExpandedRangeInDirection", "getAttachmentAtRange", "editAttachment", "moveTextFromRange", "removeAttachment", "stopEditingAttachment", "removeCurrentAttribute", "insertPlaceholder", "placeholderPosition", "getPosition", "selectPlaceholder", "setSelectedRange", "PLACEHOLDER", "forgetPlaceholder", "hasCurrentAttribute", "toggleCurrentAttribute", "setCurrentAttribute", "canSetCurrentAttribute", "canSetCurrentBlockAttribute", "canSetCurrentTextAttribute", "getSelectedDocument", "setBlockAttribute", "setTextAttribute", "notifyDelegateOfCurrentAttributesChange", "setHTMLAtributeAtPosition", "allowedHTMLAttributes", "newDocument", "removeBlockAttribute", "updateCurrentAttributes", "removeTextAttribute", "canDecreaseNestingLevel", "_this$getBlock", "canIncreaseNestingLevel", "previousBlock", "getPreviousBlock", "_this$getBlock2", "_this$getBlock3", "attributeLevel", "ignoreLock", "getCurrentAttributes", "freezeSelection", "thawSelection", "hasFrozenSelection", "_this$delegate5", "compositionDidRequestChangingSelectionToLocationRange", "getSelectionManager", "setLocationRange", "targetLocationRange", "withTargetLocationRange", "withTargetRange", "withTargetDOMRange", "createLocationRangeFromDOMRange", "translateUTF16PositionFromOffset", "editingAttachment", "moveCursorInDirection", "canEditAttachment", "expandSelectionInDirection", "expandSelectionForEditing", "expandSelectionAroundCommonAttribute", "selectionContainsAttachments", "_this$getSelectedAtta", "getSelectedAttachments", "selectionIsInCursorTarget", "positionIsCursorTarget", "locationIsCursorTarget", "positionIsBlockBreak", "_this$document$getPie", "_this$getSelectedDocu", "added", "removed", "oldArray", "newArray", "existingValues", "Set", "currentValues", "_this$delegate6", "_this$delegate6$compo", "compositionDidRemoveAttachment", "_this$delegate7", "_this$delegate7$compo", "compositionDidAddAttachment", "_this$delegate8", "_this$delegate8$compo", "compositionDidEditAttachment", "_this$delegate9", "_this$delegate9$compo", "compositionDidChangeAttachmentPreviewURL", "_this$delegate10", "_this$delegate10$comp", "compositionDidStartEditingAttachment", "_this$delegate11", "_this$delegate11$comp", "compositionDidStopEditingAttachment", "_this$delegate12", "_this$delegate12$comp", "compositionDidChangeCurrentAttributes", "_this$delegate13", "_this$delegate13$comp", "compositionDidPerformInsertionAtRange", "utf16string", "utf16position", "UndoManager", "undoEntries", "redoEntries", "recordUndoEntry", "description", "consolidatable", "previousEntry", "entryHasDescriptionAndContext", "undoEntry", "createEntry", "pop", "redoEntry", "snapshot", "canUndo", "canRedo", "entry", "BLOCK_ATTRIBUTE_NAME", "Filter", "applyBlockAttribute", "findRangesOfBlocks", "findRangesOfPieces", "moveSelectedRangeForward", "attachmentGalleryFilter", "DEFAULT_FILTERS", "Editor", "undoManager", "filters", "loadDocument", "loadHTML", "loadJSON", "getClientRectAtPosition", "getClientRectAtLocationRange", "activateAttribute", "attributeIsActive", "canActivateAttribute", "deactivateAttribute", "LocationMapper", "findLocationFromContainerAndOffset", "container", "foundBlock", "attachmentElement", "findAttachmentElementParentForNode", "rejectAttachmentContents", "nodeLength", "findContainerAndOffsetFromLocation", "nodeOffset", "findNodeAndOffsetFromLocation", "getSignificantNodesForIndex", "acceptSignificantNodes", "recordingNodes", "rejectEmptyTextNodes", "PointMapper", "createDOMRangeFromPoint", "x", "y", "caretPositionFromPoint", "offsetNode", "createRange", "setStart", "caretRangeFromPoint", "createTextRange", "originalDOMRange", "moveToPoint", "select", "getClientRectsForDOMRange", "getClientRects", "SelectionManager", "didMouseDown", "locationMapper", "pointMapper", "lockCount", "currentLocationRange", "lockedLocationRange", "createDOMRangeFromLocationRange", "updateCurrentLocationRange", "setLocationRangeFromPointRange", "pointRange", "getLocationAtPoint", "lock", "unlock", "clearSelection", "_getDOMRange", "collapsed", "selectionIsExpanded", "domRangeWithinElement", "pauseTemporarily", "resumeHandlers", "paused", "resume", "clearTimeout", "resumeTimeout", "_this$delegate$locati", "locationRangeDidChange", "rangeStart", "rangeEnd", "setEnd", "point", "_this$createLocationR", "keyNames", "undoable", "commands", "do", "undos", "AttachmentEditorController", "title", "trixAction", "didClickToolbar", "didClickActionButton", "textarea", "placeholder", "textareaClone", "tabIndex", "autoresize", "scrollHeight", "didInputCaption", "didKeyDownCaption", "didChangeCaption", "didBlurCaption", "editingFigcaption", "editCaption", "focus", "install", "makeElementMutable", "addToolbar", "installCaptionEditor", "uninstall", "savePendingCaption", "didUninstallAttachmentEditor", "pendingCaption", "_this$delegate3$attac", "attachmentEditorDidRequestUpdatingAttributesForAttachment", "attachmentEditorDidRequestRemovingAttributeForAttachment", "stopPropagation", "attachmentEditorDidRequestRemovalOfAttachment", "_this$delegate5$attac", "keyCode", "attachmentEditorDidRequestDeselectingAttachment", "CompositionController", "didFocus", "didBlur", "didClickAttachment", "documentView", "_this$blurPromise", "focused", "compositionControllerDidFocus", "blurPromise", "compositionControllerDidBlur", "findAttachmentForElement", "compositionControllerDidSelectAttachment", "getSerializableElement", "isEditingAttachment", "_this$delegate4$compo", "_this$delegate5$compo", "canSyncDocumentView", "compositionControllerWillSyncDocumentView", "compositionControllerDidSyncDocumentView", "compositionControllerDidRender", "rerenderViewForObject", "refreshViewCache", "attachmentEditor", "installAttachmentEditorForAttachment", "_this$attachmentEdito", "uninstallAttachmentEditor", "_this$attachmentEdito2", "compositionControllerWillUpdateAttachment", "compositionControllerDidRequestRemovalOfAttachment", "compositionControllerDidRequestDeselectingAttachment", "Controller", "mutableAttributeName", "mutableSelector", "childList", "characterData", "characterDataOldValue", "subtree", "MutationObserver", "didMutate", "observer", "observe", "disconnect", "mutations", "_this$delegate$elemen", "findSignificantMutations", "elementDidMutate", "getMutationSummary", "mutation", "mutationIsSignificant", "nodeIsMutable", "nodesModifiedByMutation", "nodeIsSignificant", "addedNodes", "removedNodes", "getTextMutationSummary", "additions", "deletions", "getTextChangesFromCharacterData", "textChanges", "getTextChangesFromChildList", "addition", "summary", "textAdded", "deleted", "textDeleted", "getMutationsByType", "textRemoved", "getTextForNodes", "characterMutations", "startMutation", "endMutation", "summarized", "oldString", "newString", "oldValue", "FileVerificationOperation", "reader", "FileReader", "abort", "readAsArrayBuffer", "FlakyAndroidKeyboardDetector", "shouldIgnore", "previousEvent", "checkSamsungKeyboardBuggyModeStart", "checkSamsungKeyboardBuggyModeEnd", "buggyMode", "insertingLongTextAfterUnidentifiedChar", "differsInWhitespace", "innerText", "inputType", "_this$event$data", "isBeforeInputInsertText", "previousEventWasUnidentifiedKeydown", "_this$previousEvent", "_this$previousEvent2", "text1", "text2", "normalize", "whiteSpaceNormalizerRegexp", "InputController", "mutationObserver", "flakyKeyboardDetector", "events", "handlerFor", "mutationSummary", "editorWillSyncDocumentView", "editorDidSyncDocumentView", "requestRender", "_this$delegate$inputC", "inputControllerDidRequestRender", "requestReparse", "_this$delegate2$input", "inputControllerDidRequestReparse", "operations", "all", "handleInput", "_this$responder", "inputControllerWillAttachFiles", "responder", "defaultPrevented", "inputControllerWillHandleInput", "inputControllerDidHandleInput", "createLinkHTML", "pastedFileCount", "Level0InputController", "resetInputSummary", "setInputSummary", "inputSummary", "isComposing", "inputControllerDidAllowUnhandledInput", "mutationIsExpected", "preferDocument", "mutationAdditionMatchesSummary", "mutationDeletionMatchesSummary", "didDelete", "unexpectedNewlineAddition", "unexpectedNewlineDeletion", "_this$compositionInpu", "textChanged", "composedEmptyString", "compositionInput", "getEndData", "getCompositionInput", "CompositionInput", "isEnded", "_this$responder2", "serializeSelectionToDataTransfer", "_this$responder3", "setData", "canAcceptDataTransfer", "Files", "getPastedHTMLUsingHiddenElement", "pageXOffset", "pageYOffset", "opacity", "requestAnimationFrame", "keydown", "didInput", "keyName", "_context2", "modifier", "_context", "character", "inputControllerDidReceiveKeyboardCommand", "keypress", "altKey", "stringFromKeyEvent", "_this$responder9", "inputControllerWillPerformTyping", "textInput", "toUpperCase", "_this$responder10", "dragenter", "dragstart", "_this$delegate5$input", "draggedRange", "inputControllerDidStartDrag", "dragover", "draggingPoint", "clientX", "clientY", "_this$delegate6$input", "inputControllerDidReceiveDragOverPoint", "dragend", "_this$delegate7$input", "inputControllerDidCancelDrag", "drop", "_event$dataTransfer", "_this$responder11", "_this$responder12", "inputControllerWillMoveText", "_this$responder13", "fromJSONString", "cut", "_this$responder14", "clipboardData", "inputControllerWillCutText", "_this$responder15", "paste", "clipboard", "testClipboardData", "pasteEventIsCrippledSafariHTMLPaste", "_this$responder16", "inputControllerWillPaste", "inputControllerDidPaste", "_this$responder17", "_this$delegate14", "_this$responder18", "_this$delegate15", "_this$delegate16", "_this$responder19", "_this$delegate17", "_clipboard$items", "_clipboard$items$getA", "items", "getAsFile", "_this$delegate18", "_this$responder20", "_this$delegate19", "extensionForFile", "compositionstart", "compositionupdate", "compositionend", "beforeinput", "backspace", "_this$delegate20", "delete", "_this$delegate21", "return", "_this$delegate22", "_this$responder21", "tab", "_this$responder22", "_this$responder23", "_this$responder24", "_this$responder25", "control", "d", "_this$delegate23", "h", "_this$delegate24", "_this$delegate25", "_this$responder26", "shift", "_this$delegate26", "_this$responder27", "_this$responder28", "_this$responder29", "alt", "_this$delegate27", "meta", "_this$delegate28", "_file$type", "which", "charCode", "hasPasteboardFlavor", "hasReadableDynamicData", "isExternalHTMLPaste", "isExternalRichTextPaste", "inputController", "isSignificant", "_this$responder5", "_this$responder4", "canApplyToDocument", "_this$responder6", "_this$responder7", "_this$responder8", "_this$data$start", "_this$data$end", "Level2InputController", "scheduledRender", "composing", "reparse", "scheduleRender", "_this$afterRender", "cancelAnimationFrame", "afterRender", "toggleAttributeIfSupported", "inputControllerWillPerformFormatting", "activateAttributeIfSupported", "getTargetDOMRange", "minLength", "_this$event$getTarget", "_this$event", "targetRanges", "getTargetRanges", "staticRangeToRange", "withEvent", "command", "keyboardCommandFromKeyEvent", "shiftKey", "_event$clipboardData", "pasteEventHasFilesOnly", "pasteEventHasPlainTextOnly", "inputTypes", "immmediateRender", "inputEvent", "dragging", "pointFromEvent", "dragEventHasFiles", "ArrowLeft", "ArrowRight", "Backspace", "Tab", "deleteByComposition", "deleteByCut", "deleteByDrag", "deleteByDragRange", "deleteCompositionText", "deleteContent", "deleteContentBackward", "deleteContentForward", "deleteEntireSoftLine", "deleteHardLineBackward", "deleteHardLineForward", "deleteSoftLineBackward", "deleteSoftLineForward", "deleteWordBackward", "deleteWordForward", "formatBackColor", "formatBold", "formatFontColor", "formatFontName", "formatIndent", "formatItalic", "formatJustifyCenter", "formatJustifyFull", "formatJustifyLeft", "formatJustifyRight", "formatOutdent", "formatRemove", "_this$responder30", "formatSetBlockTextDirection", "formatSetInlineTextDirection", "formatStrikeThrough", "formatSubscript", "formatSuperscript", "formatUnderline", "historyRedo", "inputControllerWillPerformRedo", "historyUndo", "inputControllerWillPerformUndo", "insertCompositionText", "insertFromComposition", "insertFromDrop", "_this$responder31", "insertFromPaste", "_this$responder32", "_this$responder33", "processableFilePaste", "_this$responder34", "_this$responder35", "insertFromYank", "insertLink", "insertOrderedList", "insertParagraph", "_this$responder36", "insertReplacementText", "replacement", "_this$event$dataTrans", "insertTranspose", "insertUnorderedList", "staticRange", "_event$dataTransfer$f", "attributeButtonSelector", "actionButtonSelector", "toolbarButtonSelector", "dialogSelector", "activeDialogSelector", "dialogButtonSelector", "dialogInputSelector", "getInputForDialog", "getAttributeName", "getActionName", "ToolbarController", "didClickAttributeButton", "didClickDialogButton", "didKeyDownDialogInput", "actions", "resetDialogInputs", "toolbarDidClickButton", "actionName", "getDialog", "toggleDialog", "toolbarDidInvokeAction", "toolbarDidToggleAttribute", "refreshAttributeButtons", "dialogElement", "dialog", "hideDialog", "updateActions", "refreshActionButtons", "eachActionButton", "disabled", "updateAttributes", "eachAttributeButton", "dialogIsVisible", "applyKeyboardCommand", "keyString", "button", "buttonKeys", "dialogName", "showDialog", "toolbarWillShowDialog", "disabledInput", "toolbarDidShowDialog", "willValidate", "checkValidity", "toolbarDidUpdateAttribute", "toolbarDidRemoveAttribute", "toolbarDidHideDialog", "EditorController", "editorElement", "compositionController", "toolbarController", "toolbarElement", "editor", "notifyEditorElement", "handlingInput", "updateCurrentActions", "pasting", "pastedRange", "attachmentLocationRange", "loadingSnapshot", "isFocused", "requestedLocationRange", "compositionRevisionWhenLocationRangeRequested", "renderedCompositionRevision", "runEditorFilters", "isFocusedInvisibly", "requestedRender", "recordTypingUndoEntry", "recordFormattingUndoEntry", "locationRangeBeforeDrag", "invokingElement", "invokeAction", "selectionFrozen", "canInvokeAction", "actionIsExternal", "_this$actions$actionN", "_this$actions$actionN2", "getCurrentActions", "currentActions", "snapshotsAreEqual", "updateInputElement", "serializer", "setFormValue", "message", "documentChangedSinceLastRender", "notify", "getUndoContext", "getLocationContext", "getTimeContext", "Date", "getTime", "_this$editorElement$o", "ownerDocument", "TrixToolbarElement", "connectedCallback", "makeEditable", "configureContentEditable", "disableObjectResizing", "setDefaultParagraphSeparator", "_document$queryComman", "_document", "queryCommandSupported", "execCommand", "_document$queryComman2", "_document2", "cursorTargetStyles", "_internals", "WeakMap", "_validate", "WeakSet", "ElementInternalsDelegate", "_classPrivateFieldInitSpec", "writable", "_classPrivateFieldSet", "attachInternals", "_classPrivateMethodGet", "_validate2", "disconnectedCallback", "labels", "_classPrivateFieldGet", "_this$element$inputEl", "inputElement", "toggleAttribute", "required", "validity", "validationMessage", "reportValidity", "setCustomValidity", "customValidationMessage", "valueMissing", "customError", "setValidity", "_focusHandler", "_resetBubbled", "_clickBubbled", "LegacyDelegate", "contains", "label", "texts", "_classPrivateFieldGet2", "console", "warn", "_delegate", "TrixEditorElement", "formAssociated", "localName", "_this$ownerDocument", "toolbarId", "_this$inputElement", "_this$ownerDocument2", "inputId", "nextElementSibling", "_this$editorControlle", "editorController", "_this$inputElement2", "_this$inputElement3", "defaultValue", "_this$editor", "_this$editorControlle2", "formDisabledCallback", "formResetCallback", "Trix", "VERSION", "version", "core", "models", "controllers", "observers", "customElements", "define"]
}
