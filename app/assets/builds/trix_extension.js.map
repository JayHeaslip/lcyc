{
  "version": 3,
  "sources": ["../../../node_modules/trix/src/trix/config/attachments.js", "../../../node_modules/trix/src/trix/config/block_attributes.js", "../../../node_modules/trix/src/trix/config/browser.js", "../../../node_modules/trix/src/trix/config/lang.js", "../../../node_modules/trix/src/trix/config/file_size_formatting.js", "../../../node_modules/trix/src/trix/constants.js", "../../../node_modules/trix/src/trix/core/helpers/extend.js", "../../../node_modules/trix/src/trix/core/helpers/dom.js", "../../../node_modules/trix/src/trix/config/input.js", "../../../node_modules/trix/src/trix/config/key_names.js", "../../../node_modules/trix/src/trix/config/parser.js", "../../../node_modules/trix/src/trix/config/text_attributes.js", "../../../node_modules/trix/src/trix/config/toolbar.js", "../../../node_modules/trix/src/trix/config/undo.js", "../../../node_modules/trix/src/trix/config/css.js", "../../../node_modules/trix/src/trix/core/basic_object.js", "../../../node_modules/trix/src/trix/core/utilities/utf16_string.js", "../../../node_modules/trix/src/trix/core/object.js", "../../../node_modules/trix/src/trix/core/helpers/arrays.js", "../../../node_modules/trix/src/trix/core/helpers/bidi.js", "../../../node_modules/trix/src/trix/core/helpers/config.js", "../../../node_modules/trix/src/trix/core/helpers/custom_elements.js", "../../../node_modules/trix/src/trix/core/helpers/events.js", "../../../node_modules/trix/src/trix/core/helpers/functions.js", "../../../node_modules/trix/src/trix/core/helpers/objects.js", "../../../node_modules/trix/src/trix/core/helpers/ranges.js", "../../../node_modules/trix/src/trix/observers/selection_change_observer.js", "../../../node_modules/trix/src/trix/core/helpers/strings.js", "../../../node_modules/trix/src/trix/core/collections/hash.js", "../../../node_modules/trix/src/trix/core/collections/object_group.js", "../../../node_modules/trix/src/trix/core/collections/object_map.js", "../../../node_modules/trix/src/trix/core/collections/element_store.js", "../../../node_modules/trix/src/trix/core/utilities/operation.js", "../../../node_modules/trix/src/trix/views/object_view.js", "../../../node_modules/trix/src/trix/views/attachment_view.js", "../../../node_modules/trix/src/trix/views/previewable_attachment_view.js", "../../../node_modules/trix/src/trix/views/piece_view.js", "../../../node_modules/trix/src/trix/views/text_view.js", "../../../node_modules/trix/src/trix/views/block_view.js", "../../../node_modules/trix/src/trix/views/document_view.js", "../../../node_modules/trix/src/trix/models/piece.js", "../../../node_modules/trix/src/trix/operations/image_preload_operation.js", "../../../node_modules/trix/src/trix/models/attachment.js", "../../../node_modules/trix/src/trix/models/attachment_piece.js", "../../../node_modules/trix/src/trix/models/string_piece.js", "../../../node_modules/trix/src/trix/models/splittable_list.js", "../../../node_modules/trix/src/trix/models/text.js", "../../../node_modules/trix/src/trix/models/block.js", "../../../node_modules/trix/src/trix/models/document.js", "../../../node_modules/trix/src/trix/models/html_sanitizer.js", "../../../node_modules/trix/src/trix/models/html_parser.js", "../../../node_modules/trix/src/trix/core/serialization.js", "../../../node_modules/trix/src/trix/models/managed_attachment.js", "../../../node_modules/trix/src/trix/models/attachment_manager.js", "../../../node_modules/trix/src/trix/models/line_break_insertion.js", "../../../node_modules/trix/src/trix/models/composition.js", "../../../node_modules/trix/src/trix/models/undo_manager.js", "../../../node_modules/trix/src/trix/filters/filter.js", "../../../node_modules/trix/src/trix/filters/attachment_gallery_filter.js", "../../../node_modules/trix/src/trix/models/editor.js", "../../../node_modules/trix/src/trix/models/location_mapper.js", "../../../node_modules/trix/src/trix/models/point_mapper.js", "../../../node_modules/trix/src/trix/models/selection_manager.js", "../../../node_modules/trix/src/trix/controllers/attachment_editor_controller.js", "../../../node_modules/trix/src/trix/controllers/composition_controller.js", "../../../node_modules/trix/src/trix/controllers/controller.js", "../../../node_modules/trix/src/trix/observers/mutation_observer.js", "../../../node_modules/trix/src/trix/operations/file_verification_operation.js", "../../../node_modules/trix/src/trix/models/flaky_android_keyboard_detector.js", "../../../node_modules/trix/src/trix/controllers/input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_0_input_controller.js", "../../../node_modules/trix/src/trix/controllers/level_2_input_controller.js", "../../../node_modules/trix/src/trix/controllers/toolbar_controller.js", "../../../node_modules/trix/src/trix/controllers/editor_controller.js", "../../../node_modules/trix/src/trix/elements/trix_toolbar_element.js", "../../../node_modules/trix/src/trix/elements/trix_editor_element.js", "../../../node_modules/trix/src/trix/trix.js", "../../javascript/trix_extension.js"],
  "sourcesContent": ["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n", "const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    htmlAttributes: [ \"language\" ],\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return tagName(element.parentNode) === attributes[this.listAttribute].tagName\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n}\n\nconst tagName = (element) => element?.tagName?.toLowerCase()\n\nexport default attributes\n", "const androidVersionMatch = navigator.userAgent.match(/android\\s([0-9]+.*Chrome)/i)\nconst androidVersion = androidVersionMatch && parseInt(androidVersionMatch[1])\n\nexport default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n\n  // Android 13, especially on Samsung keyboards, emits extra compositionend and beforeinput events\n  // that can make the input handler lose the current selection or enter an infinite input -> render -> input\n  // loop.\n  recentAndroid: androidVersion && androidVersion > 12,\n  samsungAndroid: androidVersion && navigator.userAgent.match(/Android.*SM-/),\n\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: typeof InputEvent !== \"undefined\" &&\n    [ \"data\", \"getTargetRanges\", \"inputType\" ].every(prop => prop in InputEvent.prototype),\n}\n", "export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n", "/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n", "export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n", "export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n", "import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n", "import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n", "export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n", "export default {\n  removeBlankTableCells: false,\n  tableCellSeparator: \" | \",\n  tableRowSeparator: \"\\n\",\n}\n", "import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n", "import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n", "const undo = { interval: 5000 }\nexport default undo\n", "export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n", "export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n", "import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const textArea = makeElement(\"textarea\", { dir: \"auto\", name: \"y\", dirName: \"y.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n  form.appendChild(textArea)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(textArea.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      textArea.value = string\n      return new FormData(form).get(textArea.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n", "import * as config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n", "/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n", "const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsMsOfficePaste = ({ dataTransfer }) => {\n  return dataTransfer.types.includes(\"Files\") &&\n    dataTransfer.types.includes(\"text/html\") &&\n    dataTransfer.getData(\"text/html\").includes(\"urn:schemas-microsoft-com:office:office\")\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n", "export const defer = (fn) => setTimeout(fn, 1)\n", "/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n", "import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      document.addEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((sm) => sm !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    this.notifySelectionManagersOfSelectionChange()\n  }\n\n  reset() {\n    this.update()\n  }\n}\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n", "/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n?/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    Array.from(keys).forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n", "export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n", "export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n", "import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      innerElement.innerHTML = this.attachment.getContent()\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  div.innerHTML = html || \"\"\n  return div.querySelector(tagName)\n}\n", "import * as config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n", "/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n", "/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n", "import * as config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    const attributes = {}\n    let className\n    const attributeName = this.attributes[depth]\n\n    const { tagName, htmlAttributes = [] } = getBlockConfig(attributeName)\n\n    if (depth === 0 && this.block.isRTL()) {\n      Object.assign(attributes, { dir: \"rtl\" })\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    Object.entries(this.block.htmlAttributes).forEach(([ name, value ]) => {\n      if (htmlAttributes.includes(name)) {\n        attributes[name] = value\n      }\n    })\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n", "import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n", "import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|webp|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n", "import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice([ attribute ]))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n", "import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n", "/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n", "import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  objectsAreEqual,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes, blockJSON.htmlAttributes)\n  }\n\n  constructor(text, attributes, htmlAttributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n    this.htmlAttributes = htmlAttributes || {}\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes) && objectsAreEqual(this.htmlAttributes, block?.htmlAttributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes, this.htmlAttributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes, this.htmlAttributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  addHTMLAttribute(attribute, value) {\n    const htmlAttributes = Object.assign({}, this.htmlAttributes, { [attribute]: value })\n    return new Block(this.text, this.attributes, htmlAttributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n      htmlAttributes: this.htmlAttributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n", "import * as config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  setHTMLAttributeAtPosition(position, name, value) {\n    const block = this.getBlockAtPosition(position)\n    const updatedBlock = block.addHTMLAttribute(name, value)\n    return this.replaceBlock(block, updatedBlock)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray().map((block) => JSON.parse(block.text.toConsole())))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height language class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe form noscript\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n", "/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}, htmlAttributes = {}) => {\n  const text = []\n  return { text, attributes, htmlAttributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    const data = JSON.parse(element.getAttribute(`data-trix-${name}`))\n\n    if (data.contentType === \"text/html\" && data.content) {\n      data.content = HTMLSanitizer.sanitize(data.content).getHTML()\n    }\n\n    return data\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      const htmlAttributes = this.getBlockHTMLAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        const htmlAttributes = this.getBlockHTMLAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element, htmlAttributes)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableRowSeparator)\n          }\n          break\n        case \"td\":\n          if (this.needsTableSeparator(element)) {\n            return this.appendStringWithAttributes(config.parser.tableCellSeparator)\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element, htmlAttributes = {}) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes, htmlAttributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  getBlockHTMLAttributes(element) {\n    const attributes = {}\n    const blockConfig = Object.values(config.blockAttributes).find(settings => settings.tagName === tagName(element))\n    const allowedAttributes = blockConfig?.htmlAttributes || []\n\n    allowedAttributes.forEach((attribute) => {\n      if (element.hasAttribute(attribute)) {\n        attributes[attribute] = element.getAttribute(attribute)\n      }\n    })\n\n    return attributes\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  needsTableSeparator(element) {\n    if (config.parser.removeBlankTableCells) {\n      const content = element.previousSibling?.textContent\n      return content && /\\S/.test(content)\n    } else {\n      return element.previousSibling\n    }\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n", "/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n", "import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n", "import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n", "export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n", "import * as config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setHTMLAtributeAtPosition(position, attributeName, value) {\n    const block = this.document.getBlockAtPosition(position)\n    const allowedHTMLAttributes = getBlockConfig(block.getLastAttribute())?.htmlAttributes\n\n    if (block && allowedHTMLAttributes?.includes(attributeName)) {\n      const newDocument = this.document.setHTMLAttributeAtPosition(position, attributeName, value)\n      this.setDocument(newDocument)\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n", "import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n", "const BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nexport default class Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n", "import Filter from \"./filter\"\n\nexport const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\n", "import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // HTML attributes\n  setHTMLAtributeAtPosition(position, name, value) {\n    this.composition.setHTMLAtributeAtPosition(position, name, value)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n", "/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n", "/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n", "/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n", "import { removeNode } from \"trix/core/helpers\"\n\nimport * as config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName, triggerEvent } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption != null) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    triggerEvent(\"trix-attachment-before-toolbar\", { onElement: this.element, attributes: { toolbar: element, attachment: this.attachment } })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n", "import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n", "import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n", "/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n", "import * as config from \"trix/config\"\nimport { NON_BREAKING_SPACE, OBJECT_REPLACEMENT_CHARACTER, ZERO_WIDTH_SPACE } from \"trix/constants\"\n\n// Each software keyboard on Android emits its own set of events and some of them can be buggy.\n// This class detects when some buggy events are being emitted and lets know the input controller\n// that they should be ignored.\nexport default class FlakyAndroidKeyboardDetector {\n  constructor(element) {\n    this.element = element\n  }\n\n  shouldIgnore(event) {\n    if (!config.browser.samsungAndroid) return false\n\n    this.previousEvent = this.event\n    this.event = event\n\n    this.checkSamsungKeyboardBuggyModeStart()\n    this.checkSamsungKeyboardBuggyModeEnd()\n\n    return this.buggyMode\n  }\n\n  // private\n\n  // The Samsung keyboard on Android can enter a buggy state in which it emits a flurry of confused events that,\n  // if processed, corrupts the editor. The buggy mode always starts with an insertText event, right after a\n  // keydown event with for an \"Unidentified\" key, with the same text as the editor element, except for a few\n  // extra whitespace, or exotic utf8, characters.\n  checkSamsungKeyboardBuggyModeStart() {\n    if (this.insertingLongTextAfterUnidentifiedChar() && differsInWhitespace(this.element.innerText, this.event.data)) {\n      this.buggyMode = true\n      this.event.preventDefault()\n    }\n  }\n\n  // The flurry of buggy events are always insertText. If we see any other type, it means it's over.\n  checkSamsungKeyboardBuggyModeEnd() {\n    if (this.buggyMode && this.event.inputType !== \"insertText\") {\n      this.buggyMode = false\n    }\n  }\n\n  insertingLongTextAfterUnidentifiedChar() {\n    return this.isBeforeInputInsertText() && this.previousEventWasUnidentifiedKeydown() && this.event.data?.length > 50\n  }\n\n  isBeforeInputInsertText() {\n    return this.event.type === \"beforeinput\" && this.event.inputType === \"insertText\"\n  }\n\n  previousEventWasUnidentifiedKeydown() {\n    return this.previousEvent?.type === \"keydown\" && this.previousEvent?.key === \"Unidentified\"\n  }\n}\n\nconst differsInWhitespace = (text1, text2) => {\n  return normalize(text1) === normalize(text2)\n}\n\nconst whiteSpaceNormalizerRegexp = new RegExp(`(${OBJECT_REPLACEMENT_CHARACTER}|${ZERO_WIDTH_SPACE}|${NON_BREAKING_SPACE}|\\\\s)+`, \"g\")\nconst normalize = (text) => text.replace(whiteSpaceNormalizerRegexp, \" \").trim()\n", "import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\nimport FlakyAndroidKeyboardDetector from \"../models/flaky_android_keyboard_detector\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    this.flakyKeyboardDetector = new FlakyAndroidKeyboardDetector(this.element)\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            if (this.flakyKeyboardDetector.shouldIgnore(event)) return\n\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n", "import * as config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n", "import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\nimport * as config from \"trix/config\"\n\nimport { dataTransferIsMsOfficePaste, dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n\n      if (handler) {\n        this.withEvent(event, handler)\n        this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        if (!config.browser.recentAndroid) this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (processableFilePaste(this.event)) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      const replacement = this.event.dataTransfer.getData(\"text/plain\")\n      const domRange = this.event.getTargetRanges()[0]\n\n      this.withTargetDOMRange(domRange, () => {\n        this.insertString(replacement, { updatePosition: false })\n      })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: this.composing ? 1 : 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst processableFilePaste = (event) => {\n  // Paste events that only have files are handled by the paste event handler,\n  // to work around Safari not supporting beforeinput.insertFromPaste for files.\n\n  // MS Office text pastes include a file with a screenshot of the text, but we should\n  // handle them as text pastes.\n  return event.dataTransfer.files?.[0] && !pasteEventHasFilesOnly(event) && !dataTransferIsMsOfficePaste(event)\n}\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    const fileTypes = Array.from(clipboard.types).filter((type) => type.match(/file/i)) // \"Files\", \"application/x-moz-file\"\n    return fileTypes.length === clipboard.types.length && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n", "import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName, element)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n", "/* eslint-disable\n    id-length,\n*/\nimport * as config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName, invokingElement) {\n    return this.invokeAction(actionName, invokingElement)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName, invokingElement) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName, invokingElement })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undo.interval > 0) {\n      return Math.floor(new Date().getTime() / config.undo.interval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n", "import * as config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n", "import * as config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty:not(:focus)::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n", "import { version } from \"../../package.json\"\n\nimport * as config from \"trix/config\"\nimport * as core from \"trix/core\"\nimport * as models from \"trix/models\"\nimport * as views from \"trix/views\"\nimport * as controllers from \"trix/controllers\"\nimport * as observers from \"trix/observers\"\nimport * as operations from \"trix/operations\"\nimport * as elements from \"trix/elements\"\nimport * as filters from \"trix/filters\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n  core,\n  models,\n  views,\n  controllers,\n  observers,\n  operations,\n  elements,\n  filters\n}\n\n// Expose models under the Trix constant for compatibility with v1\nObject.assign(Trix, models)\n\nfunction start() {\n  if (!customElements.get(\"trix-toolbar\")) {\n    customElements.define(\"trix-toolbar\", elements.TrixToolbarElement)\n  }\n\n  if (!customElements.get(\"trix-editor\")) {\n    customElements.define(\"trix-editor\", elements.TrixEditorElement)\n  }\n}\n\nwindow.Trix = Trix\nsetTimeout(start, 0)\n\nexport default Trix\n", "import Trix from 'trix';\n\nwindow.Trix = Trix; // Don't need to bind to the window, but useful for debugging.\nTrix.config.toolbar.getDefaultHTML = toolbarDefaultHTML;\n\nvar lang$1 = {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption\u2026\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL\u2026\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\"\n};\n\nfunction toolbarDefaultHTML() {\n    const {lang} = Trix.config;\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n}\n"],
  "mappings": "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",
  "names": ["attachmentSelector", "attachments", "preview", "presentation", "caption", "name", "size", "file", "attributes", "default", "tagName", "parse", "quote", "nestable", "heading1", "terminal", "breakOnReturn", "group", "code", "htmlAttributes", "text", "plaintext", "bulletList", "bullet", "listAttribute", "test", "element", "parentNode", "this", "numberList", "number", "attachmentGallery", "exclusive", "_element$tagName", "toLowerCase", "androidVersionMatch", "navigator", "userAgent", "match", "androidVersion", "parseInt", "browser$1", "composesExistingText", "recentAndroid", "samsungAndroid", "forcesObjectResizing", "supportsInputEvents", "InputEvent", "every", "prop", "prototype", "lang$1", "attachFiles", "bold", "bullets", "byte", "bytes", "captionPlaceholder", "indent", "italic", "link", "numbers", "outdent", "redo", "remove", "strike", "undo", "unlink", "url", "urlPlaceholder", "GB", "KB", "MB", "PB", "TB", "sizes", "lang", "file_size_formatting", "prefix", "precision", "formatter", "concat", "base", "exp", "Math", "floor", "log", "withoutInsignificantZeros", "pow", "toFixed", "replace", "ZERO_WIDTH_SPACE", "NON_BREAKING_SPACE", "extend", "properties", "key", "value", "html", "document", "documentElement", "matches", "handleEvent", "eventName", "onElement", "matchingSelector", "withCallback", "inPhase", "preventDefault", "times", "arguments", "length", "undefined", "selector", "useCapture", "handler", "event", "destroy", "target", "findClosestElementFromNode", "call", "removeEventListener", "addEventListener", "triggerEvent", "bubbles", "cancelable", "createEvent", "initEvent", "dispatchEvent", "elementMatchesSelector", "nodeType", "node", "untilNode", "Node", "ELEMENT_NODE", "closest", "innerElementIsActive", "activeElement", "elementContainsNode", "findChildIndexOfNode", "_node", "childIndex", "previousSibling", "removeNode", "_node$parentNode", "removeChild", "walkTree", "tree", "onlyNodesOfType", "usingFilter", "expandEntityReferences", "whatToShow", "NodeFilter", "SHOW_ELEMENT", "SHOW_TEXT", "SHOW_COMMENT", "SHOW_ALL", "createTreeWalker", "makeElement", "tag", "options", "createElement", "editable", "contenteditable", "setAttribute", "style", "data", "dataset", "className", "split", "forEach", "classList", "add", "textContent", "childNodes", "childNode", "appendChild", "blockTagNames", "getBlockTagNames", "blockAttributes", "push", "nodeIsBlockContainer", "nodeIsBlockStartComment", "firstChild", "nodeIsBlockStart", "strict", "includes", "nodeIsCommentNode", "COMMENT_NODE", "nodeIsCursorTarget", "nodeIsTextNode", "trixCursorTarget", "nodeIsAttachmentElement", "nodeIsEmptyTextNode", "TEXT_NODE", "input", "level2Enabled", "getLevel", "browser", "pickFiles", "callback", "type", "multiple", "hidden", "id", "fileInputId", "files", "getElementById", "body", "click", "parser", "removeBlankTableCells", "tableCellSeparator", "tableRowSeparator", "text_attributes", "inheritable", "window", "getComputedStyle", "fontWeight", "fontStyle", "href", "groupTagName", "getAttribute", "frozen", "backgroundColor", "toolbar", "getDefaultHTML", "interval", "attachment", "attachmentCaption", "attachmentCaptionEditor", "attachmentMetadata", "attachmentMetadataContainer", "attachmentName", "attachmentProgress", "attachmentSize", "attachmentToolbar", "BasicObject", "expression", "toMethod", "toProperty", "optional", "parseProxyMethodExpression", "subject", "object", "_this$toMethod", "_object", "apply", "proxyMethodExpressionPattern", "Error", "args", "Function", "RegExp", "UTF16String", "box", "fromUCS2String", "toString", "ucs2String", "ucs2decode", "codepoints", "ucs2encode", "constructor", "super", "ucs2Length", "offsetToUCS2Offset", "offset", "slice", "max", "offsetFromUCS2Offset", "ucs2Offset", "fromCodepoints", "charAt", "isEqualTo", "toJSON", "getCacheKey", "hasArrayFrom", "_Array$from", "Array", "from", "hasStringCodePointAt", "_$codePointAt", "codePointAt", "hasStringFromCodePoint", "_String$fromCodePoint", "String", "fromCodePoint", "string", "map", "char", "output", "counter", "charCodeAt", "extra", "array", "result", "fromCharCode", "join", "TrixObject", "jsonString", "fromJSON", "JSON", "hasSameConstructorAs", "inspect", "parts", "contents", "contentsForInspection", "toJSONString", "stringify", "toUTF16String", "arraysAreEqual", "a", "b", "index", "spliceArray", "_len", "_key", "splice", "RTL_PATTERN", "getDirection", "dir", "dirName", "textArea", "form", "supportsDirName", "FormData", "has", "error", "supportsDirSelector", "get", "trim", "allAttributeNames", "blockAttributeNames", "textAttributeNames", "listAttributeNames", "getAllAttributeNames", "getTextAttributeNames", "getBlockAttributeNames", "getBlockConfig", "attributeName", "config", "Object", "keys", "getTextConfig", "installDefaultCSSForTagName", "defaultCSS", "insertStyleElementForTagName", "nonce", "getCSPNonce", "head", "insertBefore", "getMetaElement", "querySelector", "testTransferData", "dataTransferIsPlainText", "dataTransfer", "getData", "DOMParser", "parseFromString", "keyEventIsKeyboardCommand", "platform", "metaKey", "ctrlKey", "defer", "fn", "setTimeout", "copyObject", "objectsAreEqual", "normalizeRange", "range", "isArray", "copyValue", "rangeIsCollapsed", "start", "end", "rangeValuesAreEqual", "rangesAreEqual", "leftRange", "rightRange", "leftStart", "leftEnd", "rightStart", "rightEnd", "left", "right", "SelectionChangeObserver", "update", "bind", "selectionManagers", "started", "stop", "registerSelectionManager", "selectionManager", "unregisterSelectionManager", "filter", "sm", "notifySelectionManagersOfSelectionChange", "selectionDidChange", "reset", "selectionChangeObserver", "getDOMSelection", "selection", "getSelection", "rangeCount", "getDOMRange", "_getDOMSelection", "domRange", "getRangeAt", "domRangeIsPrivate", "setDOMRange", "removeAllRanges", "addRange", "nodeIsPrivate", "startContainer", "endContainer", "getPrototypeOf", "normalizeSpaces", "breakableWhitespacePattern", "squishBreakableWhitespace", "source", "utf16StringDifferences", "diffA", "utf16StringDifference", "utf16String", "diffB", "leftIndex", "rightIndexA", "rightIndexB", "Hash", "fromCommonAttributesOfObjects", "objects", "hash", "getKeys", "getKeysCommonToHash", "values", "copy", "merge", "unbox", "toArray", "isEmpty", "toObject", "keyToRemove", "sort", "ObjectGroup", "groupObjects", "ungroupedObjects", "depth", "asTree", "_object$canBeGrouped2", "_object$canBeGrouped", "_group$canBeGroupedWi", "_group", "canBeGrouped", "canBeGroupedWith", "getObjects", "getDepth", "ObjectMap", "find", "ElementStore", "elements", "getKey", "trixStoreKey", "Operation", "isPerforming", "performing", "hasPerformed", "performed", "hasSucceeded", "succeeded", "hasFailed", "getPromise", "promise", "Promise", "resolve", "reject", "perform", "release", "_this$promise", "_this$promise$cancel", "cancel", "proxyMethod", "ObjectView", "childViews", "rootView", "getNodes", "nodes", "createNodes", "cloneNode", "invalidate", "_this$parentView", "parentView", "invalidateViewForObject", "_this$findViewForObje", "findViewForObject", "findOrCreateCachedChildView", "viewClass", "view", "getCachedViewForObject", "recordChildView", "createChildView", "cacheViewForObject", "ObjectGroupView", "getAllChildViews", "views", "childView", "findElement", "findElementForObject", "getViewCache", "isViewCachingEnabled", "viewCache", "shouldCacheViews", "enableViewCaching", "disableViewCaching", "_this$getViewCache", "cache", "garbageCollectCachedViews", "objectKeys", "objectGroup", "getChildViews", "createContainerElement", "css", "AttachmentView", "uploadProgressDelegate", "attachmentPiece", "piece", "createContentNodes", "innerElement", "figure", "getClassName", "getHref", "tabindex", "hasContent", "innerHTML", "getContent", "createCaptionElement", "isPending", "progressElement", "class", "getUploadProgress", "trixMutable", "createCursorTarget", "figcaption", "getCaption", "captionConfig", "getCaptionConfig", "getFilename", "getFormattedFilesize", "nameElement", "createTextNode", "sizeElement", "names", "getType", "extension", "getExtension", "trixAttachment", "trixContentType", "getContentType", "trixId", "trixAttributes", "trixSerialize", "htmlContainsTagName", "_config$attachments$t", "findProgressElement", "_this$findElement", "attachmentDidChangeUploadProgress", "div", "PreviewableAttachmentView", "previewDelegate", "image", "src", "refresh", "updateAttributesForImage", "getURL", "previewURL", "getPreviewURL", "removeAttribute", "serializedAttributes", "width", "getWidth", "height", "getHeight", "storeKey", "attachmentDidChangeAttributes", "PieceView", "getAttributes", "textConfig", "context", "createAttachmentNodes", "createStringNodes", "_element", "firstElementChild", "isPreviewable", "_this$textConfig", "iterable", "substring", "preserveSpaces", "styles", "pendingElement", "styleProperty", "isLast", "isFirst", "followsWhitespace", "TextView", "pieces", "getPieces", "lastIndex", "endsWithWhitespace", "previousPiece", "hasAttribute", "BlockView", "block", "createComment", "_getBlockConfig", "getLastAttribute", "textView", "shouldAddExtraNewlineElement", "isRTL", "assign", "getBlockBreakPosition", "entries", "_ref", "DocumentView", "render", "sync", "elementStore", "setDocument", "shadowElement", "getBlocks", "isSynced", "elementsHaveEqualHTML", "fragment", "createDocumentFragmentForSync", "lastChild", "didSync", "findStoredElements", "createDocumentFragment", "storedElement", "replaceChild", "querySelectorAll", "otherElement", "ignoreSpaces", "t", "e", "i", "n", "o", "s", "l", "r", "Piece", "types", "pieceJSON", "copyWithAttributes", "getValue", "copyWithAdditionalAttributes", "copyWithoutAttribute", "attribute", "getAttributesHash", "hasSameStringValueAsPiece", "hasSameAttributesAsPiece", "isBlockBreak", "isSerializable", "getLength", "canBeConsolidatedWith", "_defineProperty", "ImagePreloadOperation", "Image", "onload", "naturalWidth", "naturalHeight", "onerror", "Attachment", "attributesForFile", "setFile", "filename", "filesize", "contentType", "attachmentJSON", "releaseFile", "didChangeAttributes", "setAttributes", "newAttributes", "_this$previewDelegate", "_this$previewDelegate2", "_this$delegate", "_this$delegate$attach", "delegate", "preloadURL", "previewablePattern", "getFilesize", "_this$getFilename$mat", "getFile", "preloadFile", "releasePreloadedFile", "uploadProgress", "setUploadProgress", "_this$uploadProgressD", "_this$uploadProgressD2", "preloadingURL", "setPreviewURL", "_this$previewDelegate3", "_this$previewDelegate4", "_this$delegate2", "_this$delegate2$attac", "attachmentDidChangePreviewURL", "preload", "fileObjectURL", "URL", "createObjectURL", "revokeObjectURL", "then", "catch", "AttachmentPiece", "ensureAttachmentExclusivelyHasAttribute", "removeProhibitedAttributes", "permittedAttributes", "_piece$attachment", "json", "toConsole", "registerType", "StringPiece", "consolidateWith", "splitAtOffset", "SplittableList", "indexOf", "eachObject", "insertObjectAtIndex", "insertSplittableListAtIndex", "splittableList", "insertSplittableListAtPosition", "position", "splitObjectAtPosition", "editObjectAtIndex", "replaceObjectAtIndex", "removeObjectAtIndex", "getObjectAtIndex", "getSplittableListInRange", "rightIndex", "splitObjectsAtRange", "selectSplittableList", "removeObjectsInRange", "transformObjectsInRange", "transform", "transformedObjects", "rightOuterIndex", "leftInnerIndex", "startOfRange", "endOfRange", "getObjectAtPosition", "findIndexAndOffsetAtPosition", "splitIndex", "splitOffset", "leftObject", "rightObject", "consolidate", "pendingObject", "_pendingObject$canBeC", "_pendingObject", "consolidateFromIndexToIndex", "startIndex", "endIndex", "objectsInRange", "consolidatedInRange", "currentPosition", "nextPosition", "findPositionAtIndexAndOffset", "currentIndex", "getEndPosition", "endPosition", "objectArraysAreEqual", "Text", "textJSON", "notEmpty", "pieceList", "copyWithPieceList", "copyUsingObjectMap", "objectMap", "appendText", "insertTextAtPosition", "removeTextAtRange", "replaceTextAtRange", "moveTextFromRangeToPosition", "getTextAtRange", "addAttributeAtRange", "addAttributesAtRange", "removeAttributeAtRange", "setAttributesAtRange", "getAttributesAtPosition", "_this$pieceList$getOb", "getCommonAttributes", "getCommonAttributesAtRange", "getExpandedRangeForAttributeAtOffset", "getStringAtRange", "getStringAtPosition", "startsWithString", "endsWithString", "getAttachmentPieces", "getAttachments", "getAttachmentAndPositionById", "attachmentId", "getAttachmentById", "getRangeOfAttachment", "attachmentAndPosition", "updateAttributesForAttachment", "_text$pieceList", "eachPiece", "getPieceAtPosition", "toSerializableText", "Block", "blockJSON", "applyBlockBreakToText", "copyWithText", "copyWithoutText", "copyWithoutAttributes", "mappedText", "addAttribute", "expandAttribute", "addHTMLAttribute", "removeLastValue", "removeLastAttribute", "getLastElement", "getAttributeLevel", "getAttributeAtLevel", "level", "hasAttributes", "getLastNestableAttribute", "getNestableAttributes", "getNestingLevel", "decreaseNestingLevel", "increaseNestingLevel", "lastIndexOf", "getListItemAttributes", "isListItem", "isTerminalBlock", "_getBlockConfig2", "breaksOnReturn", "_getBlockConfig3", "findLineBreakInDirectionFromPosition", "direction", "newlineText", "textForStringWithAttributes", "getTextWithoutBlockBreak", "textEndsInBlockBreak", "otherBlock", "otherAttributes", "otherAttribute", "getListAttributeNames", "unmarkExistingInnerBlockBreaksInText", "addBlockBreakToText", "modified", "innerPieces", "lastPiece", "unmarkBlockBreakPiece", "blockBreakText", "blockBreak", "Document", "documentJSON", "textAttributes", "blocks", "blockList", "getBlockAtIndex", "consolidateBlocks", "copyUsingObjectsFromDocument", "sourceDocument", "copyWithBaseBlockAttributes", "replaceBlock", "oldBlock", "newBlock", "insertDocumentAtRange", "locationFromPosition", "getBlockAtPosition", "mergeDocumentAtRange", "formattedDocument", "startPosition", "startLocation", "baseBlockAttributes", "getBaseBlockAttributes", "trailingBlockAttributes", "leadingBlockAttributes", "blockCount", "getBlockCount", "firstBlock", "firstText", "insertTextAtRange", "leftPosition", "rightPosition", "leftLocation", "rightLocation", "locationRangeFromRange", "leftOffset", "leftBlock", "rightOffset", "rightBlock", "leftText", "rightText", "affectedBlockCount", "getDocumentAtRange", "movingRightward", "eachBlockAtRange", "textRange", "eachBlock", "getTextAtIndex", "removeAttributeForAttachment", "setHTMLAttributeAtPosition", "updatedBlock", "insertBlockBreakAtRange", "applyBlockAttributeAtRange", "expanded", "expandRangeToLineBreaksAndSplitBlocks", "blockConfig", "removeLastListAttributeAtRange", "exceptAttributeName", "converted", "convertLineBreaksToBlockBreaksInRange", "removeBlockAttributesAtRange", "removeLastTerminalAttributeAtRange", "consolidateBlocksAtRange", "lastAttributeName", "endLocation", "startBlock", "positionFromLocation", "endBlock", "_this$getBlockAtIndex", "getTextAtPosition", "getCharacterAtPosition", "getEditCount", "editCount", "getCommonAttributesAtPosition", "attributesForBlock", "commonAttributes", "attributesLeft", "inheritableAttributes", "getRangeOfCommonAttributeAtPosition", "startOffset", "endOffset", "blockIndex", "lastAttributeIndex", "min", "attachmentPieces", "getLocationRangeOfAttachment", "getAttachmentPieceForAttachment", "findRangesForBlockAttribute", "ranges", "findRangesForTextAttribute", "withValue", "location", "locationRangeFromPosition", "rangeFromLocationRange", "locationRange", "getTexts", "toSerializableDocument", "DEFAULT_ALLOWED_ATTRIBUTES", "DEFAULT_FORBIDDEN_PROTOCOLS", "DEFAULT_FORBIDDEN_ELEMENTS", "HTMLSanitizer", "sanitizer", "sanitize", "allowedAttributes", "forbiddenProtocols", "forbiddenElements", "createBodyElementForHTML", "sanitizeElements", "normalizeListElementNesting", "getHTML", "getBody", "walker", "nodesToRemove", "nextNode", "currentNode", "elementIsRemovable", "sanitizeElement", "protocol", "listElement", "previousElement", "previousElementSibling", "elementIsForbidden", "elementIsntSerializable", "doc", "implementation", "createHTMLDocument", "pieceForString", "parseTrixDataAttribute", "content", "HTMLParser", "referenceElement", "blockElements", "processedElements", "getDocument", "createHiddenContainer", "containerElement", "nodeFilter", "processNode", "translateBlockElementMarginsToNewlines", "removeHiddenContainer", "display", "nextSibling", "isInsignificantTextNode", "appendBlockForTextNode", "processTextNode", "appendBlockForElement", "processElement", "currentBlockElement", "isBlockElement", "appendStringWithAttributes", "_this$currentBlock", "getBlockAttributes", "getBlockHTMLAttributes", "currentBlock", "appendBlockForAttributesWithElement", "elementIsBlockElement", "currentBlockContainsElement", "parentBlockElement", "findParentBlockElement", "appendEmptyBlock", "parentElement", "_node$previousSibling", "elementCanDisplayPreformattedText", "stringEndsWithWhitespace", "leftTrimBreakableWhitespace", "getTextAttributes", "appendAttachmentWithAttributes", "isExtraBR", "dimensions", "needsTableSeparator", "appendPiece", "appendStringToTextAtIndex", "prependStringToTextAtIndex", "unshift", "configAttr", "attributeInheritedFromBlock", "blockElement", "findBlockElementAncestors", "attrConfig", "_attrConfig$test", "reverse", "settings", "ancestors", "stringIsAllBreakableWhitespace", "nodeEndsWithNonWhitespace", "_element$previousSibl", "defaultMargin", "getMarginOfDefaultBlockElement", "margin", "getMarginOfBlockElementAtIndex", "top", "bottom", "getBlockElementMargin", "whiteSpace", "marginTop", "marginBottom", "FILTER_REJECT", "FILTER_ACCEPT", "unserializableAttributeNames", "serializedAttributesAttribute", "serializedAttributesSelector", "blockCommentPattern", "serializers", "serializable", "HTMLElement", "el", "ManagedAttachment", "attachmentManager", "requestRemovalOfAttachment", "AttachmentManager", "managedAttachments", "manageAttachment", "attachmentIsManaged", "attachmentManagerDidRequestRemovalOfAttachment", "unmanageAttachment", "managedAttachment", "LineBreakInsertion", "composition", "selectedRange", "getSelectedRange", "previousCharacter", "nextCharacter", "shouldInsertBlockBreak", "shouldBreakFormattedBlock", "shouldDecreaseListLevel", "shouldPrependListItem", "shouldRemoveLastBlockAttribute", "Composition", "currentAttributes", "revision", "_this$delegate$compos", "refreshAttachments", "compositionDidChangeDocument", "getSnapshot", "loadSnapshot", "_this$delegate2$compo", "_this$delegate3", "_this$delegate3$compo", "compositionWillLoadSnapshot", "setSelection", "compositionDidLoadSnapshot", "insertText", "updatePosition", "notifyDelegateOfInsertionAtRange", "insertBlock", "insertDocument", "insertString", "getCurrentTextAttributes", "insertBlockBreak", "insertLineBreak", "insertion", "decreaseListLevel", "removeLastBlockAttribute", "breakFormattedBlock", "insertHTML", "replaceHTML", "getLocationRange", "insertFile", "insertFiles", "_this$delegate4", "compositionShouldAcceptFile", "attachmentForFile", "insertAttachments", "insertAttachment", "attachmentText", "textForAttachmentWithAttributes", "shouldManageDeletingInDirection", "shouldManageMovingCursorInDirection", "deleteInDirection", "deletingIntoPreviousBlock", "selectionSpansBlocks", "selectionIsCollapsed", "canDecreaseBlockAttributeLevel", "getBlock", "decreaseBlockAttributeLevel", "getExpandedRangeInDirection", "getAttachmentAtRange", "editAttachment", "moveTextFromRange", "removeAttachment", "stopEditingAttachment", "removeCurrentAttribute", "insertPlaceholder", "placeholderPosition", "getPosition", "selectPlaceholder", "setSelectedRange", "PLACEHOLDER", "forgetPlaceholder", "hasCurrentAttribute", "toggleCurrentAttribute", "setCurrentAttribute", "canSetCurrentAttribute", "canSetCurrentBlockAttribute", "canSetCurrentTextAttribute", "getSelectedDocument", "setBlockAttribute", "setTextAttribute", "notifyDelegateOfCurrentAttributesChange", "setHTMLAtributeAtPosition", "allowedHTMLAttributes", "newDocument", "removeBlockAttribute", "updateCurrentAttributes", "removeTextAttribute", "canDecreaseNestingLevel", "_this$getBlock", "canIncreaseNestingLevel", "previousBlock", "getPreviousBlock", "_this$getBlock2", "_this$getBlock3", "attributeLevel", "ignoreLock", "getCurrentAttributes", "freezeSelection", "thawSelection", "hasFrozenSelection", "_this$delegate5", "compositionDidRequestChangingSelectionToLocationRange", "getSelectionManager", "setLocationRange", "targetLocationRange", "withTargetLocationRange", "withTargetRange", "withTargetDOMRange", "createLocationRangeFromDOMRange", "translateUTF16PositionFromOffset", "editingAttachment", "moveCursorInDirection", "canEditAttachment", "expandSelectionInDirection", "expandSelectionForEditing", "expandSelectionAroundCommonAttribute", "selectionContainsAttachments", "_this$getSelectedAtta", "getSelectedAttachments", "selectionIsInCursorTarget", "positionIsCursorTarget", "locationIsCursorTarget", "positionIsBlockBreak", "_this$document$getPie", "_this$getSelectedDocu", "added", "removed", "oldArray", "newArray", "existingValues", "Set", "currentValues", "_this$delegate6", "_this$delegate6$compo", "compositionDidRemoveAttachment", "_this$delegate7", "_this$delegate7$compo", "compositionDidAddAttachment", "_this$delegate8", "_this$delegate8$compo", "compositionDidEditAttachment", "_this$delegate9", "_this$delegate9$compo", "compositionDidChangeAttachmentPreviewURL", "_this$delegate10", "_this$delegate10$comp", "compositionDidStartEditingAttachment", "_this$delegate11", "_this$delegate11$comp", "compositionDidStopEditingAttachment", "_this$delegate12", "_this$delegate12$comp", "compositionDidChangeCurrentAttributes", "_this$delegate13", "_this$delegate13$comp", "compositionDidPerformInsertionAtRange", "utf16string", "utf16position", "UndoManager", "undoEntries", "redoEntries", "recordUndoEntry", "description", "consolidatable", "previousEntry", "entryHasDescriptionAndContext", "undoEntry", "createEntry", "pop", "redoEntry", "snapshot", "canUndo", "canRedo", "entry", "BLOCK_ATTRIBUTE_NAME", "Filter", "applyBlockAttribute", "findRangesOfBlocks", "findRangesOfPieces", "moveSelectedRangeForward", "attachmentGalleryFilter", "DEFAULT_FILTERS", "Editor", "undoManager", "filters", "loadDocument", "loadHTML", "loadJSON", "getClientRectAtPosition", "getClientRectAtLocationRange", "activateAttribute", "attributeIsActive", "canActivateAttribute", "deactivateAttribute", "LocationMapper", "findLocationFromContainerAndOffset", "container", "foundBlock", "attachmentElement", "findAttachmentElementParentForNode", "rejectAttachmentContents", "nodeLength", "findContainerAndOffsetFromLocation", "nodeOffset", "findNodeAndOffsetFromLocation", "getSignificantNodesForIndex", "acceptSignificantNodes", "recordingNodes", "rejectEmptyTextNodes", "PointMapper", "createDOMRangeFromPoint", "x", "y", "caretPositionFromPoint", "offsetNode", "createRange", "setStart", "caretRangeFromPoint", "createTextRange", "originalDOMRange", "moveToPoint", "select", "getClientRectsForDOMRange", "getClientRects", "SelectionManager", "didMouseDown", "locationMapper", "pointMapper", "lockCount", "currentLocationRange", "lockedLocationRange", "createDOMRangeFromLocationRange", "updateCurrentLocationRange", "setLocationRangeFromPointRange", "pointRange", "getLocationAtPoint", "lock", "unlock", "clearSelection", "_getDOMRange", "collapsed", "selectionIsExpanded", "domRangeWithinElement", "pauseTemporarily", "resumeHandlers", "paused", "resume", "clearTimeout", "resumeTimeout", "_this$delegate$locati", "locationRangeDidChange", "rangeStart", "rangeEnd", "setEnd", "point", "_this$createLocationR", "keyNames", "undoable", "commands", "do", "undos", "AttachmentEditorController", "title", "trixAction", "didClickToolbar", "didClickActionButton", "textarea", "placeholder", "textareaClone", "tabIndex", "autoresize", "scrollHeight", "didInputCaption", "didKeyDownCaption", "didChangeCaption", "didBlurCaption", "editingFigcaption", "editCaption", "focus", "install", "makeElementMutable", "addToolbar", "installCaptionEditor", "uninstall", "savePendingCaption", "didUninstallAttachmentEditor", "pendingCaption", "_this$delegate3$attac", "attachmentEditorDidRequestUpdatingAttributesForAttachment", "attachmentEditorDidRequestRemovingAttributeForAttachment", "stopPropagation", "attachmentEditorDidRequestRemovalOfAttachment", "_this$delegate5$attac", "keyCode", "attachmentEditorDidRequestDeselectingAttachment", "CompositionController", "didFocus", "didBlur", "didClickAttachment", "documentView", "_this$blurPromise", "focused", "compositionControllerDidFocus", "blurPromise", "compositionControllerDidBlur", "findAttachmentForElement", "compositionControllerDidSelectAttachment", "getSerializableElement", "isEditingAttachment", "_this$delegate4$compo", "_this$delegate5$compo", "canSyncDocumentView", "compositionControllerWillSyncDocumentView", "compositionControllerDidSyncDocumentView", "compositionControllerDidRender", "rerenderViewForObject", "refreshViewCache", "attachmentEditor", "installAttachmentEditorForAttachment", "_this$attachmentEdito", "uninstallAttachmentEditor", "_this$attachmentEdito2", "compositionControllerWillUpdateAttachment", "compositionControllerDidRequestRemovalOfAttachment", "compositionControllerDidRequestDeselectingAttachment", "Controller", "mutableAttributeName", "mutableSelector", "childList", "characterData", "characterDataOldValue", "subtree", "MutationObserver", "didMutate", "observer", "observe", "disconnect", "mutations", "_this$delegate$elemen", "findSignificantMutations", "elementDidMutate", "getMutationSummary", "mutation", "mutationIsSignificant", "nodeIsMutable", "nodesModifiedByMutation", "nodeIsSignificant", "addedNodes", "removedNodes", "getTextMutationSummary", "additions", "deletions", "getTextChangesFromCharacterData", "textChanges", "getTextChangesFromChildList", "addition", "summary", "textAdded", "deleted", "textDeleted", "getMutationsByType", "textRemoved", "getTextForNodes", "characterMutations", "startMutation", "endMutation", "summarized", "oldString", "newString", "oldValue", "FileVerificationOperation", "reader", "FileReader", "abort", "readAsArrayBuffer", "FlakyAndroidKeyboardDetector", "shouldIgnore", "previousEvent", "checkSamsungKeyboardBuggyModeStart", "checkSamsungKeyboardBuggyModeEnd", "buggyMode", "insertingLongTextAfterUnidentifiedChar", "differsInWhitespace", "innerText", "inputType", "_this$event$data", "isBeforeInputInsertText", "previousEventWasUnidentifiedKeydown", "_this$previousEvent", "_this$previousEvent2", "text1", "text2", "normalize", "whiteSpaceNormalizerRegexp", "InputController", "mutationObserver", "flakyKeyboardDetector", "events", "handlerFor", "mutationSummary", "editorWillSyncDocumentView", "editorDidSyncDocumentView", "requestRender", "_this$delegate$inputC", "inputControllerDidRequestRender", "requestReparse", "_this$delegate2$input", "inputControllerDidRequestReparse", "operations", "all", "handleInput", "_this$responder", "inputControllerWillAttachFiles", "responder", "defaultPrevented", "inputControllerWillHandleInput", "inputControllerDidHandleInput", "createLinkHTML", "outerHTML", "pastedFileCount", "Level0InputController", "resetInputSummary", "setInputSummary", "inputSummary", "isComposing", "inputControllerDidAllowUnhandledInput", "mutationIsExpected", "preferDocument", "mutationAdditionMatchesSummary", "mutationDeletionMatchesSummary", "didDelete", "unexpectedNewlineAddition", "unexpectedNewlineDeletion", "_this$compositionInpu", "textChanged", "composedEmptyString", "compositionInput", "getEndData", "getCompositionInput", "CompositionInput", "isEnded", "_this$responder2", "serializeSelectionToDataTransfer", "_this$responder3", "setData", "canAcceptDataTransfer", "Files", "getPastedHTMLUsingHiddenElement", "pageXOffset", "pageYOffset", "opacity", "requestAnimationFrame", "keydown", "didInput", "keyName", "_context2", "modifier", "_context", "character", "inputControllerDidReceiveKeyboardCommand", "keypress", "altKey", "stringFromKeyEvent", "_this$responder9", "inputControllerWillPerformTyping", "textInput", "toUpperCase", "_this$responder10", "dragenter", "dragstart", "_this$delegate5$input", "draggedRange", "inputControllerDidStartDrag", "dragover", "draggingPoint", "clientX", "clientY", "_this$delegate6$input", "inputControllerDidReceiveDragOverPoint", "dragend", "_this$delegate7$input", "inputControllerDidCancelDrag", "drop", "_event$dataTransfer", "_this$responder11", "_this$responder12", "inputControllerWillMoveText", "_this$responder13", "fromJSONString", "cut", "_this$responder14", "clipboardData", "inputControllerWillCutText", "_this$responder15", "paste", "clipboard", "testClipboardData", "pasteEventIsCrippledSafariHTMLPaste", "_this$responder16", "inputControllerWillPaste", "inputControllerDidPaste", "_this$responder17", "_this$delegate14", "_this$responder18", "_this$delegate15", "_this$delegate16", "_this$responder19", "_this$delegate17", "_clipboard$items", "_clipboard$items$getA", "items", "getAsFile", "_this$delegate18", "_this$responder20", "_this$delegate19", "extensionForFile", "compositionstart", "compositionupdate", "compositionend", "beforeinput", "backspace", "_this$delegate20", "delete", "_this$delegate21", "return", "_this$delegate22", "_this$responder21", "tab", "_this$responder22", "_this$responder23", "_this$responder24", "_this$responder25", "control", "d", "_this$delegate23", "h", "_this$delegate24", "_this$delegate25", "_this$responder26", "shift", "_this$delegate26", "_this$responder27", "_this$responder28", "_this$responder29", "alt", "_this$delegate27", "meta", "_this$delegate28", "_file$type", "which", "charCode", "hasPasteboardFlavor", "hasReadableDynamicData", "isExternalHTMLPaste", "isExternalRichTextPaste", "inputController", "isSignificant", "_this$responder5", "_this$responder4", "canApplyToDocument", "_this$responder6", "_this$responder7", "_this$responder8", "_this$data$start", "_this$data$end", "Level2InputController", "scheduledRender", "composing", "reparse", "scheduleRender", "_this$afterRender", "cancelAnimationFrame", "afterRender", "toggleAttributeIfSupported", "inputControllerWillPerformFormatting", "activateAttributeIfSupported", "getTargetDOMRange", "minLength", "_this$event$getTarget", "_this$event", "targetRanges", "getTargetRanges", "staticRangeToRange", "withEvent", "command", "keyboardCommandFromKeyEvent", "shiftKey", "_event$clipboardData", "pasteEventHasFilesOnly", "pasteEventHasPlainTextOnly", "inputTypes", "dragging", "pointFromEvent", "dragEventHasFiles", "ArrowLeft", "ArrowRight", "Backspace", "Tab", "deleteByComposition", "deleteByCut", "deleteByDrag", "deleteByDragRange", "deleteCompositionText", "deleteContent", "deleteContentBackward", "deleteContentForward", "deleteEntireSoftLine", "deleteHardLineBackward", "deleteHardLineForward", "deleteSoftLineBackward", "deleteSoftLineForward", "deleteWordBackward", "deleteWordForward", "formatBackColor", "formatBold", "formatFontColor", "formatFontName", "formatIndent", "formatItalic", "formatJustifyCenter", "formatJustifyFull", "formatJustifyLeft", "formatJustifyRight", "formatOutdent", "formatRemove", "_this$responder30", "formatSetBlockTextDirection", "formatSetInlineTextDirection", "formatStrikeThrough", "formatSubscript", "formatSuperscript", "formatUnderline", "historyRedo", "inputControllerWillPerformRedo", "historyUndo", "inputControllerWillPerformUndo", "insertCompositionText", "insertFromComposition", "insertFromDrop", "_this$responder31", "insertFromPaste", "_this$responder32", "_this$responder33", "processableFilePaste", "_this$responder34", "_this$responder35", "insertFromYank", "insertLink", "insertOrderedList", "insertParagraph", "_this$responder36", "insertReplacementText", "replacement", "_this$event$dataTrans", "insertTranspose", "insertUnorderedList", "staticRange", "_event$dataTransfer$f", "attributeButtonSelector", "actionButtonSelector", "toolbarButtonSelector", "dialogSelector", "activeDialogSelector", "dialogButtonSelector", "dialogInputSelector", "getInputForDialog", "getAttributeName", "getActionName", "ToolbarController", "didClickAttributeButton", "didClickDialogButton", "didKeyDownDialogInput", "actions", "resetDialogInputs", "toolbarDidClickButton", "actionName", "getDialog", "toggleDialog", "toolbarDidInvokeAction", "toolbarDidToggleAttribute", "refreshAttributeButtons", "dialogElement", "dialog", "hideDialog", "updateActions", "refreshActionButtons", "eachActionButton", "disabled", "updateAttributes", "eachAttributeButton", "dialogIsVisible", "applyKeyboardCommand", "keyString", "button", "buttonKeys", "dialogName", "showDialog", "toolbarWillShowDialog", "disabledInput", "toolbarDidShowDialog", "willValidate", "checkValidity", "toolbarDidUpdateAttribute", "toolbarDidRemoveAttribute", "toolbarDidHideDialog", "EditorController", "editorElement", "compositionController", "toolbarController", "toolbarElement", "editor", "notifyEditorElement", "handlingInput", "updateCurrentActions", "pasting", "pastedRange", "attachmentLocationRange", "loadingSnapshot", "isFocused", "requestedLocationRange", "compositionRevisionWhenLocationRangeRequested", "renderedCompositionRevision", "runEditorFilters", "isFocusedInvisibly", "requestedRender", "recordTypingUndoEntry", "recordFormattingUndoEntry", "locationRangeBeforeDrag", "invokingElement", "invokeAction", "selectionFrozen", "canInvokeAction", "actionIsExternal", "_this$actions$actionN", "_this$actions$actionN2", "getCurrentActions", "currentActions", "snapshotsAreEqual", "updateInputElement", "serializer", "setInputElementValue", "message", "documentChangedSinceLastRender", "notify", "getUndoContext", "getLocationContext", "getTimeContext", "Date", "getTime", "_this$editorElement$o", "ownerDocument", "TrixToolbarElement", "connectedCallback", "makeEditable", "configureContentEditable", "disableObjectResizing", "setDefaultParagraphSeparator", "_document$queryComman", "_document", "queryCommandSupported", "execCommand", "_document$queryComman2", "_document2", "cursorTargetStyles", "TrixEditorElement", "labels", "label", "_this$ownerDocument", "toolbarId", "_this$inputElement", "inputElement", "_this$ownerDocument2", "inputId", "nextElementSibling", "_this$editorControlle", "editorController", "_this$inputElement2", "_this$inputElement3", "defaultValue", "_this$editor", "texts", "contains", "registerResetListener", "registerClickListener", "disconnectedCallback", "_this$editorControlle2", "unregisterResetListener", "unregisterClickListener", "resetListener", "resetBubbled", "clickListener", "clickBubbled", "Trix", "VERSION", "version", "core", "models", "controllers", "observers", "customElements", "define"]
}
